<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>VanJay&#39;s Blog</title>
  <subtitle>成功不是将来才有的&lt;br&gt;而是决定去做的那一刻起&lt;br&gt;持续累积而成</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wangwanjie.github.io/"/>
  <updated>2017-03-20T02:49:28.000Z</updated>
  <id>https://wangwanjie.github.io/</id>
  
  <author>
    <name>VanJay</name>
    <email>wangwanjie1993@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>为 NexT 主题添加球型标签云</title>
    <link href="https://wangwanjie.github.io/2017/03/19/%E4%B8%BA-NexT-%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E7%90%83%E5%BD%A2%E6%A0%87%E7%AD%BE%E4%BA%91/"/>
    <id>https://wangwanjie.github.io/2017/03/19/为-NexT-主题添加球形标签云/</id>
    <published>2017-03-19T12:04:55.000Z</published>
    <updated>2017-03-20T02:49:28.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="确定你已开启标签功能"><a href="#确定你已开启标签功能" class="headerlink" title="确定你已开启标签功能"></a>确定你已开启标签功能</h2><p>参考 <code>NexT</code> 配置文档 <a href="https://theme-next.iissnan.com/theme-settings.html#tags-page" target="_blank" rel="external">添加标签页面</a> ，开启标签功能。</p>
<h2 id="了解球形标签云插件"><a href="#了解球形标签云插件" class="headerlink" title="了解球形标签云插件"></a>了解球形标签云插件</h2><p>了解球形标签云 <code>javascript</code> 插件，点击<a href="http://www.goat1000.com/tagcanvas.php" target="_blank" rel="external">这里</a></p>
<a id="more"></a>
<h2 id="下载插件"><a href="#下载插件" class="headerlink" title="下载插件"></a>下载插件</h2><p>下载 <code>js</code> 插件 <a href="http://www.goat1000.com/tagcanvas.js?2.8" target="_blank" rel="external"><code>tagcanvas.js</code></a></p>
<h2 id="放入对应目录"><a href="#放入对应目录" class="headerlink" title="放入对应目录"></a>放入对应目录</h2><p>将下载的 <code>tagcanvas.js</code> 放入主题目录 <code>themes/NexT/source/js/custom/tagcanvas.js</code>，<code>custom</code> 为新建文件夹。</p>
<h2 id="新建标签云文件，引用-js"><a href="#新建标签云文件，引用-js" class="headerlink" title="新建标签云文件，引用 js"></a>新建标签云文件，引用 <code>js</code></h2><p>在 <code>themes/NexT/layout/_partials</code> 下建一个 <code>plugin</code> 文件夹，在该目录下 <code>touch</code> 一个名为 <code>tagcanvas.swig</code> 的文件，并写入如下内容：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tags"</span> <span class="attr">id</span>=<span class="string">"myTags"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">width</span>=<span class="string">"350"</span> <span class="attr">height</span>=<span class="string">"350"</span> <span class="attr">id</span>=<span class="string">"my3DTags"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Anything in here will be replaced on browsers that support the canvas element<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tags"</span> <span class="attr">id</span>=<span class="string">"tags"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">style</span>=<span class="string">"display: none"</span>&gt;</span></div><div class="line">    &#123;&#123; tagcloud(&#123;</div><div class="line">      min_font: 16,</div><div class="line">      max_font: 35,</div><div class="line">      amount: 999,</div><div class="line">      color: true,</div><div class="line">      start_color: 'red',</div><div class="line">      end_color: 'red',</div><div class="line">    &#125;) &#125;&#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/custom/tagcanvas.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> &gt;</span><span class="javascript"></span></div><div class="line">  <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">      TagCanvas.Start(<span class="string">'my3DTags'</span>,<span class="string">'tags'</span>,&#123;</div><div class="line">        <span class="attr">textFont</span>: <span class="string">'Georgia,Optima'</span>,</div><div class="line">        <span class="attr">textColour</span>: <span class="literal">null</span>,</div><div class="line">        <span class="attr">outlineColour</span>: <span class="string">'black'</span>,</div><div class="line">        <span class="attr">weight</span>: <span class="literal">true</span>,</div><div class="line">        <span class="attr">reverse</span>: <span class="literal">true</span>,</div><div class="line">        <span class="attr">depth</span>: <span class="number">0.8</span>,</div><div class="line">        <span class="attr">maxSpeed</span>: <span class="number">0.05</span>,</div><div class="line">        <span class="attr">bgRadius</span>: <span class="number">1</span>,</div><div class="line">        <span class="attr">freezeDecel</span>: <span class="literal">true</span></div><div class="line">      &#125;);</div><div class="line">    &#125; <span class="keyword">catch</span>(e) &#123;</div><div class="line">      <span class="comment">// something went wrong, hide the canvas container</span></div><div class="line">      <span class="built_in">document</span>.getElementById(<span class="string">'myTags'</span>).style.display = <span class="string">'none'</span>;</div><div class="line">    &#125;</div><div class="line">  &#125;;</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="使用-tagcanvas-swig"><a href="#使用-tagcanvas-swig" class="headerlink" title="使用 tagcanvas.swig"></a>使用 <code>tagcanvas.swig</code></h2><p>在 <code>themes/NexT/layout/page.swig</code> 中作如下修改：<br><img src="/images/pages_tag.png"></p>
<p>替换红框中原来位置的 <code>div</code> 标签为如下：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&#123;# tagcanvas plugin 球型云标签 #&#125;</div><div class="line">&#123;% include '_partials/plugin/tagcanvas.swig' %&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;确定你已开启标签功能&quot;&gt;&lt;a href=&quot;#确定你已开启标签功能&quot; class=&quot;headerlink&quot; title=&quot;确定你已开启标签功能&quot;&gt;&lt;/a&gt;确定你已开启标签功能&lt;/h2&gt;&lt;p&gt;参考 &lt;code&gt;NexT&lt;/code&gt; 配置文档 &lt;a href=&quot;https://theme-next.iissnan.com/theme-settings.html#tags-page&quot;&gt;添加标签页面&lt;/a&gt; ，开启标签功能。&lt;/p&gt;
&lt;h2 id=&quot;了解球形标签云插件&quot;&gt;&lt;a href=&quot;#了解球形标签云插件&quot; class=&quot;headerlink&quot; title=&quot;了解球形标签云插件&quot;&gt;&lt;/a&gt;了解球形标签云插件&lt;/h2&gt;&lt;p&gt;了解球形标签云 &lt;code&gt;javascript&lt;/code&gt; 插件，点击&lt;a href=&quot;http://www.goat1000.com/tagcanvas.php&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Blog" scheme="https://wangwanjie.github.io/categories/Blog/"/>
    
    
      <category term="标签" scheme="https://wangwanjie.github.io/tags/%E6%A0%87%E7%AD%BE/"/>
    
      <category term="主题" scheme="https://wangwanjie.github.io/tags/%E4%B8%BB%E9%A2%98/"/>
    
      <category term="球形标签云" scheme="https://wangwanjie.github.io/tags/%E7%90%83%E5%BD%A2%E6%A0%87%E7%AD%BE%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>Mac 彻底卸载 MYSQL 解决疑难杂症</title>
    <link href="https://wangwanjie.github.io/2017/03/18/Mac-%E5%BD%BB%E5%BA%95%E5%8D%B8%E8%BD%BD-MYSQL-%E8%A7%A3%E5%86%B3%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    <id>https://wangwanjie.github.io/2017/03/18/Mac-彻底卸载-MYSQL-解决疑难杂症/</id>
    <published>2017-03-18T12:42:18.000Z</published>
    <updated>2017-03-20T08:50:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="备份数据库"><a href="#备份数据库" class="headerlink" title="备份数据库"></a>备份数据库</h2><p>备份看个人了，可以用软件如 <code>Navicat</code> 导出，也可以用 <code>mysqldump</code> 命令导出。</p>
<h2 id="kill-mysql相关进程"><a href="#kill-mysql相关进程" class="headerlink" title="kill mysql相关进程"></a>kill <code>mysql</code>相关进程</h2><p>终端运行 <code>ps -ax | grep mysql</code> 查看 <code>mysql</code> 相关进程， 有的话 <code>kill</code></p>
<a id="more"></a>
<h2 id="卸载-Homebrew-安装的mysql"><a href="#卸载-Homebrew-安装的mysql" class="headerlink" title="卸载 Homebrew 安装的mysql"></a>卸载 Homebrew 安装的mysql</h2><p>卸载全部以前用 <code>brew</code> 安装    的 <code>mysql</code>，先 <code>brew list</code> 查看安装的 <code>mysql</code> 版本，假如列出了 <code>mysql@5.5</code>， 则运行 <code>brew uninstall mysql@5.5</code>，卸载完后执行 <code>brew cleanup</code>。</p>
<h2 id="移除残留文件"><a href="#移除残留文件" class="headerlink" title="移除残留文件"></a>移除残留文件</h2><p>删除与 <code>mysql</code> 相关的文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo rm /usr/<span class="built_in">local</span>/mysql;</div><div class="line">sudo rm -rf /usr/<span class="built_in">local</span>/var/mysql;</div><div class="line">sudo rm -rf /usr/<span class="built_in">local</span>/mysql*;</div><div class="line">sudo rm -rf /Library/StartupItems/MySQLCOM;</div><div class="line">sudo rm -rf /Library/PreferencePanes/My*</div></pre></td></tr></table></figure>
<h2 id="移除残留自动登陆项"><a href="#移除残留自动登陆项" class="headerlink" title="移除残留自动登陆项"></a>移除残留自动登陆项</h2><p>移除自动登陆项，如果你安装过 <code>DMG</code> 版本的     <code>mysql</code>，则把以下命令中的 <code>LaunchAgents</code> 替换为 <code>LaunchDaemons</code> 再执行一次</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">launchctl unload -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist</div></pre></td></tr></table></figure>
<p><code>unload</code> 之后再删除该文件，</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo rm ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist</div><div class="line">或</div><div class="line">sudo rm ~/Library/LaunchDaemons/homebrew.mxcl.mysql.plist</div></pre></td></tr></table></figure>
<h2 id="移除残留配置"><a href="#移除残留配置" class="headerlink" title="移除残留配置"></a>移除残留配置</h2><p><code>subl /etc/hostconfig</code> `</p>
<p>后输入 <code>Remove the line MYSQLCOM=-YES-</code> ` </p>
<h2 id="移除残留偏好设置"><a href="#移除残留偏好设置" class="headerlink" title="移除残留偏好设置"></a>移除残留偏好设置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">rm -rf ~/Library/PreferencePanes/My*;</div><div class="line">sudo rm -rf /Library/Receipts/mysql*;</div><div class="line">sudo rm -rf /Library/Receipts/MySQL*;</div><div class="line">sudo rm -rf /private/var/db/receipts/*mysql*</div></pre></td></tr></table></figure>
<h2 id="重启电脑，重新安装-mysql"><a href="#重启电脑，重新安装-mysql" class="headerlink" title="重启电脑，重新安装 mysql"></a>重启电脑，重新安装 <code>mysql</code></h2><p>建议使用 <code>Homebrew</code> 安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">brew search mysql</div><div class="line">brew install 你要的版本</div></pre></td></tr></table></figure>
<h2 id="启动-mysql"><a href="#启动-mysql" class="headerlink" title="启动 mysql"></a>启动 <code>mysql</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql.server start</div></pre></td></tr></table></figure>
<p>如果报 <code>commond not found</code>，则在 <code>~/.zshrc</code> 或者 <code>~/.bashrc</code> 中加入以下两行（注意替换mysql路径）：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> MYSQL=/usr/<span class="built_in">local</span>/Cellar/mysql@5.6/5.6.35/support-files</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$MYSQL</span>:<span class="variable">$PATH</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;备份数据库&quot;&gt;&lt;a href=&quot;#备份数据库&quot; class=&quot;headerlink&quot; title=&quot;备份数据库&quot;&gt;&lt;/a&gt;备份数据库&lt;/h2&gt;&lt;p&gt;备份看个人了，可以用软件如 &lt;code&gt;Navicat&lt;/code&gt; 导出，也可以用 &lt;code&gt;mysqldump&lt;/code&gt; 命令导出。&lt;/p&gt;
&lt;h2 id=&quot;kill-mysql相关进程&quot;&gt;&lt;a href=&quot;#kill-mysql相关进程&quot; class=&quot;headerlink&quot; title=&quot;kill mysql相关进程&quot;&gt;&lt;/a&gt;kill &lt;code&gt;mysql&lt;/code&gt;相关进程&lt;/h2&gt;&lt;p&gt;终端运行 &lt;code&gt;ps -ax | grep mysql&lt;/code&gt; 查看 &lt;code&gt;mysql&lt;/code&gt; 相关进程， 有的话 &lt;code&gt;kill&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="系统疑难" scheme="https://wangwanjie.github.io/categories/%E7%B3%BB%E7%BB%9F%E7%96%91%E9%9A%BE/"/>
    
    
      <category term="MYSQL" scheme="https://wangwanjie.github.io/tags/MYSQL/"/>
    
      <category term="Mac" scheme="https://wangwanjie.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 中为多说添加最近访客</title>
    <link href="https://wangwanjie.github.io/2017/03/17/Hexo-%E4%B8%AD%E4%B8%BA%E5%A4%9A%E8%AF%B4%E6%B7%BB%E5%8A%A0%E6%9C%80%E8%BF%91%E8%AE%BF%E5%AE%A2/"/>
    <id>https://wangwanjie.github.io/2017/03/17/Hexo-中为多说添加最近访客/</id>
    <published>2017-03-17T11:06:02.000Z</published>
    <updated>2017-03-18T01:39:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="添加自定义样式"><a href="#添加自定义样式" class="headerlink" title="添加自定义样式"></a>添加自定义样式</h2><h3 id="1-多说后台添加"><a href="#1-多说后台添加" class="headerlink" title="1. 多说后台添加"></a>1. 多说后台添加</h3><p>到多说后台管理-&gt;设置-&gt;基本设置-&gt;自定义css中添加如下css样式：</p>
<a id="more"></a>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">#ds-reset .ds-avatar img,</div><div class="line">#ds-recent-visitors .ds-avatar img &#123;</div><div class="line">width: 54px;</div><div class="line">height: 54px;     /*设置图像的长和宽，这里要根据自己的评论框情况更改*/</div><div class="line">border-radius: 27px;     /*设置图像圆角效果,在这里我直接设置了超过width/2的像素，即为圆形了*/</div><div class="line">-webkit-border-radius: 27px;     /*圆角效果：兼容webkit浏览器*/</div><div class="line">-moz-border-radius: 27px;</div><div class="line">box-shadow: inset 0 -1px 0 #3333sf;     /*设置图像阴影效果*/</div><div class="line">-webkit-box-shadow: inset 0 -1px 0 #3333sf;</div><div class="line">-webkit-transition: 0.4s;</div><div class="line">-webkit-transition: -webkit-transform 0.4s ease-out;</div><div class="line">transition: transform 0.4s ease-out;     /*变化时间设置为0.4秒(变化动作即为下面的图像旋转360读）*/</div><div class="line">-moz-transition: -moz-transform 0.4s ease-out;</div><div class="line">&#125;</div><div class="line"></div><div class="line">#ds-reset .ds-avatar img:hover,</div><div class="line">#ds-recent-visitors .ds-avatar img:hover &#123;</div><div class="line"></div><div class="line">/*设置鼠标悬浮在头像时的CSS样式*/    box-shadow: 0 0 10px #fff;</div><div class="line">rgba(255, 255, 255, .6), inset 0 0 20px rgba(255, 255, 255, 1);</div><div class="line">-webkit-box-shadow: 0 0 10px #fff;</div><div class="line">rgba(255, 255, 255, .6), inset 0 0 20px rgba(255, 255, 255, 1);</div><div class="line">transform: rotateZ(360deg);     /*图像旋转360度*/</div><div class="line">-webkit-transform: rotateZ(360deg);</div><div class="line">-moz-transform: rotateZ(360deg);</div><div class="line">&#125;</div><div class="line">/*</div><div class="line">#ds-thread #ds-reset .ds-textarea-wrapper textarea &#123;</div><div class="line">background: url(http://www.wuxubj.cn/images/duoshuo_bkground.jpg) right no-repeat;</div><div class="line">&#125;</div><div class="line">*/</div><div class="line">#ds-recent-visitors .ds-avatar &#123;</div><div class="line">float: left</div><div class="line">&#125;</div><div class="line">/*隐藏多说底部版权*/</div><div class="line">#ds-thread #ds-reset .ds-powered-by &#123;</div><div class="line">display: none;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="2-Hexo-本地添加自定义CSS（推荐）"><a href="#2-Hexo-本地添加自定义CSS（推荐）" class="headerlink" title="2. Hexo 本地添加自定义CSS（推荐）"></a>2. Hexo 本地添加自定义CSS（推荐）</h3><p>打开<br> <code>/themes/NexT/layout/_custom/header.swig</code><br>或者<br> <code>themes/NexT/source/css/_custom/custom.styl</code><br>输入以下内容（<code>custom.styl</code> 可省略 <code>style</code> 标签）:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></div><div class="line">#ds-reset .ds-avatar img,</div><div class="line">#ds-recent-visitors .ds-avatar img &#123;</div><div class="line">width: 54px;</div><div class="line">height: 54px;     /*设置图像的长和宽，这里要根据自己的评论框情况更改*/</div><div class="line">border-radius: 27px;     /*设置图像圆角效果,在这里我直接设置了超过width/2的像素，即为圆形了*/</div><div class="line">-webkit-border-radius: 27px;     /*圆角效果：兼容webkit浏览器*/</div><div class="line">-moz-border-radius: 27px;</div><div class="line">box-shadow: inset 0 -1px 0 #3333sf;     /*设置图像阴影效果*/</div><div class="line">-webkit-box-shadow: inset 0 -1px 0 #3333sf;</div><div class="line">-webkit-transition: 0.4s;</div><div class="line">-webkit-transition: -webkit-transform 0.4s ease-out;</div><div class="line">transition: transform 0.4s ease-out;     /*变化时间设置为0.4秒(变化动作即为下面的图像旋转360读）*/</div><div class="line">-moz-transition: -moz-transform 0.4s ease-out;</div><div class="line">&#125;</div><div class="line">#ds-reset .ds-avatar img:hover,</div><div class="line">#ds-recent-visitors .ds-avatar img:hover &#123;</div><div class="line">/*设置鼠标悬浮在头像时的CSS样式*/    box-shadow: 0 0 10px #fff;</div><div class="line">rgba(255, 255, 255, .6), inset 0 0 20px rgba(255, 255, 255, 1);</div><div class="line">-webkit-box-shadow: 0 0 10px #fff;</div><div class="line">rgba(255, 255, 255, .6), inset 0 0 20px rgba(255, 255, 255, 1);</div><div class="line">transform: rotateZ(360deg);     /*图像旋转360度*/</div><div class="line">-webkit-transform: rotateZ(360deg);</div><div class="line">-moz-transform: rotateZ(360deg);</div><div class="line">&#125;</div><div class="line">/*</div><div class="line">#ds-thread #ds-reset .ds-textarea-wrapper textarea &#123;</div><div class="line">background: url(http://www.wuxubj.cn/images/duoshuo_bkground.jpg) right no-repeat;</div><div class="line">&#125;</div><div class="line">*/</div><div class="line">#ds-recent-visitors .ds-avatar &#123;</div><div class="line">float: left</div><div class="line">&#125;</div><div class="line">/*隐藏多说底部版权*/</div><div class="line">#ds-thread #ds-reset .ds-powered-by &#123;</div><div class="line">display: none;</div><div class="line">&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="添加-dom"><a href="#添加-dom" class="headerlink" title="添加 dom"></a>添加 dom</h2><p>在需要添加最近访客的网页对应的 markdown 文件中添加如下代码：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt; 最近访客</div><div class="line">&lt;div class="ds-recent-visitors" data-num-items="28" data-avatar-size="42" id="ds-recent-visitors"&gt;&lt;/div&gt;</div><div class="line">&lt;br/&gt;</div></pre></td></tr></table></figure>
<h2 id="添加最近访客-dom-到模板文件中（此做法更新抛弃，采用下面做法）"><a href="#添加最近访客-dom-到模板文件中（此做法更新抛弃，采用下面做法）" class="headerlink" title="添加最近访客 dom 到模板文件中（此做法更新抛弃，采用下面做法）"></a>添加最近访客 dom 到模板文件中（此做法更新抛弃，采用下面做法）</h2><p>在博客站点根目录的 <code>scaffolds/*.md</code> 模板文件中添加以上 <code>dom</code> 代码，以后新建 <code>[layout]</code> 便无需手动拷贝。</p>
<h2 id="编辑主题配置文件"><a href="#编辑主题配置文件" class="headerlink" title="编辑主题配置文件"></a>编辑主题配置文件</h2><p>在主题配置文件 <code>_config.yml</code> 中添加：</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 最近访客</span></div><div class="line"><span class="attr">duoshuo_recent_visit:</span> <span class="literal">true</span></div></pre></td></tr></table></figure>
<h2 id="修改-reward-swi-文件"><a href="#修改-reward-swi-文件" class="headerlink" title="修改 reward.swi 文件"></a>修改 <code>reward.swi</code> 文件</h2><p>文件路径:</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="regexp">/themes/</span><span class="keyword">NexT</span><span class="regexp">/layout/</span>_macro<span class="regexp">/reward.swi</span></div></pre></td></tr></table></figure>
<h2 id="在顶部添加内容："><a href="#在顶部添加内容：" class="headerlink" title="在顶部添加内容："></a>在顶部添加内容：</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&#123;% if theme.duoshuo_recent_visit %&#125;</div><div class="line">&lt;blockquote&gt;</div><div class="line">&lt;p&gt;最近访客&lt;/p&gt;</div><div class="line">&lt;p&gt;&lt;/p&gt;</div><div class="line">&lt;div class="ds-recent-visitors" data-num-items="28" data-avatar-size="42" id="ds-recent-visitors"&gt;</div><div class="line">&lt;/div&gt;&lt;br&gt;&lt;br&gt;</div><div class="line">&lt;p&gt;&lt;/p&gt;</div><div class="line">&lt;/blockquote&gt;</div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure>
<h2 id="保存，重启-Hexo-即可"><a href="#保存，重启-Hexo-即可" class="headerlink" title="保存，重启 Hexo 即可"></a>保存，重启 Hexo 即可</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;添加自定义样式&quot;&gt;&lt;a href=&quot;#添加自定义样式&quot; class=&quot;headerlink&quot; title=&quot;添加自定义样式&quot;&gt;&lt;/a&gt;添加自定义样式&lt;/h2&gt;&lt;h3 id=&quot;1-多说后台添加&quot;&gt;&lt;a href=&quot;#1-多说后台添加&quot; class=&quot;headerlink&quot; title=&quot;1. 多说后台添加&quot;&gt;&lt;/a&gt;1. 多说后台添加&lt;/h3&gt;&lt;p&gt;到多说后台管理-&amp;gt;设置-&amp;gt;基本设置-&amp;gt;自定义css中添加如下css样式：&lt;/p&gt;
    
    </summary>
    
      <category term="Blog" scheme="https://wangwanjie.github.io/categories/Blog/"/>
    
    
      <category term="博客" scheme="https://wangwanjie.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="https://wangwanjie.github.io/tags/Hexo/"/>
    
      <category term="NexT" scheme="https://wangwanjie.github.io/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>动态加载javascript</title>
    <link href="https://wangwanjie.github.io/2017/03/09/%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BDjavascript/"/>
    <id>https://wangwanjie.github.io/2017/03/09/动态加载javascript/</id>
    <published>2017-03-09T02:50:55.000Z</published>
    <updated>2017-03-20T08:49:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用以下函数"><a href="#使用以下函数" class="headerlink" title="使用以下函数"></a>使用以下函数</h2><a id="more"></a>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 另外一个独立的动态加载js的函数</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadJs</span>(<span class="params">jsurl, head, callback</span>) </span>&#123;</div><div class="line">	<span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(script);</div><div class="line">	script.setAttribute(<span class="string">"type"</span>, <span class="string">"text/javascript"</span>);</div><div class="line"></div><div class="line">	<span class="keyword">if</span>(callback) &#123;</div><div class="line">		<span class="keyword">if</span>(script.readyState) &#123; <span class="comment">//IE</span></div><div class="line">			script.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">				<span class="keyword">if</span>(script.readyState == <span class="string">"loaded"</span> ||</div><div class="line">					script.readyState == <span class="string">"complete"</span>) &#123;</div><div class="line">					script.onreadystatechange = <span class="literal">null</span>;</div><div class="line">					callback();</div><div class="line">				&#125;</div><div class="line">			&#125;;</div><div class="line">		&#125; <span class="keyword">else</span> &#123; <span class="comment">//Others</span></div><div class="line">			script.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">				callback();</div><div class="line">			&#125;;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	script.setAttribute(<span class="string">"src"</span>, jsurl);</div><div class="line"></div><div class="line">	<span class="keyword">if</span>(head)</div><div class="line">		<span class="built_in">document</span>.getElementsByTagName(head)[<span class="number">0</span>].appendChild(script);</div><div class="line">	<span class="keyword">else</span> &#123;</div><div class="line">		<span class="built_in">document</span>.body.appendChild(script);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;使用以下函数&quot;&gt;&lt;a href=&quot;#使用以下函数&quot; class=&quot;headerlink&quot; title=&quot;使用以下函数&quot;&gt;&lt;/a&gt;使用以下函数&lt;/h2&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="https://wangwanjie.github.io/categories/JavaScript/"/>
    
    
      <category term="javascript" scheme="https://wangwanjie.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>利用 dumpdecrypted 砸壳</title>
    <link href="https://wangwanjie.github.io/2017/02/08/%E5%88%A9%E7%94%A8dumpdecrypted%E7%A0%B8%E5%A3%B3/"/>
    <id>https://wangwanjie.github.io/2017/02/08/利用dumpdecrypted砸壳/</id>
    <published>2017-02-08T09:34:03.000Z</published>
    <updated>2017-03-18T13:26:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>1、编译生成</p>
<p><code>dumpdecrypted.dylib</code></p>
<p>2、给生成的 <code>dumpdecrypted.dylib</code> 签名</p>
<a id="more"></a>
<p>3、ssh到手机，<code>ps aux | grep</code> 目标APP查看APP安装目录</p>
<p>4、（可忽略这步）<code>cycript -p</code> 目标 APP，执行 </p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[[<span class="built_in">NSFileManager</span> defaultManager] URLsForDirectory:<span class="built_in">NSDocumentDirectory</span> inDomains:<span class="built_in">NSUserDomainMask</span>][<span class="number">0</span>]</div></pre></td></tr></table></figure>
<p> 查看沙盒目录</p>
<p>5、将 <code>dumpdecrypted.dylib</code>拷贝 <code>/var/tmp</code>，进入 <code>/var/tmp</code></p>
<p>6、将 <code>dumpdecrypted.dylib</code> 拷贝到沙盒目录，进入沙盒目录，执行</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DYLD_INSERT_LIBRARIES=dumpdecrypted.dylib /var/containers/Bundle/Application/0B8A6E0F-9D64-4EF4-97D2-D3A508FC3574/APP.app/APP</div></pre></td></tr></table></figure>
<p>7、得到目标 <code>APP.decrypted</code>就是二进制文件</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1、编译生成&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dumpdecrypted.dylib&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2、给生成的 &lt;code&gt;dumpdecrypted.dylib&lt;/code&gt; 签名&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wangwanjie.github.io/categories/iOS/"/>
    
    
      <category term="逆向" scheme="https://wangwanjie.github.io/tags/%E9%80%86%E5%90%91/"/>
    
      <category term="iOS安全" scheme="https://wangwanjie.github.io/tags/iOS%E5%AE%89%E5%85%A8/"/>
    
      <category term="破解" scheme="https://wangwanjie.github.io/tags/%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>给包签名</title>
    <link href="https://wangwanjie.github.io/2017/02/08/%E7%BB%99%E5%8C%85%E7%AD%BE%E5%90%8D/"/>
    <id>https://wangwanjie.github.io/2017/02/08/给包签名/</id>
    <published>2017-02-08T05:45:09.000Z</published>
    <updated>2017-03-20T08:49:45.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="查看可用签名"><a href="#查看可用签名" class="headerlink" title="查看可用签名"></a>查看可用签名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">security find-identity -v -p codesigning</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="签名"><a href="#签名" class="headerlink" title="签名"></a>签名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">codesign --force --verify --verbose --sign <span class="string">"iPhone Developer: 396736694@qq.com (Z4965JH2C8)” 目标包</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;查看可用签名&quot;&gt;&lt;a href=&quot;#查看可用签名&quot; class=&quot;headerlink&quot; title=&quot;查看可用签名&quot;&gt;&lt;/a&gt;查看可用签名&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;security find-identity -v -p codesigning&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wangwanjie.github.io/categories/iOS/"/>
    
    
      <category term="打包" scheme="https://wangwanjie.github.io/tags/%E6%89%93%E5%8C%85/"/>
    
      <category term="iOS签名" scheme="https://wangwanjie.github.io/tags/iOS%E7%AD%BE%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>iOS企业内部应用分发</title>
    <link href="https://wangwanjie.github.io/2017/01/11/iOS%E4%BC%81%E4%B8%9A%E5%86%85%E9%83%A8%E5%BA%94%E7%94%A8%E5%88%86%E5%8F%91/"/>
    <id>https://wangwanjie.github.io/2017/01/11/iOS企业内部应用分发/</id>
    <published>2017-01-11T12:52:03.000Z</published>
    <updated>2017-03-18T15:01:34.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>iOS 支持以无线方式安装企业内部应用，而无需使用 iTunes 或 App Store。</p>
</blockquote>
<h2 id="格式要求"><a href="#格式要求" class="headerlink" title="格式要求"></a>格式要求</h2><p>应用格式要求:.ipa，并且使用企业内部预置描述文件进行构建，即经企业证书签名。</p>
<h3 id="无线安装要求："><a href="#无线安装要求：" class="headerlink" title="无线安装要求："></a>无线安装要求：</h3><ol>
<li>XML 清单文件（一个 plist 配置文件）</li>
<li>可让设备访问 Apple iTunes 服务器的网络配置（设备要能连接互联网，因为要校验）</li>
<li>对于 iOS 7.1 或更高版本， plist 文件和 ipa 文件需要放在 HTTPS 的服务器上<br>为了安装应用，用户使用特殊的 URL 前缀从您的网站上下载plist清单文件，您可以分发该特殊前缀的URL给用户或者放置于可供用户访问的互联网上。</li>
</ol>
<a id="more"></a>
<h2 id="准备分发企业内部应用"><a href="#准备分发企业内部应用" class="headerlink" title="准备分发企业内部应用:"></a>准备分发企业内部应用:</h2><ol>
<li>创建应用的归档，格式为 *.ipa 格式，并且归档中包括企业内部预置描述文件，且使用分发证书签名；</li>
<li>无线清单文件，您可以使用支持编辑 plist 文档的编辑器编写或者直接修改下面提供的范例，各字段意义范例中会写明；</li>
<li>可直接供内连网或互联网访问的 HTTPS 服务器。</li>
</ol>
<h2 id="关于无线-plist-清单文件"><a href="#关于无线-plist-清单文件" class="headerlink" title="关于无线 plist 清单文件"></a>关于无线 plist 清单文件</h2><p>单文件是一个 XML plist 文件，可供 Apple 设备用来从您的 Web 服务器上查找、下载和安装应用。</p>
<h2 id="以下栏是必填项："><a href="#以下栏是必填项：" class="headerlink" title="以下栏是必填项："></a><strong>以下栏是必填项：</strong></h2><ol>
<li>URL：应用 (*.ipa) 文件的完全限定 HTTPS URL</li>
<li>display-image：57 x 57 px 的 PNG 图像，在下载和安装过程中显示，图片的 Web URL</li>
<li>full-size-image：512 x 512 px 的 PNG 图像，表示 iTunes 中相应的应用，图片的 Web URL</li>
<li>bundle-identifier：应用的包标识符，与 Xcode 项目中指定的完全一样</li>
<li>bundle-version：应用的包版本，在 Xcode 项目中指定</li>
<li>title：下载和安装过程中显示的应用的名称<br>样本清单文件还包含可选字段。例如，如果应用文件太大，并且想要在执行错误检验（TCP 通信通常会执行该检验）的基础上确保下载的完整性，可以使用 MD5 校验，使用见范例。<br>您也可以在一个plist文件中配置多个应用，一个 item 作为一项。</li>
</ol>
<h2 id="构建网站"><a href="#构建网站" class="headerlink" title="构建网站"></a>构建网站</h2><p>将这些项目上传到网站上可供已认证的用户访问的区域：</p>
<ol>
<li>应用 (.ipa) 文件</li>
<li>清单 (.plist) 文件<br>您的网站可以是链接到清单文件的单个页面。用户轻点 Web 链接后会下载清单文件，并触发下载和安装。<br><em>以下是示例链接：</em><pre><code class="XML"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"itms-services://?action=download-manifest&amp;url=https://example.com/manifest.plist"</span>&gt;</span>安装应用<span class="tag">&lt;/<span class="name">a</span>&gt;</span>
</code></pre>
<strong>虽然 URL 的协议部分是“itms-services”，但 iTunes Store 并不参与此过程。</strong></li>
</ol>
<h2 id="配置服务器-MIME-类型（一般不用配置）"><a href="#配置服务器-MIME-类型（一般不用配置）" class="headerlink" title="配置服务器 MIME 类型（一般不用配置）"></a>配置服务器 MIME 类型（一般不用配置）</h2><p>您可能需要配置 Web 服务器，让清单文件和应用文件可正确传输。</p>
<ul>
<li>对于 Server 应用，请将 MIME 类型添加到网页服务的 MIME 类型设置：<ul>
<li>application/octet-stream ipa</li>
<li>text/xml plist</li>
</ul>
</li>
<li>对于微软的互联网信息服务器 (IIS)，请使用 IIS Manager 在服务器的“属性”页面中添加 MIME 类型：<ul>
<li>.ipa application/octet-stream</li>
<li>.plist text/xml</li>
</ul>
</li>
</ul>
<h2 id="无线-iOS-应用分发故障诊断"><a href="#无线-iOS-应用分发故障诊断" class="headerlink" title="无线 iOS 应用分发故障诊断"></a>无线 iOS 应用分发故障诊断</h2><p>如果无线应用分发失败，并显示“无法下载”信息：</p>
<ol>
<li>请确定应用已正确进行签名。测试方法是使用 Apple Configurator 2 将它安装到设备上，然后查看是否发生错误。</li>
<li>请确定清单文件的链接是否正确，清单文件是否可供网络用户访问。</li>
<li>请确定 .ipa 文件（在清单文件中）的 URL 是否正确，并且该 .ipa 文件是否可供网络用户通过 HTTPS 访问。</li>
</ol>
<h2 id="网络配置要求"><a href="#网络配置要求" class="headerlink" title="网络配置要求"></a>网络配置要求</h2><p>如果设备连接到内网，那么您必须允许它访问以下站点：</p>
<pre><code>https://ax.init.itunes.apple.com
</code></pre><p>使用蜂窝移动网络下载应用时，设备会限制其当前文件大小。如果无法访问此站点，安装可能会失败。</p>
<p><code>https://ppq.apple.com</code> 设备会联系此网站，检查用来给预置描述文件签名的分发证书状态。</p>
<h2 id="应用更新"><a href="#应用更新" class="headerlink" title="应用更新"></a>应用更新</h2><ol>
<li>程序内检查 Server 端ipa版本和本地版本，比较是否已发布新版本，并提示用户更新。</li>
<li>如果用户想保留旧版本数据，请告知其不要卸载旧版本，并且新旧版本 bundle-identifier 相同。</li>
<li>更新方法：直接使用应用内部的openURL 方法，打开的是plist文件的web url 带 itms-services描述 链接（真机）。</li>
</ol>
<h2 id="证书验证"><a href="#证书验证" class="headerlink" title="证书验证"></a>证书验证</h2><ul>
<li>用户首次打开应用时，系统会通过联系 Apple 的 OCSP 服务器来验证分发证书。如果证书已撤销，应用将不会启动。为了验证状态，设备必须能够访问 ocsp.apple.com。</li>
<li>OCSP 响应会在设备上缓存一段时间（由 OCSP 服务器指定），当前为 3 到 7 天之间。在重新启动设备和缓存的响应过期之前，将不会再次检查证书的有效性。如果当时收到撤销命令，系统将阻止应用运行。<br><em>【警告】</em>撤销分发证书会导致使用该证书签名的所有应用失效。只有万不得已时才应撤销证书，比如确定专用密钥已丢失或确信证书已遭破解。</li>
</ul>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>示例 iOS 应用 plist 清单文件，可复制，保存为plist格式，也可从 <a href="https://github.com/wangwanjie/SharedResources/blob/master/example_zn.plist" target="_blank" rel="external">这里</a> 下载</p>
<pre><code class="XML"><span class="meta">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span>
<span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span>
<span class="tag">&lt;<span class="name">dict</span>&gt;</span>
  <span class="tag">&lt;<span class="name">key</span>&gt;</span>items<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
  <span class="tag">&lt;<span class="name">array</span>&gt;</span>
   <span class="tag">&lt;<span class="name">dict</span>&gt;</span>
     <span class="tag">&lt;<span class="name">key</span>&gt;</span>assets<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
      <span class="tag">&lt;<span class="name">array</span>&gt;</span>
        <span class="tag">&lt;<span class="name">dict</span>&gt;</span>
          <span class="tag">&lt;<span class="name">key</span>&gt;</span>kind<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
          <span class="tag">&lt;<span class="name">string</span>&gt;</span>software-package<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
          <span class="tag">&lt;<span class="name">key</span>&gt;</span>md5-size<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
          <span class="tag">&lt;<span class="name">integer</span>&gt;</span>10485760<span class="tag">&lt;/<span class="name">integer</span>&gt;</span>
          <span class="tag">&lt;<span class="name">key</span>&gt;</span>md5s<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
          <span class="tag">&lt;<span class="name">array</span>&gt;</span>
            <span class="tag">&lt;<span class="name">string</span>&gt;</span>41fa64bb7a7cae5a46bfb45821ac8bba<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
            <span class="tag">&lt;<span class="name">string</span>&gt;</span>51fa64bb7a7cae5a46bfb45821ac8bba<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
          <span class="tag">&lt;/<span class="name">array</span>&gt;</span>
          <span class="tag">&lt;<span class="name">key</span>&gt;</span>url<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
          <span class="tag">&lt;<span class="name">string</span>&gt;</span>https://www.example.com/apps/foo.ipa<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
        <span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
        <span class="tag">&lt;<span class="name">dict</span>&gt;</span>
         <span class="tag">&lt;<span class="name">key</span>&gt;</span>kind<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
         <span class="tag">&lt;<span class="name">string</span>&gt;</span>display-image<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
         <span class="tag">&lt;<span class="name">key</span>&gt;</span>needs-shine<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
         <span class="tag">&lt;<span class="name">true</span>/&gt;</span>
         <span class="tag">&lt;<span class="name">key</span>&gt;</span>url<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
         <span class="tag">&lt;<span class="name">string</span>&gt;</span>https://www.example.com/image.57x57.png<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
        <span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
        <span class="tag">&lt;<span class="name">dict</span>&gt;</span>
         <span class="tag">&lt;<span class="name">key</span>&gt;</span>kind<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
         <span class="tag">&lt;<span class="name">string</span>&gt;</span>full-size-image<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
         <span class="tag">&lt;<span class="name">key</span>&gt;</span>md5<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
         <span class="tag">&lt;<span class="name">string</span>&gt;</span>61fa64bb7a7cae5a46bfb45821ac8bba<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
         <span class="tag">&lt;<span class="name">key</span>&gt;</span>needs-shine<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
         <span class="tag">&lt;<span class="name">true</span>/&gt;</span>
         <span class="tag">&lt;<span class="name">key</span>&gt;</span>url<span class="tag">&lt;/<span class="name">key</span>&gt;</span><span class="tag">&lt;<span class="name">string</span>&gt;</span>https://www.example.com/image.512x512.jpg<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
        <span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
      <span class="tag">&lt;/<span class="name">array</span>&gt;</span>
<span class="tag">&lt;<span class="name">key</span>&gt;</span>metadata<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
      <span class="tag">&lt;<span class="name">dict</span>&gt;</span>
       <span class="tag">&lt;<span class="name">key</span>&gt;</span>bundle-identifier<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
       <span class="tag">&lt;<span class="name">string</span>&gt;</span>com.example.fooapp<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
       <span class="tag">&lt;<span class="name">key</span>&gt;</span>bundle-version<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
       <span class="tag">&lt;<span class="name">string</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
       <span class="tag">&lt;<span class="name">key</span>&gt;</span>kind<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
       <span class="tag">&lt;<span class="name">string</span>&gt;</span>software<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
       <span class="tag">&lt;<span class="name">key</span>&gt;</span>subtitle<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
       <span class="tag">&lt;<span class="name">string</span>&gt;</span>Apple<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
       <span class="tag">&lt;<span class="name">key</span>&gt;</span>title<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
       <span class="tag">&lt;<span class="name">string</span>&gt;</span>Example Corporate App<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
      <span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
    <span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
  <span class="tag">&lt;/<span class="name">array</span>&gt;</span>
<span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
<span class="tag">&lt;/<span class="name">plist</span>&gt;</span>
</code></pre>
<h2 id="简单配置示例"><a href="#简单配置示例" class="headerlink" title="简单配置示例"></a>简单配置示例</h2><p>作为包体积较小的应用，如以下简单配置即可，从<a href="https://github.com/wangwanjie/SharedResources/blob/master/simple.plist" target="_blank" rel="external">这里</a>下载</p>
<pre><code class="XMl"><span class="meta">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span>
<span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span>
<span class="tag">&lt;<span class="name">dict</span>&gt;</span>
    <span class="tag">&lt;<span class="name">key</span>&gt;</span>items<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
    <span class="tag">&lt;<span class="name">array</span>&gt;</span>
        <span class="tag">&lt;<span class="name">dict</span>&gt;</span>
            <span class="tag">&lt;<span class="name">key</span>&gt;</span>assets<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
            <span class="tag">&lt;<span class="name">array</span>&gt;</span>
                <span class="tag">&lt;<span class="name">dict</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>kind<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">string</span>&gt;</span>software-package<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>url<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">string</span>&gt;</span>https://yourwebsite/appName.ipa<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
                <span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
                <span class="tag">&lt;<span class="name">dict</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>kind<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">string</span>&gt;</span>full-size-image<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>needs-shine<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">true</span>/&gt;</span>
                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>url<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">string</span>&gt;</span>https://yourwebsite/app_icon_full_size.png<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
                <span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
                <span class="tag">&lt;<span class="name">dict</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>kind<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">string</span>&gt;</span>display-image<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>needs-shine<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">true</span>/&gt;</span>
                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>url<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">string</span>&gt;</span>https://yourwebsite/app_icon_download.png<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
                <span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
            <span class="tag">&lt;/<span class="name">array</span>&gt;</span>
            <span class="tag">&lt;<span class="name">key</span>&gt;</span>metadata<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
            <span class="tag">&lt;<span class="name">dict</span>&gt;</span>
                <span class="tag">&lt;<span class="name">key</span>&gt;</span>bundle-identifier<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                <span class="tag">&lt;<span class="name">string</span>&gt;</span> your app bundle id <span class="tag">&lt;/<span class="name">string</span>&gt;</span>
                <span class="tag">&lt;<span class="name">key</span>&gt;</span>bundle-version<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                <span class="tag">&lt;<span class="name">string</span>&gt;</span>shortVersion<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
                <span class="tag">&lt;<span class="name">key</span>&gt;</span>kind<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                <span class="tag">&lt;<span class="name">string</span>&gt;</span>software<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
                <span class="tag">&lt;<span class="name">key</span>&gt;</span>subtitle<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                <span class="tag">&lt;<span class="name">string</span>&gt;</span>欢迎使用<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
                <span class="tag">&lt;<span class="name">key</span>&gt;</span>title<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                <span class="tag">&lt;<span class="name">string</span>&gt;</span> app 名称<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
            <span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
        <span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
    <span class="tag">&lt;/<span class="name">array</span>&gt;</span>
<span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
<span class="tag">&lt;/<span class="name">plist</span>&gt;</span>
</code></pre>
<blockquote>
<p>Author: CoderJay <br>如需转载，请注明出处</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;iOS 支持以无线方式安装企业内部应用，而无需使用 iTunes 或 App Store。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;格式要求&quot;&gt;&lt;a href=&quot;#格式要求&quot; class=&quot;headerlink&quot; title=&quot;格式要求&quot;&gt;&lt;/a&gt;格式要求&lt;/h2&gt;&lt;p&gt;应用格式要求:.ipa，并且使用企业内部预置描述文件进行构建，即经企业证书签名。&lt;/p&gt;
&lt;h3 id=&quot;无线安装要求：&quot;&gt;&lt;a href=&quot;#无线安装要求：&quot; class=&quot;headerlink&quot; title=&quot;无线安装要求：&quot;&gt;&lt;/a&gt;无线安装要求：&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;XML 清单文件（一个 plist 配置文件）&lt;/li&gt;
&lt;li&gt;可让设备访问 Apple iTunes 服务器的网络配置（设备要能连接互联网，因为要校验）&lt;/li&gt;
&lt;li&gt;对于 iOS 7.1 或更高版本， plist 文件和 ipa 文件需要放在 HTTPS 的服务器上&lt;br&gt;为了安装应用，用户使用特殊的 URL 前缀从您的网站上下载plist清单文件，您可以分发该特殊前缀的URL给用户或者放置于可供用户访问的互联网上。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wangwanjie.github.io/categories/iOS/"/>
    
    
      <category term="打包" scheme="https://wangwanjie.github.io/tags/%E6%89%93%E5%8C%85/"/>
    
      <category term="发布" scheme="https://wangwanjie.github.io/tags/%E5%8F%91%E5%B8%83/"/>
    
  </entry>
  
  <entry>
    <title>Mac查看CPU具体型号</title>
    <link href="https://wangwanjie.github.io/2016/12/16/Mac%E6%9F%A5%E7%9C%8BCPU%E5%85%B7%E4%BD%93%E5%9E%8B%E5%8F%B7/"/>
    <id>https://wangwanjie.github.io/2016/12/16/Mac查看CPU具体型号/</id>
    <published>2016-12-16T12:17:48.000Z</published>
    <updated>2017-03-18T13:26:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>运行以下命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sysctl machdep.cpu.brand_string</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;运行以下命令:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;d
    
    </summary>
    
      <category term="Mac" scheme="https://wangwanjie.github.io/categories/Mac/"/>
    
    
      <category term="Mac使用" scheme="https://wangwanjie.github.io/tags/Mac%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>OC用AFN做Soap请求webService</title>
    <link href="https://wangwanjie.github.io/2016/01/10/OC%E7%94%A8AFN%E5%81%9ASoap%E8%AF%B7%E6%B1%82webService/"/>
    <id>https://wangwanjie.github.io/2016/01/10/OC用AFN做Soap请求webService/</id>
    <published>2016-01-09T19:07:22.000Z</published>
    <updated>2017-03-20T08:51:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>好吧，标题有点拗口。我平时一般不发帖子，因为感觉太花时间了，还是喜欢宅着研究技术。但这个帖子网上资料还是没有很详细的，周末了明天休息，所以现在写下来总结一下，也希望能帮助有这方面需求的开发者朋友，如果错误之处还请谅解，欢迎指出。排版大家就不要在意了，我也不清楚这个支不支持markdown，就直接手动简单排一下。</p>
<a id="more"></a>
<p>进入主题，最近公司做一个新项目，后台是webService，要做iOS版本的客户端，由于我以前不怎么了解这方面，所以云里雾里得摸索了两天，因为后台人员也不清楚我具体要传什么给他，所以。。。。我就两边跑。。。。最终我确定问题还是在于后端，今天上午完美解决，对webService和WSDL以及CXF有了个大概的了解。</p>
<p>我就不做过多的概念介绍了，我很懒不愿复制粘贴，只要说一些细节让大家少走弯路就可以。</p>
<p>在继续往下之前你需要先去了解一些概念：SOAP、WSDL、CXF，和他们之间的关系。这里我觉得这个帖子比较好，推荐一下，Web Service笔记（三）：wsdl 与 soap协议详解 , 对XML或者HTML稍微有点了解看了这篇文章之后对WSDL基本都能大体了解了，这里也感谢一下作者。</p>
<p>假定现在你对它们有个大体的了解，SOAP请求就是你发一段XML给后台，然后后台返回数据给你，它是通用的，参数后台会在XML中提取，所以我们在这个过程中其实就是在于传的XML的内容，本文也会讲到中间遇到的一些细节。</p>
<p>首先不要把它想的很复杂，弄通了封装一下，其实这种方式传的东西个人感觉和普通的GET/POST差不多，甚或更方便。WSDL文档由于我现在不在公司连不上服务器所以就不介绍。</p>
<h2 id="开始吧"><a href="#开始吧" class="headerlink" title="开始吧"></a>开始吧</h2><p>首先XML内容，你的SOAP协议版本要和后台一致，不然后台报错会说版本不一致之类的，这里列出，请自行对比。</p>
<h2 id="SOAP-1-1"><a href="#SOAP-1-1" class="headerlink" title="SOAP 1.1"></a>SOAP 1.1</h2><h3 id="以下是-SOAP-1-1-请求和响应示例。所显示的占位符需替换为实际值。"><a href="#以下是-SOAP-1-1-请求和响应示例。所显示的占位符需替换为实际值。" class="headerlink" title="以下是 SOAP 1.1 请求和响应示例。所显示的占位符需替换为实际值。"></a>以下是 SOAP 1.1 请求和响应示例。所显示的占位符需替换为实际值。</h3><ul>
<li>请求</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">POST /WebServices/MobileCodeWS.asmx HTTP/1.1</div><div class="line">Host: webservice.webxml.com.cn</div><div class="line">Content-Type: text/xml; charset=utf-8</div><div class="line">Content-Length: length</div><div class="line">SOAPAction: "http://WebXml.com.cn/getMobileCodeInfo"</div><div class="line"></div><div class="line"></div><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">soap:Envelope</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:xsd</span>=<span class="string">"http://www.w3.org/2001/XMLSchema"</span> <span class="attr">xmlns:soap</span>=<span class="string">"http://schemas.xmlsoap.org/soap/envelope/"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">soap:Body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">getMobileCodeInfo</span> <span class="attr">xmlns</span>=<span class="string">"http://WebXml.com.cn/"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">mobileCode</span>&gt;</span>string<span class="tag">&lt;/<span class="name">mobileCode</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">userID</span>&gt;</span>string<span class="tag">&lt;/<span class="name">userID</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">getMobileCodeInfo</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">soap:Body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">soap:Envelope</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>响应</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">HTTP/1.1 200 OK</div><div class="line">Content-Type: text/xml; charset=utf-8</div><div class="line">Content-Length: length</div><div class="line"></div><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">soap:Envelope</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:xsd</span>=<span class="string">"http://www.w3.org/2001/XMLSchema"</span> <span class="attr">xmlns:soap</span>=<span class="string">"http://schemas.xmlsoap.org/soap/envelope/"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">soap:Body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">getMobileCodeInfoResponse</span> <span class="attr">xmlns</span>=<span class="string">"http://WebXml.com.cn/"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">getMobileCodeInfoResult</span>&gt;</span>string<span class="tag">&lt;/<span class="name">getMobileCodeInfoResult</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">getMobileCodeInfoResponse</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">soap:Body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">soap:Envelope</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
<h2 id="SOAP-1-2"><a href="#SOAP-1-2" class="headerlink" title="SOAP 1.2"></a>SOAP 1.2</h2><h3 id="以下是-SOAP-1-2-请求和响应示例。所显示的占位符需替换为实际值。"><a href="#以下是-SOAP-1-2-请求和响应示例。所显示的占位符需替换为实际值。" class="headerlink" title="以下是 SOAP 1.2 请求和响应示例。所显示的占位符需替换为实际值。"></a>以下是 SOAP 1.2 请求和响应示例。所显示的占位符需替换为实际值。</h3><ul>
<li>请求</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">POST /WebServices/MobileCodeWS.asmx HTTP/1.1</div><div class="line">Host: webservice.webxml.com.cn</div><div class="line">Content-Type: application/soap+xml; charset=utf-8</div><div class="line">Content-Length: length</div><div class="line"></div><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">soap12:Envelope</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:xsd</span>=<span class="string">"http://www.w3.org/2001/XMLSchema"</span> <span class="attr">xmlns:soap12</span>=<span class="string">"http://www.w3.org/2003/05/soap-envelope"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">soap12:Body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">getMobileCodeInfo</span> <span class="attr">xmlns</span>=<span class="string">"http://WebXml.com.cn/"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">mobileCode</span>&gt;</span>string<span class="tag">&lt;/<span class="name">mobileCode</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">userID</span>&gt;</span>string<span class="tag">&lt;/<span class="name">userID</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">getMobileCodeInfo</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">soap12:Body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">soap12:Envelope</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>响应</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">HTTP/1.1 200 OK</div><div class="line">Content-Type: application/soap+xml; charset=utf-8</div><div class="line">Content-Length: length</div><div class="line"></div><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">soap12:Envelope</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:xsd</span>=<span class="string">"http://www.w3.org/2001/XMLSchema"</span> <span class="attr">xmlns:soap12</span>=<span class="string">"http://www.w3.org/2003/05/soap-envelope"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">soap12:Body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">getMobileCodeInfoResponse</span> <span class="attr">xmlns</span>=<span class="string">"http://WebXml.com.cn/"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">getMobileCodeInfoResult</span>&gt;</span>string<span class="tag">&lt;/<span class="name">getMobileCodeInfoResult</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">getMobileCodeInfoResponse</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">soap12:Body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">soap12:Envelope</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h2><p><strong>直接说注意点，拿SOAP 1.1 请求做例子，要传的XML文档为:</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">soap:Envelope</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:xsd</span>=<span class="string">"http://www.w3.org/2001/XMLSchema"</span> <span class="attr">xmlns:soap</span>=<span class="string">"http://schemas.xmlsoap.org/soap/envelope/"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">soap:Body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">getMobileCodeInfo</span> <span class="attr">xmlns</span>=<span class="string">"http://WebXml.com.cn/"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">mobileCode</span>&gt;</span>string<span class="tag">&lt;/<span class="name">mobileCode</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">userID</span>&gt;</span>string<span class="tag">&lt;/<span class="name">userID</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">getMobileCodeInfo</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">soap:Body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">soap:Envelope</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong><soap: body=""></soap:></strong> 标签以外的不用改，head一般也不用传，要调用的方法和参数都包在body里面，比如这个例子中， <strong>getMobileCodeInfo</strong> 是WSDL文档发布的你要调用的方法名，其后接的xmlns是你wsdl文档中对应的 <strong>targetNameSpace</strong> ，这个和你JAVA中的 <strong>package</strong> 名对应，比如你后台JAVA代码中该方法中import的package为 <code>com.xxxx.oooo</code> 那么这里的xmlns就是 <code>ooo.xxxx.com</code> ，<code>mobileCode和userID</code>是这个方法中接收的参数名，那么也就是说该方法在其JAVA后台大概是这个样子</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">getMobileCodeInfo</span> <span class="params">(@WebParam(name=<span class="string">"mobileCode"</span> , name=<span class="string">"userID"</span>)</span> String mobileCode, String userID)</span></div></pre></td></tr></table></figure>
<p>对应的WSDL中该operation的input下也应该有两个name就是mobileCode和userID，注意@WebParam(name=”mobileCode” , name=”userID”) 不能少，这个注解让后台认识参数名，少了后台会一直报unexpected element ，我们后台一开始就少了这个，搞了很久。这种情况是参数分开传的情况，有的后台的参数直接一个request，但是里面包含有几个键值对也其实就是相当于几个参数，刚接触的新手在这里很容易绕弯，比如我后台有这个个方法  public login (WebParam(name=”req” ) String req) ，很明显这里只接一个参数，而且叫做req，但是这个请求就是需要账户名和密码，所以在对应的xml中文档应这样写body中内容</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">soap12:Body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">login</span> <span class="attr">xmlns</span>=<span class="string">"http://WebXml.com.cn/"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">req</span>&gt;</span>&#123;@"userNameKey": zhangsan, @"password": pwdpwd&#125;<span class="tag">&lt;/<span class="name">req</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">login</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">soap12:Body</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="NSURLSession请求soap"><a href="#NSURLSession请求soap" class="headerlink" title="NSURLSession请求soap"></a>NSURLSession请求soap</h2><p>最后请求地址就是你的wsdl文档中的Endpoint address地址，请求体就是该XML，发个POST请求就完事啦，这里又有事了，本人是强迫症，因为一开始就用的AFN请求，咋请求咋报错，于是跟着网上找的DEMO换NSURLConnection，一不小心成功了一次，但是这个iOS已经废弃了不喜欢，于是用NSURLSession，恩也成功了，但是还是感觉好麻烦，发个NSURLSession请求soap的代码:</p>
 <figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"> <span class="built_in">NSString</span> *soapStr = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\</span></div><div class="line"> &lt;soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\</div><div class="line"> xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"&gt;\</div><div class="line"> &lt;soap:Header&gt;\</div><div class="line"> &lt;/soap:Header&gt;\</div><div class="line"> &lt;soap:Body&gt;\</div><div class="line"> &lt;login xmlns=\"targetNameSpace地址/\"&gt;\</div><div class="line"> &lt;param1&gt;test&lt;/param1&gt;\</div><div class="line"> &lt;param2&gt;test&lt;/param2&gt;\</div><div class="line"> &lt;/login&gt;\</div><div class="line"> &lt;/soap:Body&gt;\</div><div class="line"> &lt;/soap:Envelope&gt;"];</div><div class="line">  </div><div class="line"> <span class="built_in">NSURL</span> *url=[<span class="built_in">NSURL</span> URLWithString:<span class="string">@"你自己wsdl文档中对应的endpoint address"</span>];</div><div class="line">  </div><div class="line"> <span class="built_in">NSMutableURLRequest</span> *request=[<span class="built_in">NSMutableURLRequest</span> requestWithURL:url];</div><div class="line">  </div><div class="line"> <span class="comment">// 访问方式</span></div><div class="line"> [request setHTTPMethod:<span class="string">@"POST"</span>];</div><div class="line">  </div><div class="line"> <span class="comment">// 设置请求头(请求头也可以不设置，前两个设不设置都一样，应该默认的，但是SOAPAction我怎么都设置不对，不设置也可以，干脆不设置了)</span></div><div class="line"> <span class="comment">// [request addValue:@"text/xml; charset=utf-8" forHTTPHeaderField:@"Content-Type"];</span></div><div class="line"><span class="comment">//  [request addValue:[NSString stringWithFormat:@"%zd", soapStr.length] forHTTPHeaderField:@"Content-Length"];</span></div><div class="line"> <span class="comment">//    [request addValue:@"nameSpace/methodName" forHTTPHeaderField:@"SOAPAction"];</span></div><div class="line">  </div><div class="line"> <span class="comment">// body内容</span></div><div class="line"> [request setHTTPBody:[soapStr dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>]];</div><div class="line">  </div><div class="line"> <span class="built_in">NSURLSession</span> *session = [<span class="built_in">NSURLSession</span> sharedSession];</div><div class="line">  </div><div class="line"> <span class="built_in">NSURLSessionDataTask</span> *task = [session dataTaskWithRequest:request completionHandler:^(<span class="built_in">NSData</span> * _Nullable data, <span class="built_in">NSURLResponse</span> * _Nullable response, <span class="built_in">NSError</span> * _Nullable error) &#123;</div><div class="line"> <span class="built_in">NSString</span> *result = [[<span class="built_in">NSString</span> alloc] initWithData:data  encoding:<span class="built_in">NSUTF8StringEncoding</span>];</div><div class="line">  </div><div class="line"> WJLog(<span class="string">@"进入成功回调Session-----结果：%@----请求地址：%@"</span>, result, response.URL);</div><div class="line">  </div><div class="line"> <span class="keyword">if</span> (error) &#123;</div><div class="line"> WJLog(<span class="string">@"Session----失败----%@"</span>, error.localizedDescription);</div><div class="line"> &#125;</div><div class="line"> &#125;];</div><div class="line">  </div><div class="line"> [task resume];</div></pre></td></tr></table></figure>
<h2 id="AFHTTPRequestOperation-请求"><a href="#AFHTTPRequestOperation-请求" class="headerlink" title="AFHTTPRequestOperation 请求"></a>AFHTTPRequestOperation 请求</h2><p>经过和后台七改八改都无果，我干脆自己了解这些文档规范，在上午确定我操作没错之后，直接说后台那边有问题，然后后台改，重启服务器我请求没有任何进展，最后竟然是什么问题你们知道么。。前一天其实我已经传对了XML，只是后台改动的代码放错了地方，只放到了正式服没有放测试服，我也是，，，醉了，，不过也好，要是那么顺畅我就不会去过多了解这方面了。<br>好了，要传什么，注意点都讲了，现在到了客户端的问题，用官方SDK请求是不是感觉很麻烦？是的，对于用惯了AFN或者自己封装的网络请求工具类的人来说如果每次都要写这多么代码发一次请求太痛苦了，于是我想可不可以用AFN请求SOAP，一开始想用manager发请求，直接把XML当params发POST肯定是直接挂了，于是想要设置HTTPBody要不用AFHTTPRequestOperation？没错这样确实可以，代码如下：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NSMutableURLRequest</span> *request=[<span class="built_in">NSMutableURLRequest</span> requestWithURL:url];</div><div class="line"> [request setHTTPMethod:<span class="string">@"POST"</span>];</div><div class="line"> [request setHTTPBody:[soapStr dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>]];</div><div class="line">  </div><div class="line"> AFHTTPRequestOperation *operation = [[AFHTTPRequestOperation alloc] initWithRequest:request];</div><div class="line">  </div><div class="line"> <span class="comment">// 设置返回数据格式</span></div><div class="line"> operation.responseSerializer = [AFHTTPResponseSerializer serializer];</div><div class="line">  </div><div class="line"> [operation setCompletionBlockWithSuccess:^(AFHTTPRequestOperation * _Nonnull operation, <span class="keyword">id</span>  _Nonnull responseObject) &#123;</div><div class="line"> <span class="built_in">NSString</span> *result = [[<span class="built_in">NSString</span> alloc] initWithData:responseObject  encoding:<span class="built_in">NSUTF8StringEncoding</span>];</div><div class="line"> WJLog(<span class="string">@"AFN--成功--结果：%@----返回数据%@"</span>, result, responseObject);</div><div class="line"> &#125; failure:^(AFHTTPRequestOperation * _Nonnull operation, <span class="built_in">NSError</span> * _Nonnull error) &#123;</div><div class="line"> WJLog(<span class="string">@"AFN--失败--%@"</span>, error.localizedDescription);</div><div class="line"> &#125;];</div><div class="line">  </div><div class="line"> [operation start];</div></pre></td></tr></table></figure>
<p>这一看感觉和NSURLSession没多大差别，还是想用manager，关键问题就在于设置request的HTTBbody为XML，但是AFHTTPSessionManager已经把request封装了，默认用的params，怎么改？于是想改动或者添加AFN内部方法，但是总感觉这样不好，万一更新库了又要搞一遍。于是想能否拦截这个request，或者通过manager.requestSerializer设置HTTPBody，敲set浏览一下没有HTTPBody字眼的，用KVC也不行，那样还是相当于把XML当params传了，伤心绝望之时看到这个方法:</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"> [manager.requestSerializer setQueryStringSerializationWithBlock:^<span class="built_in">NSString</span> *(<span class="built_in">NSURLRequest</span> *request, <span class="built_in">NSDictionary</span> *parameters, <span class="built_in">NSError</span> *__autoreleasing *error) &#123;</div><div class="line">   <span class="comment">// </span></div><div class="line">&#125;]</div></pre></td></tr></table></figure>
<h2 id="简单封装-AFHTTPSessionManager-请求"><a href="#简单封装-AFHTTPSessionManager-请求" class="headerlink" title="简单封装 AFHTTPSessionManager 请求"></a>简单封装 AFHTTPSessionManager 请求</h2><p>一看里面有request 有 params 高兴了，说不定在这里能拦截，于是直接写</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[manager.requestSerializer setQueryStringSerializationWithBlock:^<span class="built_in">NSString</span> *(<span class="built_in">NSURLRequest</span> *request, <span class="built_in">NSDictionary</span> *parameters, <span class="built_in">NSError</span> *__autoreleasing *error) &#123;</div><div class="line">    <span class="keyword">return</span> soapStr;</div><div class="line">&#125;]</div></pre></td></tr></table></figure>
<p>请求成功，happy。<br>接下来另一个问题了，简单封装一下，我收到的是二进制，所以把AFN封装成了个工具类，供大家参考，欢迎提出改进</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">*  请求SOAP，返回NSData</div><div class="line">*</div><div class="line">*  @param url      请求地址</div><div class="line">*  @param soapBody soap的XML中方法和参数段</div><div class="line">*  @param success  成功block</div><div class="line">*  @param failure  失败block</div><div class="line">*/</div><div class="line">+ (<span class="keyword">void</span>)SOAPData:(<span class="built_in">NSString</span> *)url soapBody:(<span class="built_in">NSString</span> *)soapBody success:(<span class="keyword">void</span> (^)(<span class="keyword">id</span> responseObject))success failure:(<span class="keyword">void</span>(^)(<span class="built_in">NSError</span> *error))failure &#123;</div><div class="line">     </div><div class="line">    <span class="built_in">NSString</span> *soapStr = [<span class="built_in">NSString</span> stringWithFormat:</div><div class="line">                         <span class="string">@"&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\</span></div><div class="line">                         &lt;soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\</div><div class="line">                         xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"&gt;\</div><div class="line">                         &lt;soap:Header&gt;\</div><div class="line">                         &lt;/soap:Header&gt;\</div><div class="line">                         &lt;soap:Body&gt;%@&lt;/soap:Body&gt;\</div><div class="line">                         &lt;/soap:Envelope&gt;",soapBody];</div><div class="line">     </div><div class="line">    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];</div><div class="line">    manager.responseSerializer = [AFXMLParserResponseSerializer serializer];</div><div class="line">     </div><div class="line">    <span class="comment">// 设置请求超时时间</span></div><div class="line">    manager.requestSerializer.timeoutInterval = <span class="number">30</span>;</div><div class="line">     </div><div class="line">    <span class="comment">// 返回NSData</span></div><div class="line">    manager.responseSerializer = [AFHTTPResponseSerializer serializer];</div><div class="line">     </div><div class="line">    <span class="comment">// 设置请求头，也可以不设置</span></div><div class="line">    [manager.requestSerializer setValue:<span class="string">@"application/soap+xml; charset=utf-8"</span> forHTTPHeaderField:<span class="string">@"Content-Type"</span>];</div><div class="line">    [manager.requestSerializer setValue:[<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%zd"</span>, soapStr.length] forHTTPHeaderField:<span class="string">@"Content-Length"</span>];</div><div class="line"> </div><div class="line">    <span class="comment">// 设置HTTPBody</span></div><div class="line">    [manager.requestSerializer setQueryStringSerializationWithBlock:^<span class="built_in">NSString</span> *(<span class="built_in">NSURLRequest</span> *request, <span class="built_in">NSDictionary</span> *parameters, <span class="built_in">NSError</span> *__autoreleasing *error) &#123;</div><div class="line">        <span class="keyword">return</span> soapStr;</div><div class="line">    &#125;];</div><div class="line">     </div><div class="line">    [manager POST:url parameters:soapStr success:^(<span class="built_in">NSURLSessionDataTask</span> * _Nonnull task, <span class="keyword">id</span>  _Nonnull responseObject) &#123;</div><div class="line">        <span class="comment">// 把返回的二进制数据转为字符串</span></div><div class="line">         <span class="built_in">NSString</span> *result = [[<span class="built_in">NSString</span> alloc] initWithData:responseObject encoding:<span class="built_in">NSUTF8StringEncoding</span>];</div><div class="line">         </div><div class="line">        <span class="comment">// 利用正则表达式取出&lt;return&gt;&lt;/return&gt;之间的字符串</span></div><div class="line">        <span class="built_in">NSRegularExpression</span> *regular = [[<span class="built_in">NSRegularExpression</span> alloc] initWithPattern:<span class="string">@"(?&lt;=return\\&gt;).*(?=&lt;/return)"</span> options:<span class="built_in">NSRegularExpressionCaseInsensitive</span> error:<span class="literal">nil</span>];</div><div class="line">         </div><div class="line">        <span class="built_in">NSDictionary</span> *dict = [<span class="built_in">NSDictionary</span> dictionary];</div><div class="line">        <span class="keyword">for</span> (<span class="built_in">NSTextCheckingResult</span> *checkingResult <span class="keyword">in</span> [regular matchesInString:result options:<span class="number">0</span> range:<span class="built_in">NSMakeRange</span>(<span class="number">0</span>, result.length)]) &#123;</div><div class="line">             </div><div class="line">            <span class="comment">// 得到字典</span></div><div class="line">            dict = [<span class="built_in">NSJSONSerialization</span> JSONObjectWithData:[[result substringWithRange:checkingResult.range] dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>] options:<span class="built_in">NSJSONReadingMutableLeaves</span> error:<span class="literal">nil</span>];</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 请求成功并且结果有值把结果传出去</span></div><div class="line">        <span class="keyword">if</span> (success &amp;&amp; dict) &#123;</div><div class="line">            success(dict);</div><div class="line">        &#125;</div><div class="line">         </div><div class="line">    &#125; failure:^(<span class="built_in">NSURLSessionDataTask</span> * _Nullable task, <span class="built_in">NSError</span> * _Nonnull error) &#123;</div><div class="line">        <span class="keyword">if</span> (failure) &#123;</div><div class="line">            failure(error);</div><div class="line">        &#125;</div><div class="line">    &#125;];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>原文地址：<a href="http://www.cocoachina.com/bbs/read.php?tid-456019.html" target="_blank" rel="external">OC用AFN做Soap请求webService</a></p>
<h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>差不多了，如果有什么问题指正欢迎大家留言。排版真的很丑，大家见谅，洗洗睡了。</p>
<blockquote>
<p>Author: CoderJay <br>如需转载，请注明出处</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;好吧，标题有点拗口。我平时一般不发帖子，因为感觉太花时间了，还是喜欢宅着研究技术。但这个帖子网上资料还是没有很详细的，周末了明天休息，所以现在写下来总结一下，也希望能帮助有这方面需求的开发者朋友，如果错误之处还请谅解，欢迎指出。排版大家就不要在意了，我也不清楚这个支不支持markdown，就直接手动简单排一下。&lt;/p&gt;
    
    </summary>
    
      <category term="Objective-C" scheme="https://wangwanjie.github.io/categories/Objective-C/"/>
    
    
      <category term="AFN" scheme="https://wangwanjie.github.io/tags/AFN/"/>
    
      <category term="Soap" scheme="https://wangwanjie.github.io/tags/Soap/"/>
    
      <category term="WebService" scheme="https://wangwanjie.github.io/tags/WebService/"/>
    
  </entry>
  
  <entry>
    <title>ASI 和 AFN 区别</title>
    <link href="https://wangwanjie.github.io/2015/10/06/ASI-%E5%92%8C-AFN-%E5%8C%BA%E5%88%AB/"/>
    <id>https://wangwanjie.github.io/2015/10/06/ASI-和-AFN-区别/</id>
    <published>2015-10-06T03:51:36.000Z</published>
    <updated>2017-03-20T08:51:24.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一-底层实现"><a href="#一-底层实现" class="headerlink" title="一 底层实现"></a>一 底层实现</h3><ul>
<li>AFN的底层基于OC的NSURLConnection和NSURLSession</li>
<li>ASI的底层基于纯C语言的CFNetwork框架</li>
<li>ASI的运行性能 高于 AFN</li>
</ul>
<a id="more"></a>
<h3 id="二-对服务器返回的数据处理"><a href="#二-对服务器返回的数据处理" class="headerlink" title="二 对服务器返回的数据处理"></a>二 对服务器返回的数据处理</h3><ul>
<li>ASI没有直接提供对服务器数据处理的方式，直接返回data\string</li>
<li>AFN提供了多种对服务器数据处理的方式<ul>
<li>JSON处理</li>
<li>XML处理</li>
<li>其他处理</li>
</ul>
</li>
</ul>
<h3 id="三-监听请求的过程"><a href="#三-监听请求的过程" class="headerlink" title="三 监听请求的过程"></a>三 监听请求的过程</h3><ul>
<li><p>AFN提供了success和failure两个block来监听请求的过程（只能监听成功和失败）</p>
<ul>
<li>success : 请求成功后调用</li>
<li>failure : 请求失败后调用</li>
</ul>
</li>
<li><p>ASI提供了3套方案，每一套方案都能监听请求的完整过程<br>（监听请求开始、接收到响应头信息、接受到具体数据、接受完毕、请求失败）</p>
<ul>
<li>成为代理，遵守协议，实现协议中的代理方法</li>
<li>成为代理，不遵守协议，自定义代理方法</li>
<li>设置block</li>
</ul>
</li>
</ul>
<h3 id="四-在文件下载和文件上传的使用难易度"><a href="#四-在文件下载和文件上传的使用难易度" class="headerlink" title="四 在文件下载和文件上传的使用难易度"></a>四 在文件下载和文件上传的使用难易度</h3><ul>
<li><p>AFN</p>
<ul>
<li>不容易监听下载进度和上传进度</li>
<li>不容易实现断点续传</li>
<li>一般只用来下载不大的文件</li>
</ul>
</li>
<li><p>ASI</p>
<ul>
<li>非常容易实现下载和上传</li>
<li>非常容易监听下载进度和上传进度</li>
<li>非常容易实现断点续传</li>
<li>下载或大或小的文件都行</li>
</ul>
</li>
</ul>
<h3 id="五-ASI提供了更多的实用功能"><a href="#五-ASI提供了更多的实用功能" class="headerlink" title="五 ASI提供了更多的实用功能"></a>五 ASI提供了更多的实用功能</h3><ul>
<li>控制圈圈要不要在请求过程中转</li>
<li>可以轻松地设置请求之间的依赖：每一个请求都是一个 <strong>NSOperation</strong> 对象</li>
<li>可以统一管理所有请求（还专门提供了一个叫做 <strong>ASINetworkQueue</strong> 来管理所有的请求对象）</li>
<li>暂停\恢复\取消所有的请求</li>
<li>监听整个队列中所有请求的下载进度和上传进度</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一-底层实现&quot;&gt;&lt;a href=&quot;#一-底层实现&quot; class=&quot;headerlink&quot; title=&quot;一 底层实现&quot;&gt;&lt;/a&gt;一 底层实现&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;AFN的底层基于OC的NSURLConnection和NSURLSession&lt;/li&gt;
&lt;li&gt;ASI的底层基于纯C语言的CFNetwork框架&lt;/li&gt;
&lt;li&gt;ASI的运行性能 高于 AFN&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Objective-C" scheme="https://wangwanjie.github.io/categories/Objective-C/"/>
    
    
      <category term="网络" scheme="https://wangwanjie.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
      <category term="网络协议" scheme="https://wangwanjie.github.io/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
</feed>
