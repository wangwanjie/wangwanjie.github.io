<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>VanJay&#39;s Blog</title>
  <subtitle>成功不是将来才有的&lt;br&gt;而是决定去做的那一刻起&lt;br&gt;持续累积而成</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wangwanjie.github.io/"/>
  <updated>2018-10-01T13:40:49.549Z</updated>
  <id>https://wangwanjie.github.io/</id>
  
  <author>
    <name>VanJay</name>
    <email>wangwanjie1993@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ubuntu 18.04 LTS 安装部署 Seafile</title>
    <link href="https://wangwanjie.github.io/2018/10/01/Ubuntu-18-04-LTS-%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2-Seafile/"/>
    <id>https://wangwanjie.github.io/2018/10/01/Ubuntu-18-04-LTS-安装部署-Seafile/</id>
    <published>2018-10-01T09:06:54.000Z</published>
    <updated>2018-10-01T13:40:49.549Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>新入职的公司内部同步一些文件使用的 <code>Seafile</code>，没部署远程，只使用的内网，由于这个 <code>seafile</code> 是一个前同事搭建的（之前的 iOSer，我来替代他了，阴差阳错。。。），可能那时他也不是太熟吧，把文件存放目录放在了安装位置的挂载分区，导致长时间使用下来，该分区磁盘空间满了，无法继续运行，于是我简单 <code>google</code> 了一番，开始转移目录，找到了 <code>seafile-data</code> 目录之后，发现查看都没权限，包括 <code>cp -R</code>、<code>mv</code> 都无法运行，直接给了<code>755</code>权限，<code>mv seafile-data</code> 目录至新目录，更改 <code>seafile.ini</code> 文件，指向新目录，重启 <code>seafile</code>，发现 <code>seafile</code> 已经无法启动……下意识重启一下电脑，还是不行，这时看下禅道，测试又提了一堆 <code>BUG</code>，就先放下开始修 BUG 了。第二天早上过来继续，发现系统都进不去了，登录界面无法输入密码，没办法只好命令行登入系统，再次 <code>google</code> 了解到 <code>seafile</code> 存放文件的形式类似于 <code>svn</code> 或 <code>git</code> ，也是那种打散存放并内部记录 <code>state</code> 和带有 <code>commit log</code> 的，看到了官方有修复工具，尝试无果，放弃了，系统也崩了（多年linux 经验解决不了，尝试了几个小时，<code>google</code> 了解到貌似是 <code>Ubuntu 16.04 LTS</code> 的 <code>bug</code> 所致，有个旧内核依赖怎么都干不掉，导致所有的 <code>dpkg -i</code> 都运行不了），这台机器上安装了 <code>jenkins</code> 和 <code>seafile</code>，问过了别无其他，心想 <code>jenkins</code> 我也熟练部署了，只能硬着头皮去跟组长说要重装系统，于是有了这篇文章。</p>
<a id="more"></a>
<h2 id="重装系统"><a href="#重装系统" class="headerlink" title="重装系统"></a>重装系统</h2><p>下载 Ububtu 系统，选了最新的长期支持版本 18.04，UI 大改了，看了挺喜欢，安排下载。这步没啥说，随便拿了个5年前的捣鼓用的 4G U盘，在 mac 制作了一个 Ubuntu 的安装盘。从 U盘启动，安装系统。</p>
<h2 id="安装-Seafile-服务器端"><a href="#安装-Seafile-服务器端" class="headerlink" title="安装 Seafile 服务器端"></a>安装 Seafile 服务器端</h2><h3 id="更新下系统"><a href="#更新下系统" class="headerlink" title="更新下系统"></a>更新下系统</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update </span><br><span class="line">apt-get upgrade</span><br></pre></td></tr></table></figure>
<h3 id="安装-python-2-7-及其它依赖"><a href="#安装-python-2-7-及其它依赖" class="headerlink" title="安装 python 2.7 及其它依赖"></a>安装 python 2.7 及其它依赖</h3><p>由于 <code>seafile</code> 使用的 py 2.7，但 <code>Ubuntu</code> 默认集成的是 3+ 版本，所以要安装。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get install python</span><br><span class="line">apt-get install python2.7 libpython2.7 python-setuptools python-pil python-ldap python-urllib3 ffmpeg python-pip python-mysqldb python-memcache</span><br><span class="line">pip install pillow moviepy</span><br></pre></td></tr></table></figure>
<h3 id="安装-Mariadb"><a href="#安装-Mariadb" class="headerlink" title="安装 Mariadb"></a>安装 Mariadb</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install mariadb-server</span><br></pre></td></tr></table></figure>
<h3 id="开始安装-seafile"><a href="#开始安装-seafile" class="headerlink" title="开始安装 seafile"></a>开始安装 seafile</h3><h4 id="下载-Seafile-服务器端程序"><a href="#下载-Seafile-服务器端程序" class="headerlink" title="下载 Seafile 服务器端程序"></a>下载 Seafile 服务器端程序</h4><p>去 <a href="https://www.seafile.com/download/" target="_blank" rel="noopener">Seafile官方下载地址</a> 复制 服务器端 -&gt; Linux 服务器端 -&gt; 64bit 链接，比如现在最新的是 <code>http://seafile-downloads.oss-cn-shanghai.aliyuncs.com/seafile-server_6.2.5_x86-64.tar.gz</code>，目录的话建议安装到 /opt 下面，但是数据目录使用磁盘空间比较大的地方，比如我这边是是安装位置和数据目录都放在了 <code>/home/data/seafile</code> 下，过程如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line">mkdir -p data/seafile &amp;&amp; <span class="built_in">cd</span> data/seafile</span><br><span class="line">wget http://seafile-downloads.oss-cn-shanghai.aliyuncs.com/seafile-server_6.2.5_x86-64.tar.gz</span><br><span class="line">mkdir installed &amp;&amp; mv seafile-server_6.2.5_x86-64.tar.gz installed</span><br></pre></td></tr></table></figure>
<h4 id="安装-seafile-服务端"><a href="#安装-seafile-服务端" class="headerlink" title="安装 seafile 服务端"></a>安装 seafile 服务端</h4><p>因为依赖环境和数据库都已经安装好了，这边我是使用的 <code>Mariadb</code>，所以用的是 <code>seafile</code> 写好的 <code>setup-seafile-mysql.sh</code> 脚本进行 setup，中间会提示你输入 <code>seafile-data</code> 数据存放目录，记得输入你指定的目录，比如我这里应该填<code>/home/data/seafile/seafile-data</code>，当然如果你已经在<code>/home/data/seafile/seafile-server-6.2.5</code>则直接 Enter 默认即可，它会自动去上层目录创建<code>seafile-data</code>目录。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> seafile-server-6.2.5</span><br><span class="line">./setup-seafile-mysql.sh</span><br></pre></td></tr></table></figure>
<p>一路按引导完成，根据提示，输入服务器名、IP、数据目录（默认为<code>../seafile-data</code>）、<code>seahub</code> 端口、<code>seafile-server</code>监听端口（默认8082，不可更改），<code>ifconfig</code> 查看自己内网 ip，查完成之后确认设置，目录会变成如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">vanjay@VanJay:/home/data$ sudo tree -L 3</span><br><span class="line">.</span><br><span class="line">└── seafile</span><br><span class="line">    ├── ccnet</span><br><span class="line">    │   ├── ccnet.sock</span><br><span class="line">    │   ├── misc</span><br><span class="line">    │   ├── mykey.peer</span><br><span class="line">    │   └── seafile.ini</span><br><span class="line">    ├── conf</span><br><span class="line">    │   ├── ccnet.conf</span><br><span class="line">    │   ├── seafdav.conf</span><br><span class="line">    │   ├── seafile.conf</span><br><span class="line">    │   ├── seahub_settings.py</span><br><span class="line">    │   └── seahub_settings.pyc</span><br><span class="line">    ├── installed</span><br><span class="line">    │   └── seafile-server_6.2.5_x86-64.tar.gz</span><br><span class="line">    ├── logs</span><br><span class="line">    │   ├── ccnet.log</span><br><span class="line">    │   ├── controller.log</span><br><span class="line">    │   ├── seafile.log</span><br><span class="line">    │   ├── seahub.log</span><br><span class="line">    │   └── seahub_django_request.log</span><br><span class="line">    ├── pids</span><br><span class="line">    │   ├── ccnet.pid</span><br><span class="line">    │   └── seaf-server.pid</span><br><span class="line">    ├── seafile-data</span><br><span class="line">    │   ├── commits</span><br><span class="line">    │   ├── fs</span><br><span class="line">    │   ├── httptemp</span><br><span class="line">    │   ├── library-template</span><br><span class="line">    │   ├── storage</span><br><span class="line">    │   └── tmpfiles</span><br><span class="line">    ├── seafile-server-6.2.5</span><br><span class="line">    │   ├── check_init_admin.py</span><br><span class="line">    │   ├── reset-admin.sh</span><br><span class="line">    │   ├── runtime</span><br><span class="line">    │   ├── seaf-fsck.sh</span><br><span class="line">    │   ├── seaf-fuse.sh</span><br><span class="line">    │   ├── seaf-gc.sh</span><br><span class="line">    │   ├── seafile</span><br><span class="line">    │   ├── seafile.sh</span><br><span class="line">    │   ├── seahub</span><br><span class="line">    │   ├── seahub.sh</span><br><span class="line">    │   ├── setup-seafile-mysql.py</span><br><span class="line">    │   ├── setup-seafile-mysql.sh</span><br><span class="line">    │   ├── setup-seafile.sh</span><br><span class="line">    │   └── upgrade</span><br><span class="line">    ├── seafile-server-latest -&gt; seafile-server-6.2.5</span><br><span class="line">    └── seahub-data</span><br><span class="line">        └── avatars</span><br><span class="line"></span><br><span class="line">22 directories, 26 files</span><br></pre></td></tr></table></figure>
<h4 id="启动-停止-Seafile"><a href="#启动-停止-Seafile" class="headerlink" title="启动/停止 Seafile"></a>启动/停止 Seafile</h4><p>启动<code>Seafile-server</code>和<code>Seahub</code>，第一次启动会提示建立管理员账号。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./seafile.sh start</span><br><span class="line">./seahub.sh start &lt;端口号&gt;</span><br></pre></td></tr></table></figure>
<p>此时通过浏览器本地访问 <code>localhost:端口号</code>，应该可以出现登录页面。如果出现网页乱码，可以删除<code>/tmp/seahub_cache</code>再重启seahub，即可恢复正常。</p>
<p>常用命令：</p>
<p>关闭</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./seahub.sh stop <span class="comment"># 停止 Seahub</span></span><br><span class="line">./seafile.sh stop <span class="comment"># 停止 Seafile 进程</span></span><br></pre></td></tr></table></figure>
<p>重启</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./seafile.sh restart <span class="comment"># 停止当前的 Seafile 进程，然后重启 Seafile</span></span><br><span class="line">./seahub.sh restart  <span class="comment"># 停止当前的 Seahub 进程，并在 8000 端口重新启动 Seahub</span></span><br></pre></td></tr></table></figure>
<p>使用 <code>pgrep</code> 命令检查 <code>seafile/seahub</code> 进程是否还在运行中</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pgrep -f seafile-controller <span class="comment"># 查看 Seafile 进程</span></span><br><span class="line">pgrep -f <span class="string">"seahub"</span> <span class="comment"># 查看 Seahub 进程</span></span><br></pre></td></tr></table></figure>
<p>使用 <code>pkill</code> 命令杀掉相关进程</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pkill -f seafile-controller <span class="comment"># 结束 Seafile 进程</span></span><br><span class="line">pkill -f <span class="string">"seahub"</span> <span class="comment"># 结束 Seafile 进程</span></span><br></pre></td></tr></table></figure>
<h2 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h2><p>本地可以访问了，但从外部访问就不行了，需要配置下防火墙，当然你也直接关闭防火墙。</p>
<p><strong>开关防火墙</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ufw <span class="built_in">disable</span> <span class="comment"># 关闭</span></span><br><span class="line">ufw <span class="built_in">enable</span> <span class="comment"># 开启</span></span><br></pre></td></tr></table></figure>
<p><strong>也可添加端口</strong>，端口8082，必须添加，这是 <code>seafile-file</code> 端口，不可更改。8000为 seahub 默认监听端口，如果自定义 seahub 监听端口，这里记得添加。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --add-port=8000/tcp</span><br><span class="line">firewall-cmd --permanent --add-port=8082/tcp</span><br><span class="line">firewall-cmd --permanent --add-service http</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">firewall-cmd --list-all</span><br></pre></td></tr></table></figure>
<h2 id="添加执行用户和配置目录权限（运行没问题的话无需执行）"><a href="#添加执行用户和配置目录权限（运行没问题的话无需执行）" class="headerlink" title="添加执行用户和配置目录权限（运行没问题的话无需执行）"></a>添加执行用户和配置目录权限（运行没问题的话无需执行）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">useradd vanjay -s /sbin/nologin -d /home/data/seafile</span><br><span class="line">chown -R vanjay /home/data/seafile/</span><br><span class="line">chown -R vanjay /tmp/seahub_cache/</span><br></pre></td></tr></table></figure>
<h2 id="安装-Ubuntu-Seafile-客户端"><a href="#安装-Ubuntu-Seafile-客户端" class="headerlink" title="安装 Ubuntu Seafile 客户端"></a>安装 Ubuntu Seafile 客户端</h2><p>开始使用吧。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:seafile/seafile-client</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install seafile-gui</span><br></pre></td></tr></table></figure>
<h2 id="配置开机自启动-Seafile"><a href="#配置开机自启动-Seafile" class="headerlink" title="配置开机自启动 Seafile"></a>配置开机自启动 Seafile</h2><p><strong>对于运行 systemd 的系统（例如 Debian 8 以及更新的版本，Ubuntu 15.04以及更新的版本），创建 systemd 服务管理文件</strong></p>
<ul>
<li>创建 <code>seafile service</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/systemd/system/seafile.service</span><br></pre></td></tr></table></figure>
<p>输入如下内容，路径改为自己的 seafile 路径。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Seafile</span><br><span class="line"><span class="comment"># add mysql.service or postgresql.service depending on your database to the line below</span></span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=oneshot</span><br><span class="line">ExecStart=/home/data/seafile/seafile-server-latest/seafile.sh start</span><br><span class="line">ExecStop=/home/data/seafile/seafile-server-latest/seafile.sh stop</span><br><span class="line">RemainAfterExit=yes</span><br><span class="line">User=seafile</span><br><span class="line">Group=seafile</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
<ul>
<li>创建 <code>seahub service</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/systemd/system/seahub.service</span><br></pre></td></tr></table></figure>
<p>输入如下内容，路径改为自己的 seafile 路径。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Seafile hub</span><br><span class="line">After=network.target seafile.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="comment"># change start to start-fastcgi if you want to run fastcgi</span></span><br><span class="line">ExecStart=/home/data/seafile/seafile-server-latest/seahub.sh start</span><br><span class="line">ExecStop=/home/data/seafile/seafile-server-latest/seahub.sh stop</span><br><span class="line">User=seafile</span><br><span class="line">Group=seafile</span><br><span class="line">Type=oneshot</span><br><span class="line">RemainAfterExit=yes</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
<h3 id="设置服务开机自启动"><a href="#设置服务开机自启动" class="headerlink" title="设置服务开机自启动"></a>设置服务开机自启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> seafile.service</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> seahub.service</span><br></pre></td></tr></table></figure>
<h2 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h2><p>参考链接：</p>
<p><a href="https://manual-cn.seafile.com/" target="_blank" rel="noopener">Seafile 中文文档</a></p>
<p><a href="https://blog.littlefox.me/set_up_your_own_seafile_server/" target="_blank" rel="noopener">搭建一个属于自己的Seafile网盘</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;新入职的公司内部同步一些文件使用的 &lt;code&gt;Seafile&lt;/code&gt;，没部署远程，只使用的内网，由于这个 &lt;code&gt;seafile&lt;/code&gt; 是一个前同事搭建的（之前的 iOSer，我来替代他了，阴差阳错。。。），可能那时他也不是太熟吧，把文件存放目录放在了安装位置的挂载分区，导致长时间使用下来，该分区磁盘空间满了，无法继续运行，于是我简单 &lt;code&gt;google&lt;/code&gt; 了一番，开始转移目录，找到了 &lt;code&gt;seafile-data&lt;/code&gt; 目录之后，发现查看都没权限，包括 &lt;code&gt;cp -R&lt;/code&gt;、&lt;code&gt;mv&lt;/code&gt; 都无法运行，直接给了&lt;code&gt;755&lt;/code&gt;权限，&lt;code&gt;mv seafile-data&lt;/code&gt; 目录至新目录，更改 &lt;code&gt;seafile.ini&lt;/code&gt; 文件，指向新目录，重启 &lt;code&gt;seafile&lt;/code&gt;，发现 &lt;code&gt;seafile&lt;/code&gt; 已经无法启动……下意识重启一下电脑，还是不行，这时看下禅道，测试又提了一堆 &lt;code&gt;BUG&lt;/code&gt;，就先放下开始修 BUG 了。第二天早上过来继续，发现系统都进不去了，登录界面无法输入密码，没办法只好命令行登入系统，再次 &lt;code&gt;google&lt;/code&gt; 了解到 &lt;code&gt;seafile&lt;/code&gt; 存放文件的形式类似于 &lt;code&gt;svn&lt;/code&gt; 或 &lt;code&gt;git&lt;/code&gt; ，也是那种打散存放并内部记录 &lt;code&gt;state&lt;/code&gt; 和带有 &lt;code&gt;commit log&lt;/code&gt; 的，看到了官方有修复工具，尝试无果，放弃了，系统也崩了（多年linux 经验解决不了，尝试了几个小时，&lt;code&gt;google&lt;/code&gt; 了解到貌似是 &lt;code&gt;Ubuntu 16.04 LTS&lt;/code&gt; 的 &lt;code&gt;bug&lt;/code&gt; 所致，有个旧内核依赖怎么都干不掉，导致所有的 &lt;code&gt;dpkg -i&lt;/code&gt; 都运行不了），这台机器上安装了 &lt;code&gt;jenkins&lt;/code&gt; 和 &lt;code&gt;seafile&lt;/code&gt;，问过了别无其他，心想 &lt;code&gt;jenkins&lt;/code&gt; 我也熟练部署了，只能硬着头皮去跟组长说要重装系统，于是有了这篇文章。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://wangwanjie.github.io/categories/Linux/"/>
    
    
      <category term="Seafile" scheme="https://wangwanjie.github.io/tags/Seafile/"/>
    
      <category term="Ubuntu" scheme="https://wangwanjie.github.io/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="https://wangwanjie.github.io/tags/Linux/"/>
    
      <category term="个人云盘" scheme="https://wangwanjie.github.io/tags/%E4%B8%AA%E4%BA%BA%E4%BA%91%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>iOS 开发从 Array 生成特定分隔符隔开的 String</title>
    <link href="https://wangwanjie.github.io/2018/10/01/iOS-%E5%BC%80%E5%8F%91%E4%BB%8E-Array-%E7%94%9F%E6%88%90%E7%89%B9%E5%AE%9A%E5%88%86%E9%9A%94%E7%AC%A6%E9%9A%94%E5%BC%80%E7%9A%84-String/"/>
    <id>https://wangwanjie.github.io/2018/10/01/iOS-开发从-Array-生成特定分隔符隔开的-String/</id>
    <published>2018-09-30T17:41:45.000Z</published>
    <updated>2018-09-30T17:53:41.051Z</updated>
    
    <content type="html"><![CDATA[<p>从一个String Array 或者 Object Array 生成字符串，使用特定的分隔符隔开，起始和末尾不需要分隔符，当传入的是对象的时候，需要指定Object 中 String 的 key 字符串，效果如下图所示：</p>
<p><img src="/images/stringFromArray.png" alt="示例"></p>
<a id="more"></a>
<p>直接看代码，只是备忘。</p>
<h3 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  TGStringTool.h</span><br><span class="line">//  DongKe</span><br><span class="line">//</span><br><span class="line">//  Created by VanJay on 2018/9/30.</span><br><span class="line">//  Copyright © 2018 DongKe. All rights reserved.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_BEGIN</span><br><span class="line"></span><br><span class="line">@interface TGStringTool : NSObject</span><br><span class="line">+ (NSString *)stringWithStringArr:(NSArray&lt;NSString *&gt; *)arr separatedStr:(NSString *)separatedStr;</span><br><span class="line">+ (NSString *)stringWithArr:(NSArray&lt;id&gt; *)arr valueKey:(NSString *)key separatedStr:(NSString *)separatedStr;</span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">NS_ASSUME_NONNULL_END</span><br></pre></td></tr></table></figure>
<h3 id="实现文件"><a href="#实现文件" class="headerlink" title="实现文件"></a>实现文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  TGStringTool.m</span><br><span class="line">//  DongKe</span><br><span class="line">//</span><br><span class="line">//  Created by VanJay on 2018/9/30.</span><br><span class="line">//  Copyright © 2018 DongKe. All rights reserved.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#import &quot;TGStringTool.h&quot;</span><br><span class="line"></span><br><span class="line">@implementation TGStringTool</span><br><span class="line">+ (NSString *)stringWithStringArr:(NSArray&lt;NSString *&gt; *)arr separatedStr:(NSString *)separatedStr &#123;</span><br><span class="line">    NSMutableString *temp = [NSMutableString string];</span><br><span class="line">    if (arr.count &gt; 0) &#123;</span><br><span class="line">        [arr enumerateObjectsUsingBlock:^(NSString *_Nonnull str, NSUInteger idx, BOOL *_Nonnull stop) &#123;</span><br><span class="line">            if (str.length &gt; 0) &#123;</span><br><span class="line">                [temp appendString:str];</span><br><span class="line">                if (idx &lt; arr.count - 1) &#123;</span><br><span class="line">                    [temp appendString:separatedStr];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (NSString *)stringWithArr:(NSArray&lt;id&gt; *)arr valueKey:(NSString *)key separatedStr:(NSString *)separatedStr &#123;</span><br><span class="line">    NSMutableString *temp = [NSMutableString string];</span><br><span class="line">    if (arr.count &gt; 0) &#123;</span><br><span class="line">        [arr enumerateObjectsUsingBlock:^(id _Nonnull obj, NSUInteger idx, BOOL *_Nonnull stop) &#123;</span><br><span class="line">            if ([obj respondsToSelector:NSSelectorFromString(key)]) &#123;</span><br><span class="line">                NSString *str = [obj valueForKey:key];</span><br><span class="line">                if (str.length &gt; 0) &#123;</span><br><span class="line">                    [temp appendString:str];</span><br><span class="line">                    if (idx &lt; arr.count - 1) &#123;</span><br><span class="line">                        [temp appendString:separatedStr];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;];</span><br><span class="line">    &#125;</span><br><span class="line">    return temp;</span><br><span class="line">&#125;</span><br><span class="line">@end</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从一个String Array 或者 Object Array 生成字符串，使用特定的分隔符隔开，起始和末尾不需要分隔符，当传入的是对象的时候，需要指定Object 中 String 的 key 字符串，效果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/stringFromArray.png&quot; alt=&quot;示例&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS 开发" scheme="https://wangwanjie.github.io/categories/iOS-%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Objective-C" scheme="https://wangwanjie.github.io/tags/Objective-C/"/>
    
      <category term="String" scheme="https://wangwanjie.github.io/tags/String/"/>
    
      <category term="iOS" scheme="https://wangwanjie.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS 数字转 xx 万 xx 亿</title>
    <link href="https://wangwanjie.github.io/2018/09/30/iOS-%E6%95%B0%E5%AD%97%E8%BD%AC-xx-%E4%B8%87-xx-%E4%BA%BF/"/>
    <id>https://wangwanjie.github.io/2018/09/30/iOS-数字转-xx-万-xx-亿/</id>
    <published>2018-09-30T05:08:27.000Z</published>
    <updated>2018-09-30T17:53:33.248Z</updated>
    
    <content type="html"><![CDATA[<h2 id="App-开发显示-XX-万-xx-亿"><a href="#App-开发显示-XX-万-xx-亿" class="headerlink" title="App 开发显示 XX 万 xx 亿"></a>App 开发显示 XX 万 xx 亿</h2><p>APP开发中界面显示很多地方需要显示数字，但是如果数字过大，可能会有将数字显示成 xx 万、xx 百万、xx 亿的需求，简单封装了一下，备忘，以便日后使用。</p>
<h3 id="这是声明文件，调用者可以决定保留几位小数，是否需要四舍五入，也可依据代码自行扩展方法。"><a href="#这是声明文件，调用者可以决定保留几位小数，是否需要四舍五入，也可依据代码自行扩展方法。" class="headerlink" title="这是声明文件，调用者可以决定保留几位小数，是否需要四舍五入，也可依据代码自行扩展方法。"></a>这是声明文件，调用者可以决定保留几位小数，是否需要四舍五入，也可依据代码自行扩展方法。</h3><a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  TGCaculateNumberTool.h</span><br><span class="line">//  Tungee</span><br><span class="line">//</span><br><span class="line">//  Created by VanJay on 2018/8/22.</span><br><span class="line">//  Copyright © 2018年 Tungee. All rights reserved.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line"></span><br><span class="line">typedef NS_ENUM(NSInteger, TGCNToFixedCount) &#123;</span><br><span class="line">    TGCNToFixedCountZero = 0,  ///&lt; b不保留小数</span><br><span class="line">    TGCNToFixedCountOne,       ///&lt; 保留一位小数</span><br><span class="line">    TGCNToFixedCountTwo,       ///&lt; 保留两位小数</span><br><span class="line">    TGCNToFixedCountThree,     ///&lt; 保留三位小数</span><br><span class="line">    TGCNToFixedCountFour       ///&lt; 保留四位小数</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">@interface TGCaculateNumberTool : NSObject</span><br><span class="line">+ (NSString *)stringFromNumber:(NSUInteger)number;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> 返回数字描述</span><br><span class="line"></span><br><span class="line"> @param number 数字</span><br><span class="line"> @param toFixed 保留小数位数</span><br><span class="line"> @param isRounded 是否四舍五入</span><br><span class="line"> */</span><br><span class="line">+ (NSString *)stringFromNumber:(NSUInteger)number toFixedCount:(TGCNToFixedCount)toFixed rounded:(BOOL)isRounded;</span><br><span class="line">@end</span><br></pre></td></tr></table></figure>
<h4 id="这是实现文件"><a href="#这是实现文件" class="headerlink" title="这是实现文件"></a>这是实现文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  TGCaculateNumberTool.m</span><br><span class="line">//  Tungee</span><br><span class="line">//</span><br><span class="line">//  Created by VanJay on 2018/8/22.</span><br><span class="line">//  Copyright © 2018年 Tungee. All rights reserved.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#import &quot;TGCaculateNumberTool.h&quot;</span><br><span class="line"></span><br><span class="line">@implementation TGCaculateNumberTool</span><br><span class="line">+ (NSString *)stringFromNumber:(NSUInteger)number &#123;</span><br><span class="line">    NSString *output;</span><br><span class="line"></span><br><span class="line">    if (number &lt;= 0) &#123;</span><br><span class="line">        output = @&quot;0&quot;;</span><br><span class="line">    &#125; else if (number &lt;= 9999) &#123;</span><br><span class="line">        output = [NSString stringWithFormat:@&quot;%ld&quot;, (unsigned long)number];</span><br><span class="line">    &#125; else if (number &lt;= 99999999) &#123;  // 9999999</span><br><span class="line">        output = [NSString stringWithFormat:@&quot;%.0f万&quot;, [self roundFloat:(double)number / 10000.0 toFixedCount:TGCNToFixedCountZero rounded:YES]];</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        output = [NSString stringWithFormat:@&quot;%.0f亿&quot;, [self roundFloat:(double)number / 100000000.0 toFixedCount:TGCNToFixedCountZero rounded:YES]];</span><br><span class="line">    &#125;</span><br><span class="line">    return output;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (NSString *)stringFromNumber:(NSUInteger)number toFixedCount:(TGCNToFixedCount)toFixed rounded:(BOOL)isRounded &#123;</span><br><span class="line">    NSString *output;</span><br><span class="line"></span><br><span class="line">    if (number &lt;= 0) &#123;</span><br><span class="line">        output = @&quot;0&quot;;</span><br><span class="line">    &#125; else if (number &lt;= 9999) &#123;</span><br><span class="line">        output = [NSString stringWithFormat:@&quot;%ld&quot;, (unsigned long)number];</span><br><span class="line">    &#125; else if (number &lt;= 99999999) &#123;  // 9999999</span><br><span class="line">        if (toFixed == TGCNToFixedCountZero) &#123;</span><br><span class="line">            output = [NSString stringWithFormat:@&quot;%.0f万&quot;, [self roundFloat:(double)number / 10000.0 toFixedCount:toFixed rounded:isRounded]];</span><br><span class="line">        &#125; else if (toFixed == TGCNToFixedCountOne) &#123;</span><br><span class="line">            output = [NSString stringWithFormat:@&quot;%.1f万&quot;, [self roundFloat:(double)number / 10000.0 toFixedCount:toFixed rounded:isRounded]];</span><br><span class="line">        &#125; else if (toFixed == TGCNToFixedCountTwo) &#123;</span><br><span class="line">            output = [NSString stringWithFormat:@&quot;%.2f万&quot;, [self roundFloat:(double)number / 10000.0 toFixedCount:toFixed rounded:isRounded]];</span><br><span class="line">        &#125; else if (toFixed == TGCNToFixedCountThree) &#123;</span><br><span class="line">            output = [NSString stringWithFormat:@&quot;%.3f万&quot;, [self roundFloat:(double)number / 10000.0 toFixedCount:toFixed rounded:isRounded]];</span><br><span class="line">        &#125; else if (toFixed == TGCNToFixedCountFour) &#123;</span><br><span class="line">            output = [NSString stringWithFormat:@&quot;%.4f万&quot;, [self roundFloat:(double)number / 10000.0 toFixedCount:toFixed rounded:isRounded]];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        if (toFixed == TGCNToFixedCountZero) &#123;</span><br><span class="line">            output = [NSString stringWithFormat:@&quot;%.0f亿&quot;, [self roundFloat:(double)number / 100000000.0 toFixedCount:toFixed rounded:isRounded]];</span><br><span class="line">        &#125; else if (toFixed == TGCNToFixedCountOne) &#123;</span><br><span class="line">            output = [NSString stringWithFormat:@&quot;%.1f亿&quot;, [self roundFloat:(double)number / 100000000.0 toFixedCount:toFixed rounded:isRounded]];</span><br><span class="line">        &#125; else if (toFixed == TGCNToFixedCountTwo) &#123;</span><br><span class="line">            output = [NSString stringWithFormat:@&quot;%.2f亿&quot;, [self roundFloat:(double)number / 100000000.0 toFixedCount:toFixed rounded:isRounded]];</span><br><span class="line">        &#125; else if (toFixed == TGCNToFixedCountThree) &#123;</span><br><span class="line">            output = [NSString stringWithFormat:@&quot;%.3f亿&quot;, [self roundFloat:(double)number / 100000000.0 toFixedCount:toFixed rounded:isRounded]];</span><br><span class="line">        &#125; else if (toFixed == TGCNToFixedCountFour) &#123;</span><br><span class="line">            output = [NSString stringWithFormat:@&quot;%.4f亿&quot;, [self roundFloat:(double)number / 100000000.0 toFixedCount:toFixed rounded:isRounded]];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return output;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> 计算特定小数位数</span><br><span class="line"></span><br><span class="line"> @param input 输入数字</span><br><span class="line"> @param toFixed 保留小数位数</span><br><span class="line"> @param isRounded 是否四舍五入</span><br><span class="line"> */</span><br><span class="line">+ (double)roundFloat:(double)input toFixedCount:(TGCNToFixedCount)toFixed rounded:(BOOL)isRounded &#123;</span><br><span class="line"></span><br><span class="line">    double scale = 1;</span><br><span class="line">    if (toFixed == TGCNToFixedCountZero) &#123;</span><br><span class="line">        scale = 1;</span><br><span class="line">    &#125; else if (toFixed == TGCNToFixedCountOne) &#123;</span><br><span class="line">        scale = 10;</span><br><span class="line">    &#125; else if (toFixed == TGCNToFixedCountTwo) &#123;</span><br><span class="line">        scale = 100;</span><br><span class="line">    &#125; else if (toFixed == TGCNToFixedCountThree) &#123;</span><br><span class="line">        scale = 1000;</span><br><span class="line">    &#125; else if (toFixed == TGCNToFixedCountFour) &#123;</span><br><span class="line">        scale = 10000;</span><br><span class="line">    &#125;</span><br><span class="line">    if (isRounded) &#123;</span><br><span class="line">        return (floorf(input * scale + 0.5)) / scale;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        return (floorf(input * scale - 0.5)) / scale;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;App-开发显示-XX-万-xx-亿&quot;&gt;&lt;a href=&quot;#App-开发显示-XX-万-xx-亿&quot; class=&quot;headerlink&quot; title=&quot;App 开发显示 XX 万 xx 亿&quot;&gt;&lt;/a&gt;App 开发显示 XX 万 xx 亿&lt;/h2&gt;&lt;p&gt;APP开发中界面显示很多地方需要显示数字，但是如果数字过大，可能会有将数字显示成 xx 万、xx 百万、xx 亿的需求，简单封装了一下，备忘，以便日后使用。&lt;/p&gt;
&lt;h3 id=&quot;这是声明文件，调用者可以决定保留几位小数，是否需要四舍五入，也可依据代码自行扩展方法。&quot;&gt;&lt;a href=&quot;#这是声明文件，调用者可以决定保留几位小数，是否需要四舍五入，也可依据代码自行扩展方法。&quot; class=&quot;headerlink&quot; title=&quot;这是声明文件，调用者可以决定保留几位小数，是否需要四舍五入，也可依据代码自行扩展方法。&quot;&gt;&lt;/a&gt;这是声明文件，调用者可以决定保留几位小数，是否需要四舍五入，也可依据代码自行扩展方法。&lt;/h3&gt;
    
    </summary>
    
      <category term="iOS 开发" scheme="https://wangwanjie.github.io/categories/iOS-%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="https://wangwanjie.github.io/tags/iOS/"/>
    
      <category term="Objective" scheme="https://wangwanjie.github.io/tags/Objective/"/>
    
  </entry>
  
  <entry>
    <title>购买BanwagonHOST VPS自建Shadowsocks记录</title>
    <link href="https://wangwanjie.github.io/2017/07/28/%E8%B4%AD%E4%B9%B0BanwagonHOST-VPS%E8%87%AA%E5%BB%BAShadowsocks%E8%AE%B0%E5%BD%95/"/>
    <id>https://wangwanjie.github.io/2017/07/28/购买BanwagonHOST-VPS自建Shadowsocks记录/</id>
    <published>2017-07-27T16:15:23.000Z</published>
    <updated>2018-07-05T09:30:55.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote>
<p>不能畅游墙外没法好好生活和工作</p>
</blockquote>
<p>本来手里有着五六个 <code>Shadowsocks</code> 帐号，但体验都不佳，一直也没怎么用，是因为一直使用公司搭建的 <code>Cisco Anyconnect</code>，科学上网后百兆带宽可以满速使用，速度虽快，但是客户端软件默认是全局代理的，虽然可以走<code>IP route list</code>达到和<code>Shadowsocks</code>的<code>PAC</code>同样的作用，但效果慎微，而且<code>IP</code>要自己去填，所以公司<code>IT</code>直接没搞这个<code>route list</code>，因为我们大部分电脑和手机<code>APP</code>都在墙内，这就导致在使用了<code>Cisco Anyconnect</code>后大部分电脑或者手机上的<code>APP</code>网络访问困难，常开<code>VPN</code>还是需要<code>Shadowsocks</code>等可根据 <strong>PAC清单自动代理</strong> 或者 <strong>分应用代理</strong> 的一类软件。</p>
<a id="more"></a>
<h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p>废话有点多，进入主题。前几日群里的前辈在群里说道自搭的<code>Shadowsocks</code>在使用了<code>Google</code>提出的<code>TCP</code>拥塞控制新算法——<code>BBR</code>之后，解决了以下两个问题：</p>
<pre><code>1. 在有一定丢包率的网络链路上充分利用带宽；
2. 降低网络链路上的 buffer 占用率，从而降低延迟。
</code></pre><p> 正好有时间，大佬说的又激发了我的兴趣，我决定自己也搭一个玩玩，也以备不时之需，经历这一天，也总结了个人认为最省事的路线，以下是步骤记录。</p>
<h2 id="购买VPS"><a href="#购买VPS" class="headerlink" title="购买VPS"></a>购买<code>VPS</code></h2><p>在请教了群里的前辈购买何档次的<code>BanwagonHOST VPN</code>之后，购买了19.99$/年的方案，这是购买地址：<a href="https://bandwagonhost.com/index.php" target="_blank" rel="noopener">BanwagonHOST</a>，这里注意两点，第一点：购买时注意买基于<code>KVM</code>的，而不是<code>OpenVZ</code>，<code>KVM</code>是新推出的，只了解了大体不同，想知道具体差异自行<a href="https://www.google.com" target="_blank" rel="noopener">Google</a>，一般来说，买新架构就没错了；第二点：在选择<code>Location</code>时，最好选择美国洛杉矶节点<code>Los Angeles</code>，别问为什么，前人经验，至于是<code>QNET</code>还是<code>MCOM</code>，自行谷歌这二者差异，有人汇总对比了这两种方案，不同城市的<code>ping</code>值有高有低，总体来说<code>QNET</code>稍好，所以我购买的是它。</p>
<h2 id="重装系统"><a href="#重装系统" class="headerlink" title="重装系统"></a>重装系统</h2><p>付款购买成功后，进入当前页面的<code>Services-My Services</code>菜单下，找到你新购买的<code>Product/Service</code>，进入控制面板<code>KiviVM Control Panel</code>，界面很简单，每个功能浏览一下之后开始吧，预装的貌似是<code>Cent OS 6</code>，重装成你想要的系统吧，根据提示来，很<code>easy</code>。我个人比较习惯<code>Ubuntu</code>，所以安装了面板上支持的最新版本的<code>Ubuntu 16.04 x86_64</code>，面板里有一键安装<code>Shadowsocks Server</code>和<code>ShadowsocksR Server</code>功能，但个人不推荐，没啥别的原因，因为感觉不受我控制。装好后会提示你生成了一个随机的ROOT密码，记下来。执行以下步骤：</p>
<pre><code>1.回到你的电脑，用你自己的方式`SSH`登陆到你的`VPS`，我用的`iTerm`，输入`ssh root@your_vps_ip_address -p your_vps_port`（本地要配置好`RSA`），默认密码是前面保存的随机密码。
2.默认ROOT密码不好记，登陆成功后输入`passwd`输入两次新的`ROOT`密码更改密码。
3.`Ubuntu`的话更新下系统，分别执行`apt-get update`和`apt-get upgrade`（不必须但建议）
</code></pre><h2 id="安装Shadowsocks"><a href="#安装Shadowsocks" class="headerlink" title="安装Shadowsocks"></a>安装<code>Shadowsocks</code></h2><p>安装的方式有很多，我独爱个人认为最优的那种，执行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocksR.sh</span><br><span class="line">chmod +x shadowsocksR.sh</span><br><span class="line">./shadowsocksR.sh 2&gt;&amp;1 | tee shadowsocksR.log</span><br></pre></td></tr></table></figure>
<p>你也可以用<code>&amp;&amp;</code>连接一次性执行，按提示完成即可。</p>
<h2 id="安装Google-bbr"><a href="#安装Google-bbr" class="headerlink" title="安装Google bbr"></a>安装<code>Google bbr</code></h2><p>一、如果你的VPS是基于KVM的，运行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh</span><br><span class="line">chmod +x bbr.sh</span><br><span class="line">./bbr.sh</span><br></pre></td></tr></table></figure>
<p>按照提示安装完成，安装完成后，检测是否成功安装：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br></pre></td></tr></table></figure>
<p>输出的信息包含<code>bbr</code>就<code>Ok</code>了，一般为<code>net.ipv4.tcp_available_congestion_control = bbr cubic reno</code></p>
<p>二、如果你不小心购买了基于<code>OpenVZ</code>的<code>VPS</code>，运行这个：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/kuoruan/shell-scripts/master/ovz-bbr/ovz-bbr-installer.sh</span><br><span class="line">chmod +x ovz-bbr-installer.sh</span><br><span class="line">./ovz-bbr-installer.sh</span><br></pre></td></tr></table></figure>
<p>这个连提示都是中文的，按照提示安装完成即可，安装完成使用看说明，检测是否安装成功：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping 10.0.0.2</span><br></pre></td></tr></table></figure>
<p>如果能通，说明 bbr 已经启动,然后检查 iptables 规则:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -nL</span><br><span class="line">Chain PREROUTING (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination</span><br><span class="line">LKL_IN     all  --  0.0.0.0/0            0.0.0.0/0</span><br><span class="line"> </span><br><span class="line">Chain POSTROUTING (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination</span><br><span class="line"> </span><br><span class="line">Chain OUTPUT (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination</span><br><span class="line"> </span><br><span class="line">Chain LKL_IN (1 references)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination</span><br><span class="line">DNAT       tcp  --  0.0.0.0/0            0.0.0.0/0            tcp dpt:8989 to:10.0.0.2</span><br></pre></td></tr></table></figure>
<p>里面有相应的端口规则。</p>
<h2 id="使用Shadowsocks"><a href="#使用Shadowsocks" class="headerlink" title="使用Shadowsocks"></a>使用<code>Shadowsocks</code></h2><p>使用对应的客户端使用的你的<code>Shadowsocks</code>吧，怎么使用自行搜索。想着就那么几个步骤，还是写了这么多。。。</p>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>我购买时不小心买成了<code>OpenVZ</code>的，请教了群里的一位前辈之后告诉我联系客服，我便邮件联系官方退款了，购买了新的基于<code>KVM</code>，服务态度非常好，值得点赞。供参考，希望能帮到有需要的朋友。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.kuoruan.com/48.html" target="_blank" rel="noopener">搬瓦工(Bandwagonhost)搭建Shadowsocks并优化速度</a></p>
<p><a href="https://blog.kuoruan.com/116.html" target="_blank" rel="noopener">OpenVZ 平台 Google BBR 一键安装脚本</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;不能畅游墙外没法好好生活和工作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本来手里有着五六个 &lt;code&gt;Shadowsocks&lt;/code&gt; 帐号，但体验都不佳，一直也没怎么用，是因为一直使用公司搭建的 &lt;code&gt;Cisco Anyconnect&lt;/code&gt;，科学上网后百兆带宽可以满速使用，速度虽快，但是客户端软件默认是全局代理的，虽然可以走&lt;code&gt;IP route list&lt;/code&gt;达到和&lt;code&gt;Shadowsocks&lt;/code&gt;的&lt;code&gt;PAC&lt;/code&gt;同样的作用，但效果慎微，而且&lt;code&gt;IP&lt;/code&gt;要自己去填，所以公司&lt;code&gt;IT&lt;/code&gt;直接没搞这个&lt;code&gt;route list&lt;/code&gt;，因为我们大部分电脑和手机&lt;code&gt;APP&lt;/code&gt;都在墙内，这就导致在使用了&lt;code&gt;Cisco Anyconnect&lt;/code&gt;后大部分电脑或者手机上的&lt;code&gt;APP&lt;/code&gt;网络访问困难，常开&lt;code&gt;VPN&lt;/code&gt;还是需要&lt;code&gt;Shadowsocks&lt;/code&gt;等可根据 &lt;strong&gt;PAC清单自动代理&lt;/strong&gt; 或者 &lt;strong&gt;分应用代理&lt;/strong&gt; 的一类软件。&lt;/p&gt;
    
    </summary>
    
      <category term="VPN" scheme="https://wangwanjie.github.io/categories/VPN/"/>
    
    
      <category term="Mac使用" scheme="https://wangwanjie.github.io/tags/Mac%E4%BD%BF%E7%94%A8/"/>
    
      <category term="BanwagonHOST" scheme="https://wangwanjie.github.io/tags/BanwagonHOST/"/>
    
      <category term="Shadowsocks" scheme="https://wangwanjie.github.io/tags/Shadowsocks/"/>
    
      <category term="科学上网" scheme="https://wangwanjie.github.io/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>Wap APP开发心得</title>
    <link href="https://wangwanjie.github.io/2017/05/03/Wap-APP%E5%BC%80%E5%8F%91%E5%BF%83%E5%BE%97/"/>
    <id>https://wangwanjie.github.io/2017/05/03/Wap-APP开发心得/</id>
    <published>2017-05-03T08:04:57.000Z</published>
    <updated>2017-05-03T08:19:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>经过了一个多月，加班加点，总算完成基本完成了这个Wap APP，可以作为 Version one 面见客户了，感受不多。</p>
<p>MUI 结合 Hbuilder 使用 HTML5+ 开发APP整体来说还是挺顺畅的，虽然文档不完整，但是有开发经验的一眼看过去就知道怎么用了，以后做些不是大型的APP或许会成为我的首选。</p>
<a id="more"></a>
<p>算来这也算是我第三次做一个完整的 Wap 类型的 APP了，总体来说这次是最满意的，前面两个都是用的 JSP，很多特性也是依赖其完成的，但这次是纯原生页面，实现了做这个之前感觉很难的问题（至少去年这个时候感觉好难），当然了，这中间少不了 5+ 和 MUI 的功劳，遗憾的是没用上 Vue，忙的时候总是感叹自己时间不够，太多想学的东西没时间学，但些许零碎的空闲时间一有了又无法埋头去学，这样不好啊~ </p>
<p>这个 APP 先发布 iOS 端， 安卓端还有些许适配问题，相信这次之后，对Wap 开发 APP 能够有一个比较深的认识。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;经过了一个多月，加班加点，总算完成基本完成了这个Wap APP，可以作为 Version one 面见客户了，感受不多。&lt;/p&gt;
&lt;p&gt;MUI 结合 Hbuilder 使用 HTML5+ 开发APP整体来说还是挺顺畅的，虽然文档不完整，但是有开发经验的一眼看过去就知道怎么用了，以后做些不是大型的APP或许会成为我的首选。&lt;/p&gt;
    
    </summary>
    
      <category term="APP开发" scheme="https://wangwanjie.github.io/categories/APP%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="JavaScript" scheme="https://wangwanjie.github.io/tags/JavaScript/"/>
    
      <category term="MUI" scheme="https://wangwanjie.github.io/tags/MUI/"/>
    
      <category term="HTML5" scheme="https://wangwanjie.github.io/tags/HTML5/"/>
    
  </entry>
  
  <entry>
    <title>MUI webview选项卡 首次只加载首页，点击触发打开页面</title>
    <link href="https://wangwanjie.github.io/2017/04/15/MUI%20webview%E9%80%89%E9%A1%B9%E5%8D%A1%20%E9%A6%96%E6%AC%A1%E5%8F%AA%E5%8A%A0%E8%BD%BD%E9%A6%96%E9%A1%B5%EF%BC%8C%E7%82%B9%E5%87%BB%E8%A7%A6%E5%8F%91%E6%89%93%E5%BC%80%E9%A1%B5%E9%9D%A2/"/>
    <id>https://wangwanjie.github.io/2017/04/15/MUI webview选项卡 首次只加载首页，点击触发打开页面/</id>
    <published>2017-04-14T16:10:03.000Z</published>
    <updated>2017-04-14T16:15:42.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>MUI</code> 官方的 <code>Demo</code> 的加载 webview 选项卡的逻辑是一次创建全部的选项卡，只默认显示默认创建的页面，这个页面逻辑没必要这么复杂，扩展性也不强，修改一处多处要修改，我做了简单修改，直接修改数据源，就可以达到更改全部的效果。</p>
<p>直接上全部代码</p>
<a id="more"></a>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>Main<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/config.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/helper.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/common-head.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../css/main.css"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"mui-bar mui-bar-tab"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"mui-tab-item"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"mui-icon iconfont icon-zuanshi"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"mui-tab-label"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"mui-tab-item"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"mui-icon iconfont icon-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"mui-tab-label"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"mui-tab-item"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"mui-icon iconfont icon-zoushi"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"mui-tab-label"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"mui-tab-item"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"mui-icon iconfont icon-yonghuming"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"mui-tab-label"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">			<span class="comment">//mui初始化</span></span></span><br><span class="line"><span class="undefined">			mui.init();</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">			<span class="keyword">var</span> subpage_style = &#123;</span></span><br><span class="line"><span class="javascript">				top: <span class="string">'0px'</span>,</span></span><br><span class="line"><span class="javascript">				bottom: <span class="string">'60px'</span></span></span><br><span class="line"><span class="undefined">			&#125;;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">			<span class="keyword">var</span> subPages = [&#123;</span></span><br><span class="line"><span class="javascript">					href: <span class="string">'wonderfulRecommend.html'</span>,</span></span><br><span class="line"><span class="undefined">					style: subpage_style,</span></span><br><span class="line"><span class="undefined">					id: config.pageID.wonderfulRecommend,</span></span><br><span class="line"><span class="javascript">					name: <span class="string">"精彩推荐"</span></span></span><br><span class="line"><span class="undefined">				&#125;,</span></span><br><span class="line"><span class="undefined">				&#123;</span></span><br><span class="line"><span class="javascript">					href: <span class="string">'lotteryHall.html'</span>,</span></span><br><span class="line"><span class="undefined">					style: subpage_style,</span></span><br><span class="line"><span class="undefined">					id: config.pageID.lotteryHall,</span></span><br><span class="line"><span class="javascript">					name: <span class="string">"购彩大厅"</span></span></span><br><span class="line"><span class="undefined">				&#125;,</span></span><br><span class="line"><span class="undefined">				&#123;</span></span><br><span class="line"><span class="javascript">					href: <span class="string">'drawTrend-pullRefresh.html'</span>,</span></span><br><span class="line"><span class="undefined">					style: subpage_style,</span></span><br><span class="line"><span class="undefined">					id: config.pageID.drawTrend_pullRefresh,</span></span><br><span class="line"><span class="javascript">					name: <span class="string">"开奖走势"</span></span></span><br><span class="line"><span class="undefined">				&#125;,</span></span><br><span class="line"><span class="undefined">				&#123;</span></span><br><span class="line"><span class="javascript">					href: <span class="string">'myLottery.html'</span>,</span></span><br><span class="line"><span class="undefined">					style: subpage_style,</span></span><br><span class="line"><span class="undefined">					id: config.pageID.myLottery,</span></span><br><span class="line"><span class="javascript">					name: <span class="string">"我的彩票"</span></span></span><br><span class="line"><span class="undefined">				&#125;</span></span><br><span class="line"><span class="undefined">			]</span></span><br><span class="line"><span class="javascript">			<span class="comment">// 默认显示页面</span></span></span><br><span class="line"><span class="javascript">			<span class="keyword">var</span> defaultPageIndex = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">			mui.ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">				<span class="comment">// 动态添加 href 和名称</span></span></span><br><span class="line"><span class="javascript">				<span class="keyword">var</span> tabBarItems = <span class="built_in">document</span>.getElementsByClassName(<span class="string">'mui-tab-item'</span>);</span></span><br><span class="line"><span class="javascript">				<span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; tabBarItems.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">					<span class="keyword">var</span> tabBarItem = tabBarItems[i];</span></span><br><span class="line"><span class="javascript">					<span class="comment">// 设置目标页面</span></span></span><br><span class="line"><span class="javascript">					tabBarItem.setAttribute(<span class="string">'href'</span>, subPages[i].href);</span></span><br><span class="line"><span class="javascript">					<span class="comment">// 设置索引</span></span></span><br><span class="line"><span class="javascript">					tabBarItem.setAttribute(<span class="string">'index'</span>, i);</span></span><br><span class="line"><span class="javascript">					<span class="comment">// 设置文字标题</span></span></span><br><span class="line"><span class="javascript">					<span class="keyword">var</span> tab_item_label = tabBarItem.querySelector(<span class="string">'.mui-tab-label'</span>);</span></span><br><span class="line"><span class="undefined">					tab_item_label.innerHTML = subPages[i].name;</span></span><br><span class="line"><span class="javascript">					<span class="comment">// 默认激活的 mui-tab-item</span></span></span><br><span class="line"><span class="javascript">					<span class="keyword">if</span>(i == defaultPageIndex) &#123;</span></span><br><span class="line"><span class="javascript">						tabBarItem.classList.add(<span class="string">'mui-active'</span>);</span></span><br><span class="line"><span class="undefined">					&#125;</span></span><br><span class="line"><span class="undefined">				&#125;</span></span><br><span class="line"><span class="undefined">			&#125;)</span></span><br><span class="line"><span class="undefined">			</span></span><br><span class="line"><span class="javascript">			<span class="comment">//创建子页面，首个选项卡页面显示，其它均隐藏；</span></span></span><br><span class="line"><span class="javascript">			mui.plusReady(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">				<span class="keyword">var</span> self = plus.webview.currentWebview();</span></span><br><span class="line"><span class="javascript">				<span class="keyword">var</span> defaultPage = plus.webview.create(subPages[defaultPageIndex].href, subPages[defaultPageIndex].id, subPages[defaultPageIndex].style);</span></span><br><span class="line"><span class="undefined">				self.append(defaultPage);</span></span><br><span class="line"><span class="undefined">			&#125;);</span></span><br><span class="line"><span class="javascript">			<span class="keyword">var</span> activeTab = subPages[defaultPageIndex].id;</span></span><br><span class="line"><span class="javascript">			mui(<span class="string">'.mui-bar-tab'</span>).on(<span class="string">'tap'</span>, <span class="string">'a'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">				<span class="keyword">var</span> targetTab = <span class="keyword">this</span>.getAttribute(<span class="string">'href'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">				<span class="keyword">if</span>(targetTab == activeTab) &#123;</span></span><br><span class="line"><span class="javascript">					<span class="keyword">return</span>;</span></span><br><span class="line"><span class="undefined">				&#125;</span></span><br><span class="line"><span class="javascript">				<span class="keyword">var</span> index = <span class="keyword">this</span>.getAttribute(<span class="string">'index'</span>);</span></span><br><span class="line"><span class="undefined">				log(index);</span></span><br><span class="line"><span class="javascript">				<span class="comment">// 先获取</span></span></span><br><span class="line"><span class="javascript">				<span class="keyword">var</span> destPage = plus.webview.getWebviewById(subPages[index].id);</span></span><br><span class="line"><span class="javascript">				<span class="keyword">if</span>(destPage) &#123;</span></span><br><span class="line"><span class="undefined">					destPage.show();</span></span><br><span class="line"><span class="javascript">				&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">					<span class="keyword">var</span> self = plus.webview.currentWebview();</span></span><br><span class="line"><span class="javascript">					<span class="keyword">var</span> sub = plus.webview.create(targetTab, subPages[index].id, subPages[index].style);</span></span><br><span class="line"><span class="undefined">					self.append(sub);</span></span><br><span class="line"><span class="undefined">				&#125;</span></span><br><span class="line"><span class="javascript">				<span class="comment">//隐藏当前;  </span></span></span><br><span class="line"><span class="javascript">				plus.webview.hide(activeTab); <span class="comment">//这里应该是关闭页面，不知道隐藏与关闭区别有多大  </span></span></span><br><span class="line"><span class="javascript">				<span class="comment">//更改当前活跃的选项卡  </span></span></span><br><span class="line"><span class="undefined">				activeTab = targetTab;</span></span><br><span class="line"><span class="undefined">			&#125;);</span></span><br><span class="line"><span class="undefined">		</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;MUI&lt;/code&gt; 官方的 &lt;code&gt;Demo&lt;/code&gt; 的加载 webview 选项卡的逻辑是一次创建全部的选项卡，只默认显示默认创建的页面，这个页面逻辑没必要这么复杂，扩展性也不强，修改一处多处要修改，我做了简单修改，直接修改数据源，就可以达到更改全部的效果。&lt;/p&gt;
&lt;p&gt;直接上全部代码&lt;/p&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="https://wangwanjie.github.io/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://wangwanjie.github.io/tags/JavaScript/"/>
    
      <category term="MUI" scheme="https://wangwanjie.github.io/tags/MUI/"/>
    
      <category term="HTML" scheme="https://wangwanjie.github.io/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 主动选择 option</title>
    <link href="https://wangwanjie.github.io/2017/04/11/JavaScript-%E4%B8%BB%E5%8A%A8%E9%80%89%E6%8B%A9-option/"/>
    <id>https://wangwanjie.github.io/2017/04/11/JavaScript-主动选择-option/</id>
    <published>2017-04-11T08:13:35.000Z</published>
    <updated>2017-04-11T08:16:08.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
<p>主动选择 <code>select</code> 中的 <code>option</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取默认type</span></span><br><span class="line"><span class="keyword">var</span> defaultType = <span class="string">'1'</span>;</span><br><span class="line"><span class="keyword">var</span> typeSelect = <span class="built_in">document</span>.getElementById(<span class="string">"type"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; typeSelect.options.length; i++) &#123;</span><br><span class="line">	<span class="keyword">if</span>(typeSelect.options[i].value === defaultType) &#123;</span><br><span class="line">		typeSelect.selectedIndex = i;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;主动选择 &lt;code&gt;select&lt;/code&gt; 中的 &lt;code&gt;option&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="https://wangwanjie.github.io/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://wangwanjie.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>使用Python脚本半自动化iOS企业版包更新</title>
    <link href="https://wangwanjie.github.io/2017/03/25/%E4%BD%BF%E7%94%A8Python%E8%84%9A%E6%9C%AC%E5%8D%8A%E8%87%AA%E5%8A%A8%E5%8C%96iOS%E4%BC%81%E4%B8%9A%E7%89%88%E5%8C%85%E6%9B%B4%E6%96%B0/"/>
    <id>https://wangwanjie.github.io/2017/03/25/使用Python脚本半自动化iOS企业版包更新/</id>
    <published>2017-03-25T12:30:37.000Z</published>
    <updated>2017-03-27T04:53:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在我之前一篇文章里 <a href="https://wangwanjie.github.io/2017/01/11/iOS企业内部应用分发/">iOS企业内部应用分发</a> 讲述了 iOS 企业帐号打包的 <code>ipa</code> 分发，但是如果每次 <code>ipa</code> 更新，重新上传 <code>*.ipa</code> 后还要手动编辑 <code>*.plist</code> 的新的 <code>ipa</code> 的 <code>url</code> 和包的相关信息，这就和打包一样（使用 <a href="https://github.com/fastlane/fastlane" target="_blank" rel="noopener">fastlane</a>），是毫无技术含量但是花时间的事情，作为一个爱偷懒的人，我总是想利用自身所学或者一些工具来代替我做一些重复又没技术含量的事，在本文涉及的这件事里，显然，脚本要派上用场，最终选用了 <code>Python</code> 而没有用 <code>Bash</code> —- 从 <code>ipa</code> 读取相关信息并写入到目的 <code>plist</code>。<code>Python</code> 只是业余，如您有建议或改进，欢迎留言评论指出，感激不尽！</p>
<a id="more"></a>
<h2 id="直接上代码"><a href="#直接上代码" class="headerlink" title="直接上代码"></a>直接上代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> zipfile, plistlib, sys, re, os.path, io</span><br><span class="line"></span><br><span class="line">sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">global</span> plist_root <span class="comment"># Info.plist</span></span><br><span class="line"><span class="keyword">global</span> ipa_name <span class="comment"># ipa 名称</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">analyze_ipa_with_plistlib</span><span class="params">(ipa_path)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> plist_root</span><br><span class="line">    ipa_file = zipfile.ZipFile(ipa_path)</span><br><span class="line">    plist_path = find_plist_path(ipa_file)</span><br><span class="line">    plist_data = ipa_file.read(plist_path)</span><br><span class="line">    plist_root = plistlib.loads(plist_data)</span><br><span class="line">    print_ipa_info (plist_root)</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_plist_path</span><span class="params">(zip_file)</span>:</span></span><br><span class="line">    name_list = zip_file.namelist()</span><br><span class="line">    pattern = re.compile(<span class="string">r'Payload/[^/]*.app/Info.plist'</span>)</span><br><span class="line">    <span class="keyword">for</span> path <span class="keyword">in</span> name_list:</span><br><span class="line">        m = pattern.match(path)</span><br><span class="line">        <span class="keyword">if</span> m <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">return</span> m.group()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_ipa_info</span><span class="params">(plist_root)</span>:</span></span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'\n'</span> + <span class="string">'源 ipa 包信息:'</span>)</span><br><span class="line"></span><br><span class="line">    CFBundleDisplayName = <span class="string">''</span></span><br><span class="line">    isCFBundleDisplayNameExist = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        CFBundleDisplayName = plist_root[<span class="string">'CFBundleDisplayName'</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">'CFBundleDisplayName 不存在，将获取 CFBundleName'</span>)</span><br><span class="line">        isCFBundleDisplayNameExist = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> isCFBundleDisplayNameExist != <span class="keyword">True</span>:</span><br><span class="line">        <span class="keyword">try</span>: </span><br><span class="line">            CFBundleDisplayName = plist_root[<span class="string">'CFBundleName'</span>]</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">print</span> (<span class="string">'CFBundleName 不存在'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'Display Name: %s'</span> % CFBundleDisplayName)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'Bundle Identifier: %s'</span> % plist_root[<span class="string">'CFBundleIdentifier'</span>])</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'Version: %s'</span> % plist_root[<span class="string">'CFBundleShortVersionString'</span>] + <span class="string">'\n'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_plist_info</span><span class="params">(plist_path, beforeWritten)</span>:</span></span><br><span class="line">  </span><br><span class="line">    dict = plistlib.readPlist(plist_path)</span><br><span class="line"></span><br><span class="line">    metadata = dict[<span class="string">"items"</span>][<span class="number">0</span>][<span class="string">"metadata"</span>]</span><br><span class="line">    softwarePackageDict = dict[<span class="string">"items"</span>][<span class="number">0</span>][<span class="string">"assets"</span>][<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    state = <span class="string">"前"</span> <span class="keyword">if</span> beforeWritten <span class="keyword">else</span> <span class="string">"后"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'写入'</span> + state +<span class="string">'的plist信息'</span>)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'bundle-identifier: %s'</span> % metadata[<span class="string">'bundle-identifier'</span>])</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'bundle-version: %s'</span> % metadata[<span class="string">'bundle-version'</span>])</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'title: %s'</span> % metadata[<span class="string">'title'</span>])</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'ipa url: %s'</span> % softwarePackageDict[<span class="string">'url'</span>] + <span class="string">'\n'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">writeToPlist</span><span class="params">(plist_path)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> plist_root</span><br><span class="line">    <span class="comment"># 读取app.plist</span></span><br><span class="line">    dict = plistlib.readPlist(plist_path)</span><br><span class="line"></span><br><span class="line">    CFBundleDisplayName = <span class="string">''</span></span><br><span class="line">    isCFBundleDisplayNameExist = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        CFBundleDisplayName = plist_root[<span class="string">'CFBundleDisplayName'</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">'CFBundleDisplayName 不存在，将获取 CFBundleName'</span>)</span><br><span class="line">        isCFBundleDisplayNameExist = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> isCFBundleDisplayNameExist != <span class="keyword">True</span>:</span><br><span class="line">        <span class="keyword">try</span>: </span><br><span class="line">            CFBundleDisplayName = plist_root[<span class="string">'CFBundleName'</span>]</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">print</span> (<span class="string">'CFBundleName 不存在'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更改包信息</span></span><br><span class="line">    metadata = dict[<span class="string">"items"</span>][<span class="number">0</span>][<span class="string">"metadata"</span>]</span><br><span class="line">    metadata[<span class="string">'bundle-identifier'</span>] = plist_root[<span class="string">'CFBundleIdentifier'</span>]</span><br><span class="line">    metadata[<span class="string">'bundle-version'</span>] = plist_root[<span class="string">'CFBundleShortVersionString'</span>]</span><br><span class="line">    metadata[<span class="string">'title'</span>] = CFBundleDisplayName</span><br><span class="line">   </span><br><span class="line">    <span class="comment"># 更改ipa地址</span></span><br><span class="line">    softwarePackageDict = dict[<span class="string">"items"</span>][<span class="number">0</span>][<span class="string">"assets"</span>][<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 生成新的 ipa 路径</span></span><br><span class="line">    <span class="keyword">global</span> ipa_name</span><br><span class="line">    url = softwarePackageDict[<span class="string">'url'</span>]</span><br><span class="line">    urlComArr = url.split(<span class="string">'/'</span>)</span><br><span class="line">    <span class="comment"># 删除文件名</span></span><br><span class="line">    urlComArr.pop() <span class="comment"># 删除最后一个</span></span><br><span class="line">    urlComArr.append(ipa_name) <span class="comment"># 拼接新文件名及扩展名</span></span><br><span class="line">    newUrlComArrStr = <span class="string">'/'</span>.join(urlComArr) <span class="comment"># Array to String</span></span><br><span class="line">    softwarePackageDict[<span class="string">'url'</span>] = newUrlComArrStr</span><br><span class="line"></span><br><span class="line">    plistlib.writePlist(dict, plist_path) <span class="comment"># 写入plist</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    args = sys.argv[<span class="number">1</span>:]</span><br><span class="line">    <span class="keyword">if</span> len(args) != <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">'参数错误，用法: python3 config.py /path/to/ipa /path/to/plist'</span>)</span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">global</span> ipa_name</span><br><span class="line"></span><br><span class="line">    ipa_path = args[<span class="number">0</span>]</span><br><span class="line">    analyze_ipa_with_plistlib(ipa_path)</span><br><span class="line">    ipa_name = os.path.basename(ipa_path)</span><br><span class="line">    plist_path = args[<span class="number">1</span>]</span><br><span class="line">    print_plist_info(plist_path, <span class="keyword">True</span>)</span><br><span class="line">    writeToPlist (plist_path)</span><br><span class="line">    print_plist_info(plist_path, <span class="keyword">False</span>)</span><br></pre></td></tr></table></figure>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>每次新打包后，需要更新 <code>plist</code> 文件相关信息，直接在服务器或者本地运行该脚本便可更新 <code>plist</code> 信息，然后覆盖服务器上的同名文件即可（亲手实践过 <code>ipa</code> 分发就没困惑），但运行该脚本的系统应该安装了 <code>Python3</code>，否则无法运行。用法如下，选你的终端执行：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 config.py appName.ipa路径 app.plist路径</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;在我之前一篇文章里 &lt;a href=&quot;https://wangwanjie.github.io/2017/01/11/iOS企业内部应用分发/&quot;&gt;iOS企业内部应用分发&lt;/a&gt; 讲述了 iOS 企业帐号打包的 &lt;code&gt;ipa&lt;/code&gt; 分发，但是如果每次 &lt;code&gt;ipa&lt;/code&gt; 更新，重新上传 &lt;code&gt;*.ipa&lt;/code&gt; 后还要手动编辑 &lt;code&gt;*.plist&lt;/code&gt; 的新的 &lt;code&gt;ipa&lt;/code&gt; 的 &lt;code&gt;url&lt;/code&gt; 和包的相关信息，这就和打包一样（使用 &lt;a href=&quot;https://github.com/fastlane/fastlane&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;fastlane&lt;/a&gt;），是毫无技术含量但是花时间的事情，作为一个爱偷懒的人，我总是想利用自身所学或者一些工具来代替我做一些重复又没技术含量的事，在本文涉及的这件事里，显然，脚本要派上用场，最终选用了 &lt;code&gt;Python&lt;/code&gt; 而没有用 &lt;code&gt;Bash&lt;/code&gt; —- 从 &lt;code&gt;ipa&lt;/code&gt; 读取相关信息并写入到目的 &lt;code&gt;plist&lt;/code&gt;。&lt;code&gt;Python&lt;/code&gt; 只是业余，如您有建议或改进，欢迎留言评论指出，感激不尽！&lt;/p&gt;
    
    </summary>
    
      <category term="Python3" scheme="https://wangwanjie.github.io/categories/Python3/"/>
    
    
      <category term="iOS打包" scheme="https://wangwanjie.github.io/tags/iOS%E6%89%93%E5%8C%85/"/>
    
      <category term="iOS企业应用更新" scheme="https://wangwanjie.github.io/tags/iOS%E4%BC%81%E4%B8%9A%E5%BA%94%E7%94%A8%E6%9B%B4%E6%96%B0/"/>
    
      <category term="Python3 读写 plist" scheme="https://wangwanjie.github.io/tags/Python3-%E8%AF%BB%E5%86%99-plist/"/>
    
  </entry>
  
  <entry>
    <title>原生 JavaScript 判断 DOM 是否包含某个 class</title>
    <link href="https://wangwanjie.github.io/2017/03/23/%E5%8E%9F%E7%94%9F-JavaScript-%E5%88%A4%E6%96%AD-DOM-%E6%98%AF%E5%90%A6%E5%8C%85%E5%90%AB%E6%9F%90%E4%B8%AA-class/"/>
    <id>https://wangwanjie.github.io/2017/03/23/原生-JavaScript-判断-DOM-是否包含某个-class/</id>
    <published>2017-03-23T03:05:27.000Z</published>
    <updated>2017-03-23T03:11:02.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用-classlist"><a href="#使用-classlist" class="headerlink" title="使用 classlist"></a>使用 <code>classlist</code></h2><a id="more"></a>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">document</span>.body.classList.contains(<span class="string">'thatClass'</span>)) &#123;</span><br><span class="line">    <span class="comment">// do some stuff</span></span><br><span class="line">&#125;</span><br><span class="line">Other uses <span class="keyword">of</span> classList:</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.body.classList.add(<span class="string">'thisClass'</span>);</span><br><span class="line"><span class="comment">// $('body').addClass('thisClass');</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.body.classList.remove(<span class="string">'thatClass'</span>);</span><br><span class="line"><span class="comment">// $('body').removeClass('thatClass');</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.body.classList.toggle(<span class="string">'anotherClass'</span>);</span><br><span class="line"><span class="comment">// $('body').toggleClass('anotherClass');</span></span><br></pre></td></tr></table></figure>
<h2 id="简单封装一下"><a href="#简单封装一下" class="headerlink" title="简单封装一下"></a>简单封装一下</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasClass</span>(<span class="params">el, cn</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> classes = el.classList;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; classes.length; j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(classes[j] == cn)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="支持IE8"><a href="#支持IE8" class="headerlink" title="支持IE8"></a>支持IE8</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasClass</span>(<span class="params">el, cls</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> regexp = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'(\\s|^)'</span> + cls + <span class="string">'(\\s|$)'</span>),</span><br><span class="line">        target = (<span class="keyword">typeof</span> el.className === <span class="string">'undefined'</span>) ? <span class="built_in">window</span>.event.srcElement : el;</span><br><span class="line">    <span class="keyword">return</span> target.className.match(regexp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="浏览器支持"><a href="#浏览器支持" class="headerlink" title="浏览器支持"></a>浏览器支持</h2><ul>
<li>Chrome 8.0</li>
<li>Firefox 3.6</li>
<li>IE 10</li>
<li>Opera 11.50</li>
<li>Safari 5.1</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;使用-classlist&quot;&gt;&lt;a href=&quot;#使用-classlist&quot; class=&quot;headerlink&quot; title=&quot;使用 classlist&quot;&gt;&lt;/a&gt;使用 &lt;code&gt;classlist&lt;/code&gt;&lt;/h2&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="https://wangwanjie.github.io/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://wangwanjie.github.io/tags/JavaScript/"/>
    
      <category term="DOM" scheme="https://wangwanjie.github.io/tags/DOM/"/>
    
      <category term="DOM Class" scheme="https://wangwanjie.github.io/tags/DOM-Class/"/>
    
  </entry>
  
  <entry>
    <title>iOS 企业版应用一键更新</title>
    <link href="https://wangwanjie.github.io/2017/03/22/iOS-%E4%BC%81%E4%B8%9A%E7%89%88%E5%BA%94%E7%94%A8%E4%B8%80%E9%94%AE%E6%9B%B4%E6%96%B0/"/>
    <id>https://wangwanjie.github.io/2017/03/22/iOS-企业版应用一键更新/</id>
    <published>2017-03-22T06:14:05.000Z</published>
    <updated>2017-03-22T08:54:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>如果后台没有获取版本号的接口，自己就直接从下载企业版应用指向的 <code>plist</code> 文件中获取吧，如果有，就不用这么麻烦还要去下载整个 <code>plist</code> 文件了，直接根据拿到的版本好与本地对比即可。</p>
<a id="more"></a>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#pragma mark -</span></span><br><span class="line"><span class="meta">#pragma mark 检查更新</span></span><br><span class="line">- (<span class="keyword">void</span>)checkForUpdating &#123;</span><br><span class="line">    <span class="comment">// 先清空之前下载的缓存文件</span></span><br><span class="line">    <span class="built_in">NSString</span> *tmpDirectory = <span class="built_in">NSTemporaryDirectory</span>();</span><br><span class="line">    <span class="built_in">NSFileManager</span> *fileManager = [<span class="built_in">NSFileManager</span> defaultManager];</span><br><span class="line">    <span class="built_in">NSError</span> *error;</span><br><span class="line">    <span class="built_in">NSArray</span> *cacheFiles = [fileManager contentsOfDirectoryAtPath:tmpDirectory error:&amp;error];</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">NSString</span> *file <span class="keyword">in</span> cacheFiles) &#123;</span><br><span class="line">        error = <span class="literal">nil</span>;</span><br><span class="line">        [fileManager removeItemAtPath:[tmpDirectory stringByAppendingPathComponent:file] error:&amp;error];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 从服务器下载plist文件</span></span><br><span class="line">    <span class="built_in">NSURLRequest</span> *downloadRequest = [<span class="built_in">NSURLRequest</span> requestWithURL:[<span class="built_in">NSURL</span> URLWithString:CheckUpdatingPlistUrl]];</span><br><span class="line">    <span class="built_in">NSURLSessionConfiguration</span> *sessionConfig = [<span class="built_in">NSURLSessionConfiguration</span> defaultSessionConfiguration];</span><br><span class="line">    <span class="built_in">NSURLSession</span> *urlSession = [<span class="built_in">NSURLSession</span> sessionWithConfiguration:sessionConfig delegate:<span class="literal">nil</span> delegateQueue:<span class="literal">nil</span>];</span><br><span class="line">    <span class="built_in">NSURLSessionDownloadTask</span> *task = [urlSession downloadTaskWithRequest:downloadRequest completionHandler:^(<span class="built_in">NSURL</span> * _Nullable location, <span class="built_in">NSURLResponse</span> * _Nullable response, <span class="built_in">NSError</span> * _Nullable error) &#123;</span><br><span class="line">        <span class="keyword">if</span> (error) &#123;</span><br><span class="line">            WJLog(<span class="string">@"获取下载服务器版本失败:\n%@"</span>, error.localizedDescription);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">NSDictionary</span> *dict = [<span class="built_in">NSDictionary</span> dictionaryWithContentsOfURL:location];</span><br><span class="line">            <span class="comment">// 服务器版本号</span></span><br><span class="line">            <span class="built_in">NSString</span> *serverVersion = dict[<span class="string">@"items"</span>][<span class="number">0</span>][<span class="string">@"metadata"</span>][<span class="string">@"bundle-version"</span>];</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 本地版本号</span></span><br><span class="line">            <span class="built_in">NSString</span> *localVersion = [[<span class="built_in">NSBundle</span> mainBundle] infoDictionary][<span class="string">@"CFBundleShortVersionString"</span>];</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 对比版本号，升序</span></span><br><span class="line">            <span class="keyword">if</span> ([localVersion compare:serverVersion options:<span class="built_in">NSNumericSearch</span>] == <span class="built_in">NSOrderedAscending</span>) &#123;</span><br><span class="line">                </span><br><span class="line">                <span class="built_in">dispatch_async</span>(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">                     <span class="comment">// 先提示安装</span></span><br><span class="line">                    FCAlertView *alert = [[FCAlertView alloc] init];</span><br><span class="line">                    [alert showAlertWithTitle:<span class="string">@"提示"</span> withSubtitle:<span class="string">@"新版本已发布，点击确定开始更新"</span> withCustomImage:<span class="literal">nil</span> withDoneButtonTitle:<span class="literal">nil</span> andButtons:<span class="literal">nil</span>];</span><br><span class="line">                    alert.hideDoneButton = <span class="literal">YES</span>;</span><br><span class="line">                    alert.bounceAnimations = <span class="literal">YES</span>;</span><br><span class="line">                    alert.colorScheme = alert.flatOrange;</span><br><span class="line">                    [alert makeAlertTypeCaution];</span><br><span class="line">                    alert.subTitleColor = [<span class="built_in">UIColor</span> redColor];</span><br><span class="line">                    [alert addButton:<span class="string">@"确定"</span> withActionBlock:^&#123;</span><br><span class="line">                        </span><br><span class="line">                       <span class="comment">// 模拟器不支持</span></span><br><span class="line">                        <span class="keyword">if</span> (TARGET_IPHONE_SIMULATOR) &#123; WJLog(<span class="string">@"模拟器不支持该操作"</span>); <span class="keyword">return</span>; &#125;</span><br><span class="line">                        <span class="comment">// 真机执行安装</span></span><br><span class="line">                        <span class="built_in">NSURL</span> *url = [<span class="built_in">NSURL</span> URLWithString:[<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"itms-services://?action=download-manifest&amp;url=%@"</span>, CheckUpdatingPlistUrl]];</span><br><span class="line">                        [[<span class="built_in">UIApplication</span> sharedApplication] openURL:url];</span><br><span class="line">                        </span><br><span class="line">                        <span class="comment">// 动画退出App</span></span><br><span class="line">                        <span class="built_in">UIWindow</span> *window = [<span class="built_in">UIApplication</span> sharedApplication].keyWindow;</span><br><span class="line">                        [<span class="built_in">UIView</span> animateWithDuration:<span class="number">.5</span>f animations:^&#123;</span><br><span class="line">                            window.alpha = <span class="number">0</span>;</span><br><span class="line">                            <span class="built_in">CGFloat</span> width = window.bounds.size.width;</span><br><span class="line">                            <span class="built_in">CGFloat</span> height = window.bounds.size.height;</span><br><span class="line">                            window.frame = <span class="built_in">CGRectMake</span>(width * <span class="number">0.5</span>, height * <span class="number">0.5</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">                        &#125; completion:^(<span class="built_in">BOOL</span> finished) &#123;</span><br><span class="line">                            exit(<span class="number">0</span>);</span><br><span class="line">                        &#125;];</span><br><span class="line">                        </span><br><span class="line">                    &#125;];</span><br><span class="line">                    [alert addButton:<span class="string">@"下次再说"</span> withActionBlock:<span class="literal">nil</span>];</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;];</span><br><span class="line">    [task resume];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>那个 <code>FCAlertView</code> 没有可以用原生的，比如：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对比版本号，升序</span></span><br><span class="line"><span class="keyword">if</span> ([localVersion compare:serverVersion options:<span class="built_in">NSNumericSearch</span>] == <span class="built_in">NSOrderedAscending</span>) &#123;</span><br><span class="line">    __<span class="keyword">weak</span> <span class="keyword">typeof</span>(<span class="keyword">self</span>) weakSelf = <span class="keyword">self</span>;</span><br><span class="line">    <span class="built_in">dispatch_async</span>(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">        <span class="comment">// 先提示安装</span></span><br><span class="line">        <span class="built_in">UIAlertController</span> *alertVc = [<span class="built_in">UIAlertController</span> alertControllerWithTitle:<span class="string">@"提示"</span> message:<span class="string">@"新版本已发布，点击确定开始更新"</span> preferredStyle:<span class="built_in">UIAlertControllerStyleAlert</span>];</span><br><span class="line">        <span class="built_in">UIAlertAction</span> *confirmAct = [<span class="built_in">UIAlertAction</span> actionWithTitle:<span class="string">@"确定"</span> style:<span class="built_in">UIAlertActionStyleDefault</span> handler:^(<span class="built_in">UIAlertAction</span> * _Nonnull action) &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 模拟器不支持</span></span><br><span class="line">            <span class="keyword">if</span> (TARGET_IPHONE_SIMULATOR) &#123; WJLog(<span class="string">@"模拟器不支持该操作"</span>); <span class="keyword">return</span>; &#125;</span><br><span class="line">            <span class="comment">// 真机执行安装</span></span><br><span class="line">            <span class="built_in">NSURL</span> *url = [<span class="built_in">NSURL</span> URLWithString:[<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"itms-services://?action=download-manifest&amp;url=%@"</span>, CheckUpdatingPlistUrl]];</span><br><span class="line">            [[<span class="built_in">UIApplication</span> sharedApplication] openURL:url];</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 动画退出App</span></span><br><span class="line">            <span class="built_in">UIWindow</span> *window = [<span class="built_in">UIApplication</span> sharedApplication].keyWindow;</span><br><span class="line">            [<span class="built_in">UIView</span> animateWithDuration:<span class="number">.5</span>f animations:^&#123;</span><br><span class="line">                window.alpha = <span class="number">0</span>;</span><br><span class="line">                <span class="built_in">CGFloat</span> width = window.bounds.size.width;</span><br><span class="line">                <span class="built_in">CGFloat</span> height = window.bounds.size.height;</span><br><span class="line">                window.frame = <span class="built_in">CGRectMake</span>(width * <span class="number">0.5</span>, height * <span class="number">0.5</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            &#125; completion:^(<span class="built_in">BOOL</span> finished) &#123;</span><br><span class="line">                exit(<span class="number">0</span>);</span><br><span class="line">            &#125;];</span><br><span class="line">            </span><br><span class="line">        &#125;];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 取消</span></span><br><span class="line">        <span class="built_in">UIAlertAction</span> *cancelAct = [<span class="built_in">UIAlertAction</span> actionWithTitle:<span class="string">@"下次再说"</span> style:<span class="built_in">UIAlertActionStyleDefault</span> handler:<span class="literal">nil</span>];</span><br><span class="line">        </span><br><span class="line">        [alertVc addAction:confirmAct];</span><br><span class="line">        [alertVc addAction:cancelAct];</span><br><span class="line">        </span><br><span class="line">        [weakSelf.window.rootViewController presentViewController:alertVc animated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果后台没有获取版本号的接口，自己就直接从下载企业版应用指向的 &lt;code&gt;plist&lt;/code&gt; 文件中获取吧，如果有，就不用这么麻烦还要去下载整个 &lt;code&gt;plist&lt;/code&gt; 文件了，直接根据拿到的版本好与本地对比即可。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wangwanjie.github.io/categories/iOS/"/>
    
    
      <category term="iOS 应用更新" scheme="https://wangwanjie.github.io/tags/iOS-%E5%BA%94%E7%94%A8%E6%9B%B4%E6%96%B0/"/>
    
      <category term="企业版应用更新" scheme="https://wangwanjie.github.io/tags/%E4%BC%81%E4%B8%9A%E7%89%88%E5%BA%94%E7%94%A8%E6%9B%B4%E6%96%B0/"/>
    
      <category term="打包" scheme="https://wangwanjie.github.io/tags/%E6%89%93%E5%8C%85/"/>
    
      <category term="发布" scheme="https://wangwanjie.github.io/tags/%E5%8F%91%E5%B8%83/"/>
    
  </entry>
  
  <entry>
    <title>为 NexT 主题添加球型标签云</title>
    <link href="https://wangwanjie.github.io/2017/03/19/%E4%B8%BA-NexT-%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E7%90%83%E5%BD%A2%E6%A0%87%E7%AD%BE%E4%BA%91/"/>
    <id>https://wangwanjie.github.io/2017/03/19/为-NexT-主题添加球形标签云/</id>
    <published>2017-03-19T12:04:55.000Z</published>
    <updated>2017-03-20T02:49:28.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="确定你已开启标签功能"><a href="#确定你已开启标签功能" class="headerlink" title="确定你已开启标签功能"></a>确定你已开启标签功能</h2><p>参考 <code>NexT</code> 配置文档 <a href="https://theme-next.iissnan.com/theme-settings.html#tags-page" target="_blank" rel="noopener">添加标签页面</a> ，开启标签功能。</p>
<h2 id="了解球形标签云插件"><a href="#了解球形标签云插件" class="headerlink" title="了解球形标签云插件"></a>了解球形标签云插件</h2><p>了解球形标签云 <code>javascript</code> 插件，点击<a href="http://www.goat1000.com/tagcanvas.php" target="_blank" rel="noopener">这里</a></p>
<a id="more"></a>
<h2 id="下载插件"><a href="#下载插件" class="headerlink" title="下载插件"></a>下载插件</h2><p>下载 <code>js</code> 插件 <a href="http://www.goat1000.com/tagcanvas.js?2.8" target="_blank" rel="noopener"><code>tagcanvas.js</code></a></p>
<h2 id="放入对应目录"><a href="#放入对应目录" class="headerlink" title="放入对应目录"></a>放入对应目录</h2><p>将下载的 <code>tagcanvas.js</code> 放入主题目录 <code>themes/NexT/source/js/custom/tagcanvas.js</code>，<code>custom</code> 为新建文件夹。</p>
<h2 id="新建标签云文件，引用-js"><a href="#新建标签云文件，引用-js" class="headerlink" title="新建标签云文件，引用 js"></a>新建标签云文件，引用 <code>js</code></h2><p>在 <code>themes/NexT/layout/_partials</code> 下建一个 <code>plugin</code> 文件夹，在该目录下 <code>touch</code> 一个名为 <code>tagcanvas.swig</code> 的文件，并写入如下内容：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tags"</span> <span class="attr">id</span>=<span class="string">"myTags"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">width</span>=<span class="string">"350"</span> <span class="attr">height</span>=<span class="string">"350"</span> <span class="attr">id</span>=<span class="string">"my3DTags"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Anything in here will be replaced on browsers that support the canvas element<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tags"</span> <span class="attr">id</span>=<span class="string">"tags"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">style</span>=<span class="string">"display: none"</span>&gt;</span></span><br><span class="line">    &#123;&#123; tagcloud(&#123;</span><br><span class="line">      min_font: 16,</span><br><span class="line">      max_font: 35,</span><br><span class="line">      amount: 999,</span><br><span class="line">      color: true,</span><br><span class="line">      start_color: 'red',</span><br><span class="line">      end_color: 'red',</span><br><span class="line">    &#125;) &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/custom/tagcanvas.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> &gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">  <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="actionscript">      TagCanvas.Start(<span class="string">'my3DTags'</span>,<span class="string">'tags'</span>,&#123;</span></span><br><span class="line"><span class="actionscript">        textFont: <span class="string">'Georgia,Optima'</span>,</span></span><br><span class="line"><span class="actionscript">        textColour: <span class="literal">null</span>,</span></span><br><span class="line"><span class="actionscript">        outlineColour: <span class="string">'black'</span>,</span></span><br><span class="line"><span class="actionscript">        weight: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">        reverse: <span class="literal">true</span>,</span></span><br><span class="line"><span class="undefined">        depth: 0.8,</span></span><br><span class="line"><span class="undefined">        maxSpeed: 0.05,</span></span><br><span class="line"><span class="undefined">        bgRadius: 1,</span></span><br><span class="line"><span class="actionscript">        freezeDecel: <span class="literal">true</span></span></span><br><span class="line"><span class="undefined">      &#125;);</span></span><br><span class="line"><span class="actionscript">    &#125; <span class="keyword">catch</span>(e) &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// something went wrong, hide the canvas container</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">document</span>.getElementById(<span class="string">'myTags'</span>).style.display = <span class="string">'none'</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="使用-tagcanvas-swig"><a href="#使用-tagcanvas-swig" class="headerlink" title="使用 tagcanvas.swig"></a>使用 <code>tagcanvas.swig</code></h2><p>在 <code>themes/NexT/layout/page.swig</code> 中作如下修改：<br><img src="/images/pages_tag.png"></p>
<p>替换红框中原来位置的 <code>div</code> 标签为如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;# tagcanvas plugin 球型云标签 #&#125;</span><br><span class="line">&#123;% include <span class="string">'_partials/plugin/tagcanvas.swig'</span> %&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;确定你已开启标签功能&quot;&gt;&lt;a href=&quot;#确定你已开启标签功能&quot; class=&quot;headerlink&quot; title=&quot;确定你已开启标签功能&quot;&gt;&lt;/a&gt;确定你已开启标签功能&lt;/h2&gt;&lt;p&gt;参考 &lt;code&gt;NexT&lt;/code&gt; 配置文档 &lt;a href=&quot;https://theme-next.iissnan.com/theme-settings.html#tags-page&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;添加标签页面&lt;/a&gt; ，开启标签功能。&lt;/p&gt;
&lt;h2 id=&quot;了解球形标签云插件&quot;&gt;&lt;a href=&quot;#了解球形标签云插件&quot; class=&quot;headerlink&quot; title=&quot;了解球形标签云插件&quot;&gt;&lt;/a&gt;了解球形标签云插件&lt;/h2&gt;&lt;p&gt;了解球形标签云 &lt;code&gt;javascript&lt;/code&gt; 插件，点击&lt;a href=&quot;http://www.goat1000.com/tagcanvas.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Blog" scheme="https://wangwanjie.github.io/categories/Blog/"/>
    
    
      <category term="标签" scheme="https://wangwanjie.github.io/tags/%E6%A0%87%E7%AD%BE/"/>
    
      <category term="主题" scheme="https://wangwanjie.github.io/tags/%E4%B8%BB%E9%A2%98/"/>
    
      <category term="球形标签云" scheme="https://wangwanjie.github.io/tags/%E7%90%83%E5%BD%A2%E6%A0%87%E7%AD%BE%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>Mac 彻底卸载 MYSQL 解决疑难杂症</title>
    <link href="https://wangwanjie.github.io/2017/03/18/Mac-%E5%BD%BB%E5%BA%95%E5%8D%B8%E8%BD%BD-MYSQL-%E8%A7%A3%E5%86%B3%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    <id>https://wangwanjie.github.io/2017/03/18/Mac-彻底卸载-MYSQL-解决疑难杂症/</id>
    <published>2017-03-18T12:42:18.000Z</published>
    <updated>2017-03-20T08:50:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="备份数据库"><a href="#备份数据库" class="headerlink" title="备份数据库"></a>备份数据库</h2><p>备份看个人了，可以用软件如 <code>Navicat</code> 导出，也可以用 <code>mysqldump</code> 命令导出。</p>
<h2 id="kill-mysql相关进程"><a href="#kill-mysql相关进程" class="headerlink" title="kill mysql相关进程"></a>kill <code>mysql</code>相关进程</h2><p>终端运行 <code>ps -ax | grep mysql</code> 查看 <code>mysql</code> 相关进程， 有的话 <code>kill</code></p>
<a id="more"></a>
<h2 id="卸载-Homebrew-安装的mysql"><a href="#卸载-Homebrew-安装的mysql" class="headerlink" title="卸载 Homebrew 安装的mysql"></a>卸载 Homebrew 安装的mysql</h2><p>卸载全部以前用 <code>brew</code> 安装    的 <code>mysql</code>，先 <code>brew list</code> 查看安装的 <code>mysql</code> 版本，假如列出了 <a href="mailto:`mysql@5.5" target="_blank" rel="noopener">`mysql@5.5</a><code>， 则运行</code>brew uninstall <a href="mailto:mysql@5.5" target="_blank" rel="noopener">mysql@5.5</a><code>，卸载完后执行</code>brew cleanup`。</p>
<h2 id="移除残留文件"><a href="#移除残留文件" class="headerlink" title="移除残留文件"></a>移除残留文件</h2><p>删除与 <code>mysql</code> 相关的文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo rm /usr/<span class="built_in">local</span>/mysql;</span><br><span class="line">sudo rm -rf /usr/<span class="built_in">local</span>/var/mysql;</span><br><span class="line">sudo rm -rf /usr/<span class="built_in">local</span>/mysql*;</span><br><span class="line">sudo rm -rf /Library/StartupItems/MySQLCOM;</span><br><span class="line">sudo rm -rf /Library/PreferencePanes/My*</span><br></pre></td></tr></table></figure>
<h2 id="移除残留自动登陆项"><a href="#移除残留自动登陆项" class="headerlink" title="移除残留自动登陆项"></a>移除残留自动登陆项</h2><p>移除自动登陆项，如果你安装过 <code>DMG</code> 版本的     <code>mysql</code>，则把以下命令中的 <code>LaunchAgents</code> 替换为 <code>LaunchDaemons</code> 再执行一次</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">launchctl unload -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist</span><br></pre></td></tr></table></figure>
<p><code>unload</code> 之后再删除该文件，</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo rm ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist</span><br><span class="line">或</span><br><span class="line">sudo rm ~/Library/LaunchDaemons/homebrew.mxcl.mysql.plist</span><br></pre></td></tr></table></figure>
<h2 id="移除残留配置"><a href="#移除残留配置" class="headerlink" title="移除残留配置"></a>移除残留配置</h2><p><code>subl /etc/hostconfig</code> `</p>
<p>后输入 <code>Remove the line MYSQLCOM=-YES-</code> ` </p>
<h2 id="移除残留偏好设置"><a href="#移除残留偏好设置" class="headerlink" title="移除残留偏好设置"></a>移除残留偏好设置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ~/Library/PreferencePanes/My*;</span><br><span class="line">sudo rm -rf /Library/Receipts/mysql*;</span><br><span class="line">sudo rm -rf /Library/Receipts/MySQL*;</span><br><span class="line">sudo rm -rf /private/var/db/receipts/*mysql*</span><br></pre></td></tr></table></figure>
<h2 id="重启电脑，重新安装-mysql"><a href="#重启电脑，重新安装-mysql" class="headerlink" title="重启电脑，重新安装 mysql"></a>重启电脑，重新安装 <code>mysql</code></h2><p>建议使用 <code>Homebrew</code> 安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew search mysql</span><br><span class="line">brew install 你要的版本</span><br></pre></td></tr></table></figure>
<h2 id="启动-mysql"><a href="#启动-mysql" class="headerlink" title="启动 mysql"></a>启动 <code>mysql</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql.server start</span><br></pre></td></tr></table></figure>
<p>如果报 <code>commond not found</code>，则在 <code>~/.zshrc</code> 或者 <code>~/.bashrc</code> 中加入以下两行（注意替换mysql路径）：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> MYSQL=/usr/<span class="built_in">local</span>/Cellar/mysql@5.6/5.6.35/support-files</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$MYSQL</span>:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;备份数据库&quot;&gt;&lt;a href=&quot;#备份数据库&quot; class=&quot;headerlink&quot; title=&quot;备份数据库&quot;&gt;&lt;/a&gt;备份数据库&lt;/h2&gt;&lt;p&gt;备份看个人了，可以用软件如 &lt;code&gt;Navicat&lt;/code&gt; 导出，也可以用 &lt;code&gt;mysqldump&lt;/code&gt; 命令导出。&lt;/p&gt;
&lt;h2 id=&quot;kill-mysql相关进程&quot;&gt;&lt;a href=&quot;#kill-mysql相关进程&quot; class=&quot;headerlink&quot; title=&quot;kill mysql相关进程&quot;&gt;&lt;/a&gt;kill &lt;code&gt;mysql&lt;/code&gt;相关进程&lt;/h2&gt;&lt;p&gt;终端运行 &lt;code&gt;ps -ax | grep mysql&lt;/code&gt; 查看 &lt;code&gt;mysql&lt;/code&gt; 相关进程， 有的话 &lt;code&gt;kill&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="系统疑难" scheme="https://wangwanjie.github.io/categories/%E7%B3%BB%E7%BB%9F%E7%96%91%E9%9A%BE/"/>
    
    
      <category term="MYSQL" scheme="https://wangwanjie.github.io/tags/MYSQL/"/>
    
      <category term="Mac" scheme="https://wangwanjie.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 中为多说添加最近访客</title>
    <link href="https://wangwanjie.github.io/2017/03/17/Hexo-%E4%B8%AD%E4%B8%BA%E5%A4%9A%E8%AF%B4%E6%B7%BB%E5%8A%A0%E6%9C%80%E8%BF%91%E8%AE%BF%E5%AE%A2/"/>
    <id>https://wangwanjie.github.io/2017/03/17/Hexo-中为多说添加最近访客/</id>
    <published>2017-03-17T11:06:02.000Z</published>
    <updated>2017-03-18T01:39:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="添加自定义样式"><a href="#添加自定义样式" class="headerlink" title="添加自定义样式"></a>添加自定义样式</h2><h3 id="1-多说后台添加"><a href="#1-多说后台添加" class="headerlink" title="1. 多说后台添加"></a>1. 多说后台添加</h3><p>到多说后台管理-&gt;设置-&gt;基本设置-&gt;自定义css中添加如下css样式：</p>
<a id="more"></a>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-avatar</span> <span class="selector-tag">img</span>,</span><br><span class="line"><span class="selector-id">#ds-recent-visitors</span> <span class="selector-class">.ds-avatar</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">54px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">54px</span>;     <span class="comment">/*设置图像的长和宽，这里要根据自己的评论框情况更改*/</span></span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">27px</span>;     <span class="comment">/*设置图像圆角效果,在这里我直接设置了超过width/2的像素，即为圆形了*/</span></span><br><span class="line"><span class="attribute">-webkit-border-radius</span>: <span class="number">27px</span>;     <span class="comment">/*圆角效果：兼容webkit浏览器*/</span></span><br><span class="line"><span class="attribute">-moz-border-radius</span>: <span class="number">27px</span>;</span><br><span class="line"><span class="attribute">box-shadow</span>: inset <span class="number">0</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">#3333</span>sf;     <span class="comment">/*设置图像阴影效果*/</span></span><br><span class="line"><span class="attribute">-webkit-box-shadow</span>: inset <span class="number">0</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">#3333</span>sf;</span><br><span class="line"><span class="attribute">-webkit-transition</span>: <span class="number">0.4s</span>;</span><br><span class="line"><span class="attribute">-webkit-transition</span>: -webkit-transform <span class="number">0.4s</span> ease-out;</span><br><span class="line"><span class="attribute">transition</span>: transform <span class="number">0.4s</span> ease-out;     <span class="comment">/*变化时间设置为0.4秒(变化动作即为下面的图像旋转360读）*/</span></span><br><span class="line"><span class="attribute">-moz-transition</span>: -moz-transform <span class="number">0.4s</span> ease-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-avatar</span> <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-id">#ds-recent-visitors</span> <span class="selector-class">.ds-avatar</span> <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*设置鼠标悬浮在头像时的CSS样式*/</span>    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">#fff</span>;</span><br><span class="line">rgba(255, 255, 255, .6), inset 0 0 20px rgba(255, 255, 255, 1);</span><br><span class="line"><span class="selector-tag">-webkit-box-shadow</span>: 0 0 10<span class="selector-tag">px</span> <span class="selector-id">#fff</span>;</span><br><span class="line"><span class="selector-tag">rgba</span>(255, 255, 255, <span class="selector-class">.6</span>), <span class="selector-tag">inset</span> 0 0 20<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(255, 255, 255, 1);</span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">rotateZ</span>(360<span class="selector-tag">deg</span>);     <span class="comment">/*图像旋转360度*/</span></span><br><span class="line"><span class="selector-tag">-webkit-transform</span>: <span class="selector-tag">rotateZ</span>(360<span class="selector-tag">deg</span>);</span><br><span class="line"><span class="selector-tag">-moz-transform</span>: <span class="selector-tag">rotateZ</span>(360<span class="selector-tag">deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">#ds-thread #ds-reset .ds-textarea-wrapper textarea &#123;</span></span><br><span class="line"><span class="comment">background: url(http://www.wuxubj.cn/images/duoshuo_bkground.jpg) right no-repeat;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-id">#ds-recent-visitors</span> <span class="selector-class">.ds-avatar</span> &#123;</span><br><span class="line"><span class="attribute">float</span>: left</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*隐藏多说底部版权*/</span></span><br><span class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-powered-by</span> &#123;</span><br><span class="line"><span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-Hexo-本地添加自定义CSS（推荐）"><a href="#2-Hexo-本地添加自定义CSS（推荐）" class="headerlink" title="2. Hexo 本地添加自定义CSS（推荐）"></a>2. Hexo 本地添加自定义CSS（推荐）</h3><p>打开<br> <code>/themes/NexT/layout/_custom/header.swig</code><br>或者<br> <code>themes/NexT/source/css/_custom/custom.styl</code><br>输入以下内容（<code>custom.styl</code> 可省略 <code>style</code> 标签）:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-avatar</span> <span class="selector-tag">img</span>,</span></span><br><span class="line"><span class="css"><span class="selector-id">#ds-recent-visitors</span> <span class="selector-class">.ds-avatar</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="undefined">width: 54px;</span></span><br><span class="line"><span class="css"><span class="selector-tag">height</span>: 54<span class="selector-tag">px</span>;     <span class="comment">/*设置图像的长和宽，这里要根据自己的评论框情况更改*/</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">border-radius</span>: 27<span class="selector-tag">px</span>;     <span class="comment">/*设置图像圆角效果,在这里我直接设置了超过width/2的像素，即为圆形了*/</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">-webkit-border-radius</span>: 27<span class="selector-tag">px</span>;     <span class="comment">/*圆角效果：兼容webkit浏览器*/</span></span></span><br><span class="line"><span class="undefined">-moz-border-radius: 27px;</span></span><br><span class="line"><span class="css"><span class="selector-tag">box-shadow</span>: <span class="selector-tag">inset</span> 0 <span class="selector-tag">-1px</span> 0 <span class="selector-id">#3333sf</span>;     <span class="comment">/*设置图像阴影效果*/</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">-webkit-box-shadow</span>: <span class="selector-tag">inset</span> 0 <span class="selector-tag">-1px</span> 0 <span class="selector-id">#3333sf</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">-webkit-transition</span>: 0<span class="selector-class">.4s</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">-webkit-transition</span>: <span class="selector-tag">-webkit-transform</span> 0<span class="selector-class">.4s</span> <span class="selector-tag">ease-out</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">transition</span>: <span class="selector-tag">transform</span> 0<span class="selector-class">.4s</span> <span class="selector-tag">ease-out</span>;     <span class="comment">/*变化时间设置为0.4秒(变化动作即为下面的图像旋转360读）*/</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">-moz-transition</span>: <span class="selector-tag">-moz-transform</span> 0<span class="selector-class">.4s</span> <span class="selector-tag">ease-out</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-avatar</span> <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span>,</span></span><br><span class="line"><span class="css"><span class="selector-id">#ds-recent-visitors</span> <span class="selector-class">.ds-avatar</span> <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="css"><span class="comment">/*设置鼠标悬浮在头像时的CSS样式*/</span>    <span class="selector-tag">box-shadow</span>: 0 0 10<span class="selector-tag">px</span> <span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">rgba</span>(255, 255, 255, <span class="selector-class">.6</span>), <span class="selector-tag">inset</span> 0 0 20<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(255, 255, 255, 1);</span></span><br><span class="line"><span class="css"><span class="selector-tag">-webkit-box-shadow</span>: 0 0 10<span class="selector-tag">px</span> <span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">rgba</span>(255, 255, 255, <span class="selector-class">.6</span>), <span class="selector-tag">inset</span> 0 0 20<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(255, 255, 255, 1);</span></span><br><span class="line"><span class="css"><span class="selector-tag">transform</span>: <span class="selector-tag">rotateZ</span>(360<span class="selector-tag">deg</span>);     <span class="comment">/*图像旋转360度*/</span></span></span><br><span class="line"><span class="undefined">-webkit-transform: rotateZ(360deg);</span></span><br><span class="line"><span class="undefined">-moz-transform: rotateZ(360deg);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">/*</span></span><br><span class="line"><span class="css"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-textarea-wrapper</span> <span class="selector-tag">textarea</span> &#123;</span></span><br><span class="line"><span class="undefined">background: url(http://www.wuxubj.cn/images/duoshuo_bkground.jpg) right no-repeat;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">*/</span></span><br><span class="line"><span class="css"><span class="selector-id">#ds-recent-visitors</span> <span class="selector-class">.ds-avatar</span> &#123;</span></span><br><span class="line"><span class="undefined">float: left</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="comment">/*隐藏多说底部版权*/</span></span></span><br><span class="line"><span class="css"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-powered-by</span> &#123;</span></span><br><span class="line"><span class="undefined">display: none;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="添加-dom"><a href="#添加-dom" class="headerlink" title="添加 dom"></a>添加 dom</h2><p>在需要添加最近访客的网页对应的 markdown 文件中添加如下代码：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 最近访客</span><br><span class="line">&lt;div class="ds-recent-visitors" data-num-items="28" data-avatar-size="42" id="ds-recent-visitors"&gt;&lt;/div&gt;</span><br><span class="line">&lt;br/&gt;</span><br></pre></td></tr></table></figure>
<h2 id="添加最近访客-dom-到模板文件中（此做法更新抛弃，采用下面做法）"><a href="#添加最近访客-dom-到模板文件中（此做法更新抛弃，采用下面做法）" class="headerlink" title="添加最近访客 dom 到模板文件中（此做法更新抛弃，采用下面做法）"></a>添加最近访客 dom 到模板文件中（此做法更新抛弃，采用下面做法）</h2><p>在博客站点根目录的 <code>scaffolds/*.md</code> 模板文件中添加以上 <code>dom</code> 代码，以后新建 <code>[layout]</code> 便无需手动拷贝。</p>
<h2 id="编辑主题配置文件"><a href="#编辑主题配置文件" class="headerlink" title="编辑主题配置文件"></a>编辑主题配置文件</h2><p>在主题配置文件 <code>_config.yml</code> 中添加：</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 最近访客</span></span><br><span class="line"><span class="attr">duoshuo_recent_visit:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h2 id="修改-reward-swi-文件"><a href="#修改-reward-swi-文件" class="headerlink" title="修改 reward.swi 文件"></a>修改 <code>reward.swi</code> 文件</h2><p>文件路径:</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/themes/</span><span class="keyword">NexT</span><span class="regexp">/layout/</span>_macro<span class="regexp">/reward.swi</span></span><br></pre></td></tr></table></figure>
<h2 id="在顶部添加内容："><a href="#在顶部添加内容：" class="headerlink" title="在顶部添加内容："></a>在顶部添加内容：</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.duoshuo_recent_visit %&#125;</span><br><span class="line">&lt;<span class="selector-tag">blockquote</span>&gt;</span><br><span class="line">&lt;p&gt;最近访客&lt;/p&gt;</span><br><span class="line">&lt;p&gt;&lt;/p&gt;</span><br><span class="line">&lt;div class="ds-recent-visitors" data-num-items="28" data-avatar-size="42" id="ds-recent-visitors"&gt;</span><br><span class="line">&lt;/div&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;p&gt;&lt;/p&gt;</span><br><span class="line">&lt;/blockquote&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<h2 id="保存，重启-Hexo-即可"><a href="#保存，重启-Hexo-即可" class="headerlink" title="保存，重启 Hexo 即可"></a>保存，重启 Hexo 即可</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;添加自定义样式&quot;&gt;&lt;a href=&quot;#添加自定义样式&quot; class=&quot;headerlink&quot; title=&quot;添加自定义样式&quot;&gt;&lt;/a&gt;添加自定义样式&lt;/h2&gt;&lt;h3 id=&quot;1-多说后台添加&quot;&gt;&lt;a href=&quot;#1-多说后台添加&quot; class=&quot;headerlink&quot; title=&quot;1. 多说后台添加&quot;&gt;&lt;/a&gt;1. 多说后台添加&lt;/h3&gt;&lt;p&gt;到多说后台管理-&amp;gt;设置-&amp;gt;基本设置-&amp;gt;自定义css中添加如下css样式：&lt;/p&gt;
    
    </summary>
    
      <category term="Blog" scheme="https://wangwanjie.github.io/categories/Blog/"/>
    
    
      <category term="博客" scheme="https://wangwanjie.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="https://wangwanjie.github.io/tags/Hexo/"/>
    
      <category term="NexT" scheme="https://wangwanjie.github.io/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>动态加载javascript</title>
    <link href="https://wangwanjie.github.io/2017/03/09/%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BDjavascript/"/>
    <id>https://wangwanjie.github.io/2017/03/09/动态加载javascript/</id>
    <published>2017-03-09T02:50:55.000Z</published>
    <updated>2017-03-29T06:20:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用以下函数"><a href="#使用以下函数" class="headerlink" title="使用以下函数"></a>使用以下函数</h2><a id="more"></a>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> dynamicLoading = &#123;</span><br><span class="line">    meta : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">'&lt;meta charset="utf-8"&gt;'</span>);</span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">'&lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;'</span>);</span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">'&lt;meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, shrink-to-fit=no"&gt;'</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    css: <span class="function"><span class="keyword">function</span>(<span class="params">path</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!path || path.length === <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'argument "path" is required!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">'&lt;link rel="stylesheet" type="text/css" href="'</span> + path + <span class="string">'"&gt;'</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    js: <span class="function"><span class="keyword">function</span>(<span class="params">path, charset</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!path || path.length === <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'argument "path" is required!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">'&lt;script type="text/javascript" src="'</span> + path + <span class="string">'"&gt;&lt;/script&gt;'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 另外一个独立的动态加载js的函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadJs</span>(<span class="params">jsurl, head, callback</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(script);</span><br><span class="line">	script.setAttribute(<span class="string">"type"</span>, <span class="string">"text/javascript"</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(callback) &#123;</span><br><span class="line">		<span class="keyword">if</span>(script.readyState) &#123; <span class="comment">//IE</span></span><br><span class="line">			script.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">				<span class="keyword">if</span>(script.readyState == <span class="string">"loaded"</span> ||</span><br><span class="line">					script.readyState == <span class="string">"complete"</span>) &#123;</span><br><span class="line">					script.onreadystatechange = <span class="literal">null</span>;</span><br><span class="line">					callback();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123; <span class="comment">//Others</span></span><br><span class="line">			script.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">				callback();</span><br><span class="line">			&#125;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	script.setAttribute(<span class="string">"src"</span>, jsurl);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(head)</span><br><span class="line">		<span class="built_in">document</span>.getElementsByTagName(head)[<span class="number">0</span>].appendChild(script);</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">document</span>.body.appendChild(script);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;使用以下函数&quot;&gt;&lt;a href=&quot;#使用以下函数&quot; class=&quot;headerlink&quot; title=&quot;使用以下函数&quot;&gt;&lt;/a&gt;使用以下函数&lt;/h2&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="https://wangwanjie.github.io/categories/JavaScript/"/>
    
    
      <category term="javascript" scheme="https://wangwanjie.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>利用 dumpdecrypted 砸壳</title>
    <link href="https://wangwanjie.github.io/2017/02/08/%E5%88%A9%E7%94%A8dumpdecrypted%E7%A0%B8%E5%A3%B3/"/>
    <id>https://wangwanjie.github.io/2017/02/08/利用dumpdecrypted砸壳/</id>
    <published>2017-02-08T09:34:03.000Z</published>
    <updated>2017-03-18T13:26:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>1、编译生成</p>
<p><code>dumpdecrypted.dylib</code></p>
<p>2、给生成的 <code>dumpdecrypted.dylib</code> 签名</p>
<a id="more"></a>
<p>3、ssh到手机，<code>ps aux | grep</code> 目标APP查看APP安装目录</p>
<p>4、（可忽略这步）<code>cycript -p</code> 目标 APP，执行 </p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="built_in">NSFileManager</span> defaultManager] URLsForDirectory:<span class="built_in">NSDocumentDirectory</span> inDomains:<span class="built_in">NSUserDomainMask</span>][<span class="number">0</span>]</span><br></pre></td></tr></table></figure>
<p> 查看沙盒目录</p>
<p>5、将 <code>dumpdecrypted.dylib</code>拷贝 <code>/var/tmp</code>，进入 <code>/var/tmp</code></p>
<p>6、将 <code>dumpdecrypted.dylib</code> 拷贝到沙盒目录，进入沙盒目录，执行</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DYLD_INSERT_LIBRARIES=dumpdecrypted.dylib /var/containers/Bundle/Application/0B8A6E0F-9D64-4EF4-97D2-D3A508FC3574/APP.app/APP</span><br></pre></td></tr></table></figure>
<p>7、得到目标 <code>APP.decrypted</code>就是二进制文件</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1、编译生成&lt;/p&gt;
&lt;p&gt;&lt;code&gt;dumpdecrypted.dylib&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2、给生成的 &lt;code&gt;dumpdecrypted.dylib&lt;/code&gt; 签名&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wangwanjie.github.io/categories/iOS/"/>
    
    
      <category term="逆向" scheme="https://wangwanjie.github.io/tags/%E9%80%86%E5%90%91/"/>
    
      <category term="iOS安全" scheme="https://wangwanjie.github.io/tags/iOS%E5%AE%89%E5%85%A8/"/>
    
      <category term="破解" scheme="https://wangwanjie.github.io/tags/%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>给包签名</title>
    <link href="https://wangwanjie.github.io/2017/02/08/%E7%BB%99%E5%8C%85%E7%AD%BE%E5%90%8D/"/>
    <id>https://wangwanjie.github.io/2017/02/08/给包签名/</id>
    <published>2017-02-08T05:45:09.000Z</published>
    <updated>2017-03-20T08:49:45.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="查看可用签名"><a href="#查看可用签名" class="headerlink" title="查看可用签名"></a>查看可用签名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">security find-identity -v -p codesigning</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="签名"><a href="#签名" class="headerlink" title="签名"></a>签名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">codesign --force --verify --verbose --sign <span class="string">"iPhone Developer: 396736694@qq.com (Z4965JH2C8)” 目标包</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;查看可用签名&quot;&gt;&lt;a href=&quot;#查看可用签名&quot; class=&quot;headerlink&quot; title=&quot;查看可用签名&quot;&gt;&lt;/a&gt;查看可用签名&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;security find-identity -v -p codesigning&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wangwanjie.github.io/categories/iOS/"/>
    
    
      <category term="打包" scheme="https://wangwanjie.github.io/tags/%E6%89%93%E5%8C%85/"/>
    
      <category term="iOS签名" scheme="https://wangwanjie.github.io/tags/iOS%E7%AD%BE%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>iOS企业内部应用分发</title>
    <link href="https://wangwanjie.github.io/2017/01/11/iOS%E4%BC%81%E4%B8%9A%E5%86%85%E9%83%A8%E5%BA%94%E7%94%A8%E5%88%86%E5%8F%91/"/>
    <id>https://wangwanjie.github.io/2017/01/11/iOS企业内部应用分发/</id>
    <published>2017-01-11T12:52:03.000Z</published>
    <updated>2017-03-18T15:01:34.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>iOS 支持以无线方式安装企业内部应用，而无需使用 iTunes 或 App Store。</p>
</blockquote>
<h2 id="格式要求"><a href="#格式要求" class="headerlink" title="格式要求"></a>格式要求</h2><p>应用格式要求:.ipa，并且使用企业内部预置描述文件进行构建，即经企业证书签名。</p>
<h3 id="无线安装要求："><a href="#无线安装要求：" class="headerlink" title="无线安装要求："></a>无线安装要求：</h3><ol>
<li>XML 清单文件（一个 plist 配置文件）</li>
<li>可让设备访问 Apple iTunes 服务器的网络配置（设备要能连接互联网，因为要校验）</li>
<li>对于 iOS 7.1 或更高版本， plist 文件和 ipa 文件需要放在 HTTPS 的服务器上<br>为了安装应用，用户使用特殊的 URL 前缀从您的网站上下载plist清单文件，您可以分发该特殊前缀的URL给用户或者放置于可供用户访问的互联网上。</li>
</ol>
<a id="more"></a>
<h2 id="准备分发企业内部应用"><a href="#准备分发企业内部应用" class="headerlink" title="准备分发企业内部应用:"></a>准备分发企业内部应用:</h2><ol>
<li>创建应用的归档，格式为 *.ipa 格式，并且归档中包括企业内部预置描述文件，且使用分发证书签名；</li>
<li>无线清单文件，您可以使用支持编辑 plist 文档的编辑器编写或者直接修改下面提供的范例，各字段意义范例中会写明；</li>
<li>可直接供内连网或互联网访问的 HTTPS 服务器。</li>
</ol>
<h2 id="关于无线-plist-清单文件"><a href="#关于无线-plist-清单文件" class="headerlink" title="关于无线 plist 清单文件"></a>关于无线 plist 清单文件</h2><p>单文件是一个 XML plist 文件，可供 Apple 设备用来从您的 Web 服务器上查找、下载和安装应用。</p>
<h2 id="以下栏是必填项："><a href="#以下栏是必填项：" class="headerlink" title="以下栏是必填项："></a><strong>以下栏是必填项：</strong></h2><ol>
<li>URL：应用 (*.ipa) 文件的完全限定 HTTPS URL</li>
<li>display-image：57 x 57 px 的 PNG 图像，在下载和安装过程中显示，图片的 Web URL</li>
<li>full-size-image：512 x 512 px 的 PNG 图像，表示 iTunes 中相应的应用，图片的 Web URL</li>
<li>bundle-identifier：应用的包标识符，与 Xcode 项目中指定的完全一样</li>
<li>bundle-version：应用的包版本，在 Xcode 项目中指定</li>
<li>title：下载和安装过程中显示的应用的名称<br>样本清单文件还包含可选字段。例如，如果应用文件太大，并且想要在执行错误检验（TCP 通信通常会执行该检验）的基础上确保下载的完整性，可以使用 MD5 校验，使用见范例。<br>您也可以在一个plist文件中配置多个应用，一个 item 作为一项。</li>
</ol>
<h2 id="构建网站"><a href="#构建网站" class="headerlink" title="构建网站"></a>构建网站</h2><p>将这些项目上传到网站上可供已认证的用户访问的区域：</p>
<ol>
<li>应用 (.ipa) 文件</li>
<li>清单 (.plist) 文件<br>您的网站可以是链接到清单文件的单个页面。用户轻点 Web 链接后会下载清单文件，并触发下载和安装。<br><em>以下是示例链接：</em><pre><code class="XML"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"itms-services://?action=download-manifest&amp;url=https://example.com/manifest.plist"</span>&gt;</span>安装应用<span class="tag">&lt;/<span class="name">a</span>&gt;</span>
</code></pre>
<strong>虽然 URL 的协议部分是“itms-services”，但 iTunes Store 并不参与此过程。</strong></li>
</ol>
<h2 id="配置服务器-MIME-类型（一般不用配置）"><a href="#配置服务器-MIME-类型（一般不用配置）" class="headerlink" title="配置服务器 MIME 类型（一般不用配置）"></a>配置服务器 MIME 类型（一般不用配置）</h2><p>您可能需要配置 Web 服务器，让清单文件和应用文件可正确传输。</p>
<ul>
<li>对于 Server 应用，请将 MIME 类型添加到网页服务的 MIME 类型设置：<ul>
<li>application/octet-stream ipa</li>
<li>text/xml plist</li>
</ul>
</li>
<li>对于微软的互联网信息服务器 (IIS)，请使用 IIS Manager 在服务器的“属性”页面中添加 MIME 类型：<ul>
<li>.ipa application/octet-stream</li>
<li>.plist text/xml</li>
</ul>
</li>
</ul>
<h2 id="无线-iOS-应用分发故障诊断"><a href="#无线-iOS-应用分发故障诊断" class="headerlink" title="无线 iOS 应用分发故障诊断"></a>无线 iOS 应用分发故障诊断</h2><p>如果无线应用分发失败，并显示“无法下载”信息：</p>
<ol>
<li>请确定应用已正确进行签名。测试方法是使用 Apple Configurator 2 将它安装到设备上，然后查看是否发生错误。</li>
<li>请确定清单文件的链接是否正确，清单文件是否可供网络用户访问。</li>
<li>请确定 .ipa 文件（在清单文件中）的 URL 是否正确，并且该 .ipa 文件是否可供网络用户通过 HTTPS 访问。</li>
</ol>
<h2 id="网络配置要求"><a href="#网络配置要求" class="headerlink" title="网络配置要求"></a>网络配置要求</h2><p>如果设备连接到内网，那么您必须允许它访问以下站点：</p>
<pre><code>https://ax.init.itunes.apple.com
</code></pre><p>使用蜂窝移动网络下载应用时，设备会限制其当前文件大小。如果无法访问此站点，安装可能会失败。</p>
<p><code>https://ppq.apple.com</code> 设备会联系此网站，检查用来给预置描述文件签名的分发证书状态。</p>
<h2 id="应用更新"><a href="#应用更新" class="headerlink" title="应用更新"></a>应用更新</h2><ol>
<li>程序内检查 Server 端ipa版本和本地版本，比较是否已发布新版本，并提示用户更新。</li>
<li>如果用户想保留旧版本数据，请告知其不要卸载旧版本，并且新旧版本 bundle-identifier 相同。</li>
<li>更新方法：直接使用应用内部的openURL 方法，打开的是plist文件的web url 带 itms-services描述 链接（真机）。</li>
</ol>
<h2 id="证书验证"><a href="#证书验证" class="headerlink" title="证书验证"></a>证书验证</h2><ul>
<li>用户首次打开应用时，系统会通过联系 Apple 的 OCSP 服务器来验证分发证书。如果证书已撤销，应用将不会启动。为了验证状态，设备必须能够访问 ocsp.apple.com。</li>
<li>OCSP 响应会在设备上缓存一段时间（由 OCSP 服务器指定），当前为 3 到 7 天之间。在重新启动设备和缓存的响应过期之前，将不会再次检查证书的有效性。如果当时收到撤销命令，系统将阻止应用运行。<br><em>【警告】</em>撤销分发证书会导致使用该证书签名的所有应用失效。只有万不得已时才应撤销证书，比如确定专用密钥已丢失或确信证书已遭破解。</li>
</ul>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>示例 iOS 应用 plist 清单文件，可复制，保存为plist格式，也可从 <a href="https://github.com/wangwanjie/SharedResources/blob/master/example_zn.plist" target="_blank" rel="noopener">这里</a> 下载</p>
<pre><code class="XML"><span class="meta">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span>
<span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span>
<span class="tag">&lt;<span class="name">dict</span>&gt;</span>
  <span class="tag">&lt;<span class="name">key</span>&gt;</span>items<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
  <span class="tag">&lt;<span class="name">array</span>&gt;</span>
   <span class="tag">&lt;<span class="name">dict</span>&gt;</span>
     <span class="tag">&lt;<span class="name">key</span>&gt;</span>assets<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
      <span class="tag">&lt;<span class="name">array</span>&gt;</span>
        <span class="tag">&lt;<span class="name">dict</span>&gt;</span>
          <span class="tag">&lt;<span class="name">key</span>&gt;</span>kind<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
          <span class="tag">&lt;<span class="name">string</span>&gt;</span>software-package<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
          <span class="tag">&lt;<span class="name">key</span>&gt;</span>md5-size<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
          <span class="tag">&lt;<span class="name">integer</span>&gt;</span>10485760<span class="tag">&lt;/<span class="name">integer</span>&gt;</span>
          <span class="tag">&lt;<span class="name">key</span>&gt;</span>md5s<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
          <span class="tag">&lt;<span class="name">array</span>&gt;</span>
            <span class="tag">&lt;<span class="name">string</span>&gt;</span>41fa64bb7a7cae5a46bfb45821ac8bba<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
            <span class="tag">&lt;<span class="name">string</span>&gt;</span>51fa64bb7a7cae5a46bfb45821ac8bba<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
          <span class="tag">&lt;/<span class="name">array</span>&gt;</span>
          <span class="tag">&lt;<span class="name">key</span>&gt;</span>url<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
          <span class="tag">&lt;<span class="name">string</span>&gt;</span>https://www.example.com/apps/foo.ipa<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
        <span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
        <span class="tag">&lt;<span class="name">dict</span>&gt;</span>
         <span class="tag">&lt;<span class="name">key</span>&gt;</span>kind<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
         <span class="tag">&lt;<span class="name">string</span>&gt;</span>display-image<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
         <span class="tag">&lt;<span class="name">key</span>&gt;</span>needs-shine<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
         <span class="tag">&lt;<span class="name">true</span>/&gt;</span>
         <span class="tag">&lt;<span class="name">key</span>&gt;</span>url<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
         <span class="tag">&lt;<span class="name">string</span>&gt;</span>https://www.example.com/image.57x57.png<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
        <span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
        <span class="tag">&lt;<span class="name">dict</span>&gt;</span>
         <span class="tag">&lt;<span class="name">key</span>&gt;</span>kind<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
         <span class="tag">&lt;<span class="name">string</span>&gt;</span>full-size-image<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
         <span class="tag">&lt;<span class="name">key</span>&gt;</span>md5<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
         <span class="tag">&lt;<span class="name">string</span>&gt;</span>61fa64bb7a7cae5a46bfb45821ac8bba<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
         <span class="tag">&lt;<span class="name">key</span>&gt;</span>needs-shine<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
         <span class="tag">&lt;<span class="name">true</span>/&gt;</span>
         <span class="tag">&lt;<span class="name">key</span>&gt;</span>url<span class="tag">&lt;/<span class="name">key</span>&gt;</span><span class="tag">&lt;<span class="name">string</span>&gt;</span>https://www.example.com/image.512x512.jpg<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
        <span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
      <span class="tag">&lt;/<span class="name">array</span>&gt;</span>
<span class="tag">&lt;<span class="name">key</span>&gt;</span>metadata<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
      <span class="tag">&lt;<span class="name">dict</span>&gt;</span>
       <span class="tag">&lt;<span class="name">key</span>&gt;</span>bundle-identifier<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
       <span class="tag">&lt;<span class="name">string</span>&gt;</span>com.example.fooapp<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
       <span class="tag">&lt;<span class="name">key</span>&gt;</span>bundle-version<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
       <span class="tag">&lt;<span class="name">string</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
       <span class="tag">&lt;<span class="name">key</span>&gt;</span>kind<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
       <span class="tag">&lt;<span class="name">string</span>&gt;</span>software<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
       <span class="tag">&lt;<span class="name">key</span>&gt;</span>subtitle<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
       <span class="tag">&lt;<span class="name">string</span>&gt;</span>Apple<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
       <span class="tag">&lt;<span class="name">key</span>&gt;</span>title<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
       <span class="tag">&lt;<span class="name">string</span>&gt;</span>Example Corporate App<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
      <span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
    <span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
  <span class="tag">&lt;/<span class="name">array</span>&gt;</span>
<span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
<span class="tag">&lt;/<span class="name">plist</span>&gt;</span>
</code></pre>
<h2 id="简单配置示例"><a href="#简单配置示例" class="headerlink" title="简单配置示例"></a>简单配置示例</h2><p>作为包体积较小的应用，如以下简单配置即可，从<a href="https://github.com/wangwanjie/SharedResources/blob/master/simple.plist" target="_blank" rel="noopener">这里</a>下载</p>
<pre><code class="XMl"><span class="meta">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span>
<span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span>
<span class="tag">&lt;<span class="name">dict</span>&gt;</span>
    <span class="tag">&lt;<span class="name">key</span>&gt;</span>items<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
    <span class="tag">&lt;<span class="name">array</span>&gt;</span>
        <span class="tag">&lt;<span class="name">dict</span>&gt;</span>
            <span class="tag">&lt;<span class="name">key</span>&gt;</span>assets<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
            <span class="tag">&lt;<span class="name">array</span>&gt;</span>
                <span class="tag">&lt;<span class="name">dict</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>kind<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">string</span>&gt;</span>software-package<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>url<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">string</span>&gt;</span>https://yourwebsite/appName.ipa<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
                <span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
                <span class="tag">&lt;<span class="name">dict</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>kind<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">string</span>&gt;</span>full-size-image<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>needs-shine<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">true</span>/&gt;</span>
                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>url<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">string</span>&gt;</span>https://yourwebsite/app_icon_full_size.png<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
                <span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
                <span class="tag">&lt;<span class="name">dict</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>kind<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">string</span>&gt;</span>display-image<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>needs-shine<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">true</span>/&gt;</span>
                    <span class="tag">&lt;<span class="name">key</span>&gt;</span>url<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                    <span class="tag">&lt;<span class="name">string</span>&gt;</span>https://yourwebsite/app_icon_download.png<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
                <span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
            <span class="tag">&lt;/<span class="name">array</span>&gt;</span>
            <span class="tag">&lt;<span class="name">key</span>&gt;</span>metadata<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
            <span class="tag">&lt;<span class="name">dict</span>&gt;</span>
                <span class="tag">&lt;<span class="name">key</span>&gt;</span>bundle-identifier<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                <span class="tag">&lt;<span class="name">string</span>&gt;</span> your app bundle id <span class="tag">&lt;/<span class="name">string</span>&gt;</span>
                <span class="tag">&lt;<span class="name">key</span>&gt;</span>bundle-version<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                <span class="tag">&lt;<span class="name">string</span>&gt;</span>shortVersion<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
                <span class="tag">&lt;<span class="name">key</span>&gt;</span>kind<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                <span class="tag">&lt;<span class="name">string</span>&gt;</span>software<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
                <span class="tag">&lt;<span class="name">key</span>&gt;</span>subtitle<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                <span class="tag">&lt;<span class="name">string</span>&gt;</span>欢迎使用<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
                <span class="tag">&lt;<span class="name">key</span>&gt;</span>title<span class="tag">&lt;/<span class="name">key</span>&gt;</span>
                <span class="tag">&lt;<span class="name">string</span>&gt;</span> app 名称<span class="tag">&lt;/<span class="name">string</span>&gt;</span>
            <span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
        <span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
    <span class="tag">&lt;/<span class="name">array</span>&gt;</span>
<span class="tag">&lt;/<span class="name">dict</span>&gt;</span>
<span class="tag">&lt;/<span class="name">plist</span>&gt;</span>
</code></pre>
<blockquote>
<p>Author: CoderJay <br>如需转载，请注明出处</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;iOS 支持以无线方式安装企业内部应用，而无需使用 iTunes 或 App Store。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;格式要求&quot;&gt;&lt;a href=&quot;#格式要求&quot; class=&quot;headerlink&quot; title=&quot;格式要求&quot;&gt;&lt;/a&gt;格式要求&lt;/h2&gt;&lt;p&gt;应用格式要求:.ipa，并且使用企业内部预置描述文件进行构建，即经企业证书签名。&lt;/p&gt;
&lt;h3 id=&quot;无线安装要求：&quot;&gt;&lt;a href=&quot;#无线安装要求：&quot; class=&quot;headerlink&quot; title=&quot;无线安装要求：&quot;&gt;&lt;/a&gt;无线安装要求：&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;XML 清单文件（一个 plist 配置文件）&lt;/li&gt;
&lt;li&gt;可让设备访问 Apple iTunes 服务器的网络配置（设备要能连接互联网，因为要校验）&lt;/li&gt;
&lt;li&gt;对于 iOS 7.1 或更高版本， plist 文件和 ipa 文件需要放在 HTTPS 的服务器上&lt;br&gt;为了安装应用，用户使用特殊的 URL 前缀从您的网站上下载plist清单文件，您可以分发该特殊前缀的URL给用户或者放置于可供用户访问的互联网上。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://wangwanjie.github.io/categories/iOS/"/>
    
    
      <category term="打包" scheme="https://wangwanjie.github.io/tags/%E6%89%93%E5%8C%85/"/>
    
      <category term="发布" scheme="https://wangwanjie.github.io/tags/%E5%8F%91%E5%B8%83/"/>
    
  </entry>
  
  <entry>
    <title>Mac查看CPU具体型号</title>
    <link href="https://wangwanjie.github.io/2016/12/16/Mac%E6%9F%A5%E7%9C%8BCPU%E5%85%B7%E4%BD%93%E5%9E%8B%E5%8F%B7/"/>
    <id>https://wangwanjie.github.io/2016/12/16/Mac查看CPU具体型号/</id>
    <published>2016-12-16T12:17:48.000Z</published>
    <updated>2017-03-18T13:26:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>运行以下命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl machdep.cpu.brand_string</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;运行以下命令:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;
    
    </summary>
    
      <category term="Mac" scheme="https://wangwanjie.github.io/categories/Mac/"/>
    
    
      <category term="Mac使用" scheme="https://wangwanjie.github.io/tags/Mac%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>OC用AFN做Soap请求webService</title>
    <link href="https://wangwanjie.github.io/2016/01/10/OC%E7%94%A8AFN%E5%81%9ASoap%E8%AF%B7%E6%B1%82webService/"/>
    <id>https://wangwanjie.github.io/2016/01/10/OC用AFN做Soap请求webService/</id>
    <published>2016-01-09T19:07:22.000Z</published>
    <updated>2017-03-20T08:51:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>好吧，标题有点拗口。我平时一般不发帖子，因为感觉太花时间了，还是喜欢宅着研究技术。但这个帖子网上资料还是没有很详细的，周末了明天休息，所以现在写下来总结一下，也希望能帮助有这方面需求的开发者朋友，如果错误之处还请谅解，欢迎指出。排版大家就不要在意了，我也不清楚这个支不支持markdown，就直接手动简单排一下。</p>
<a id="more"></a>
<p>进入主题，最近公司做一个新项目，后台是webService，要做iOS版本的客户端，由于我以前不怎么了解这方面，所以云里雾里得摸索了两天，因为后台人员也不清楚我具体要传什么给他，所以。。。。我就两边跑。。。。最终我确定问题还是在于后端，今天上午完美解决，对webService和WSDL以及CXF有了个大概的了解。</p>
<p>我就不做过多的概念介绍了，我很懒不愿复制粘贴，只要说一些细节让大家少走弯路就可以。</p>
<p>在继续往下之前你需要先去了解一些概念：SOAP、WSDL、CXF，和他们之间的关系。这里我觉得这个帖子比较好，推荐一下，Web Service笔记（三）：wsdl 与 soap协议详解 , 对XML或者HTML稍微有点了解看了这篇文章之后对WSDL基本都能大体了解了，这里也感谢一下作者。</p>
<p>假定现在你对它们有个大体的了解，SOAP请求就是你发一段XML给后台，然后后台返回数据给你，它是通用的，参数后台会在XML中提取，所以我们在这个过程中其实就是在于传的XML的内容，本文也会讲到中间遇到的一些细节。</p>
<p>首先不要把它想的很复杂，弄通了封装一下，其实这种方式传的东西个人感觉和普通的GET/POST差不多，甚或更方便。WSDL文档由于我现在不在公司连不上服务器所以就不介绍。</p>
<h2 id="开始吧"><a href="#开始吧" class="headerlink" title="开始吧"></a>开始吧</h2><p>首先XML内容，你的SOAP协议版本要和后台一致，不然后台报错会说版本不一致之类的，这里列出，请自行对比。</p>
<h2 id="SOAP-1-1"><a href="#SOAP-1-1" class="headerlink" title="SOAP 1.1"></a>SOAP 1.1</h2><h3 id="以下是-SOAP-1-1-请求和响应示例。所显示的占位符需替换为实际值。"><a href="#以下是-SOAP-1-1-请求和响应示例。所显示的占位符需替换为实际值。" class="headerlink" title="以下是 SOAP 1.1 请求和响应示例。所显示的占位符需替换为实际值。"></a>以下是 SOAP 1.1 请求和响应示例。所显示的占位符需替换为实际值。</h3><ul>
<li>请求</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /WebServices/MobileCodeWS.asmx HTTP/1.1</span><br><span class="line">Host: webservice.webxml.com.cn</span><br><span class="line">Content-Type: text/xml; charset=utf-8</span><br><span class="line">Content-Length: length</span><br><span class="line">SOAPAction: "http://WebXml.com.cn/getMobileCodeInfo"</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">soap:Envelope</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:xsd</span>=<span class="string">"http://www.w3.org/2001/XMLSchema"</span> <span class="attr">xmlns:soap</span>=<span class="string">"http://schemas.xmlsoap.org/soap/envelope/"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">soap:Body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">getMobileCodeInfo</span> <span class="attr">xmlns</span>=<span class="string">"http://WebXml.com.cn/"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mobileCode</span>&gt;</span>string<span class="tag">&lt;/<span class="name">mobileCode</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">userID</span>&gt;</span>string<span class="tag">&lt;/<span class="name">userID</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">getMobileCodeInfo</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">soap:Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">soap:Envelope</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>响应</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Content-Type: text/xml; charset=utf-8</span><br><span class="line">Content-Length: length</span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">soap:Envelope</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:xsd</span>=<span class="string">"http://www.w3.org/2001/XMLSchema"</span> <span class="attr">xmlns:soap</span>=<span class="string">"http://schemas.xmlsoap.org/soap/envelope/"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">soap:Body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">getMobileCodeInfoResponse</span> <span class="attr">xmlns</span>=<span class="string">"http://WebXml.com.cn/"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">getMobileCodeInfoResult</span>&gt;</span>string<span class="tag">&lt;/<span class="name">getMobileCodeInfoResult</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">getMobileCodeInfoResponse</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">soap:Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">soap:Envelope</span>&gt;</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="SOAP-1-2"><a href="#SOAP-1-2" class="headerlink" title="SOAP 1.2"></a>SOAP 1.2</h2><h3 id="以下是-SOAP-1-2-请求和响应示例。所显示的占位符需替换为实际值。"><a href="#以下是-SOAP-1-2-请求和响应示例。所显示的占位符需替换为实际值。" class="headerlink" title="以下是 SOAP 1.2 请求和响应示例。所显示的占位符需替换为实际值。"></a>以下是 SOAP 1.2 请求和响应示例。所显示的占位符需替换为实际值。</h3><ul>
<li>请求</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /WebServices/MobileCodeWS.asmx HTTP/1.1</span><br><span class="line">Host: webservice.webxml.com.cn</span><br><span class="line">Content-Type: application/soap+xml; charset=utf-8</span><br><span class="line">Content-Length: length</span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">soap12:Envelope</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:xsd</span>=<span class="string">"http://www.w3.org/2001/XMLSchema"</span> <span class="attr">xmlns:soap12</span>=<span class="string">"http://www.w3.org/2003/05/soap-envelope"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">soap12:Body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">getMobileCodeInfo</span> <span class="attr">xmlns</span>=<span class="string">"http://WebXml.com.cn/"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mobileCode</span>&gt;</span>string<span class="tag">&lt;/<span class="name">mobileCode</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">userID</span>&gt;</span>string<span class="tag">&lt;/<span class="name">userID</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">getMobileCodeInfo</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">soap12:Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">soap12:Envelope</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>响应</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Content-Type: application/soap+xml; charset=utf-8</span><br><span class="line">Content-Length: length</span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">soap12:Envelope</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:xsd</span>=<span class="string">"http://www.w3.org/2001/XMLSchema"</span> <span class="attr">xmlns:soap12</span>=<span class="string">"http://www.w3.org/2003/05/soap-envelope"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">soap12:Body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">getMobileCodeInfoResponse</span> <span class="attr">xmlns</span>=<span class="string">"http://WebXml.com.cn/"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">getMobileCodeInfoResult</span>&gt;</span>string<span class="tag">&lt;/<span class="name">getMobileCodeInfoResult</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">getMobileCodeInfoResponse</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">soap12:Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">soap12:Envelope</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h2><p><strong>直接说注意点，拿SOAP 1.1 请求做例子，要传的XML文档为:</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">soap:Envelope</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:xsd</span>=<span class="string">"http://www.w3.org/2001/XMLSchema"</span> <span class="attr">xmlns:soap</span>=<span class="string">"http://schemas.xmlsoap.org/soap/envelope/"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">soap:Body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">getMobileCodeInfo</span> <span class="attr">xmlns</span>=<span class="string">"http://WebXml.com.cn/"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mobileCode</span>&gt;</span>string<span class="tag">&lt;/<span class="name">mobileCode</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">userID</span>&gt;</span>string<span class="tag">&lt;/<span class="name">userID</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">getMobileCodeInfo</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">soap:Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">soap:Envelope</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>&lt;soap: Body&gt;</strong> 标签以外的不用改，head一般也不用传，要调用的方法和参数都包在body里面，比如这个例子中， <strong>getMobileCodeInfo</strong> 是WSDL文档发布的你要调用的方法名，其后接的xmlns是你wsdl文档中对应的 <strong>targetNameSpace</strong> ，这个和你JAVA中的 <strong>package</strong> 名对应，比如你后台JAVA代码中该方法中import的package为 <code>com.xxxx.oooo</code> 那么这里的xmlns就是 <code>ooo.xxxx.com</code> ，<code>mobileCode和userID</code>是这个方法中接收的参数名，那么也就是说该方法在其JAVA后台大概是这个样子</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">getMobileCodeInfo</span> <span class="params">(@WebParam(name=<span class="string">"mobileCode"</span> , name=<span class="string">"userID"</span>)</span> String mobileCode, String userID)</span></span><br></pre></td></tr></table></figure>
<p>对应的WSDL中该operation的input下也应该有两个name就是mobileCode和userID，注意@WebParam(name=”mobileCode” , name=”userID”) 不能少，这个注解让后台认识参数名，少了后台会一直报unexpected element ，我们后台一开始就少了这个，搞了很久。这种情况是参数分开传的情况，有的后台的参数直接一个request，但是里面包含有几个键值对也其实就是相当于几个参数，刚接触的新手在这里很容易绕弯，比如我后台有这个个方法  public login (WebParam(name=”req” ) String req) ，很明显这里只接一个参数，而且叫做req，但是这个请求就是需要账户名和密码，所以在对应的xml中文档应这样写body中内容</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">soap12:Body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">login</span> <span class="attr">xmlns</span>=<span class="string">"http://WebXml.com.cn/"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">req</span>&gt;</span>&#123;@"userNameKey": zhangsan, @"password": pwdpwd&#125;<span class="tag">&lt;/<span class="name">req</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">login</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">soap12:Body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="NSURLSession请求soap"><a href="#NSURLSession请求soap" class="headerlink" title="NSURLSession请求soap"></a>NSURLSession请求soap</h2><p>最后请求地址就是你的wsdl文档中的Endpoint address地址，请求体就是该XML，发个POST请求就完事啦，这里又有事了，本人是强迫症，因为一开始就用的AFN请求，咋请求咋报错，于是跟着网上找的DEMO换NSURLConnection，一不小心成功了一次，但是这个iOS已经废弃了不喜欢，于是用NSURLSession，恩也成功了，但是还是感觉好麻烦，发个NSURLSession请求soap的代码:</p>
 <figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"> <span class="built_in">NSString</span> *soapStr = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\</span></span><br><span class="line"><span class="string"> &lt;soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\</span></span><br><span class="line"><span class="string"> xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"&gt;\</span></span><br><span class="line"><span class="string"> &lt;soap:Header&gt;\</span></span><br><span class="line"><span class="string"> &lt;/soap:Header&gt;\</span></span><br><span class="line"><span class="string"> &lt;soap:Body&gt;\</span></span><br><span class="line"><span class="string"> &lt;login xmlns=\"targetNameSpace地址/\"&gt;\</span></span><br><span class="line"><span class="string"> &lt;param1&gt;test&lt;/param1&gt;\</span></span><br><span class="line"><span class="string"> &lt;param2&gt;test&lt;/param2&gt;\</span></span><br><span class="line"><span class="string"> &lt;/login&gt;\</span></span><br><span class="line"><span class="string"> &lt;/soap:Body&gt;\</span></span><br><span class="line"><span class="string"> &lt;/soap:Envelope&gt;"</span>];</span><br><span class="line">  </span><br><span class="line"> <span class="built_in">NSURL</span> *url=[<span class="built_in">NSURL</span> URLWithString:<span class="string">@"你自己wsdl文档中对应的endpoint address"</span>];</span><br><span class="line">  </span><br><span class="line"> <span class="built_in">NSMutableURLRequest</span> *request=[<span class="built_in">NSMutableURLRequest</span> requestWithURL:url];</span><br><span class="line">  </span><br><span class="line"> <span class="comment">// 访问方式</span></span><br><span class="line"> [request setHTTPMethod:<span class="string">@"POST"</span>];</span><br><span class="line">  </span><br><span class="line"> <span class="comment">// 设置请求头(请求头也可以不设置，前两个设不设置都一样，应该默认的，但是SOAPAction我怎么都设置不对，不设置也可以，干脆不设置了)</span></span><br><span class="line"> <span class="comment">// [request addValue:@"text/xml; charset=utf-8" forHTTPHeaderField:@"Content-Type"];</span></span><br><span class="line"><span class="comment">//  [request addValue:[NSString stringWithFormat:@"%zd", soapStr.length] forHTTPHeaderField:@"Content-Length"];</span></span><br><span class="line"> <span class="comment">//    [request addValue:@"nameSpace/methodName" forHTTPHeaderField:@"SOAPAction"];</span></span><br><span class="line">  </span><br><span class="line"> <span class="comment">// body内容</span></span><br><span class="line"> [request setHTTPBody:[soapStr dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>]];</span><br><span class="line">  </span><br><span class="line"> <span class="built_in">NSURLSession</span> *session = [<span class="built_in">NSURLSession</span> sharedSession];</span><br><span class="line">  </span><br><span class="line"> <span class="built_in">NSURLSessionDataTask</span> *task = [session dataTaskWithRequest:request completionHandler:^(<span class="built_in">NSData</span> * _Nullable data, <span class="built_in">NSURLResponse</span> * _Nullable response, <span class="built_in">NSError</span> * _Nullable error) &#123;</span><br><span class="line"> <span class="built_in">NSString</span> *result = [[<span class="built_in">NSString</span> alloc] initWithData:data  encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">  </span><br><span class="line"> WJLog(<span class="string">@"进入成功回调Session-----结果：%@----请求地址：%@"</span>, result, response.URL);</span><br><span class="line">  </span><br><span class="line"> <span class="keyword">if</span> (error) &#123;</span><br><span class="line"> WJLog(<span class="string">@"Session----失败----%@"</span>, error.localizedDescription);</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;];</span><br><span class="line">  </span><br><span class="line"> [task resume];</span><br></pre></td></tr></table></figure>
<h2 id="AFHTTPRequestOperation-请求"><a href="#AFHTTPRequestOperation-请求" class="headerlink" title="AFHTTPRequestOperation 请求"></a>AFHTTPRequestOperation 请求</h2><p>经过和后台七改八改都无果，我干脆自己了解这些文档规范，在上午确定我操作没错之后，直接说后台那边有问题，然后后台改，重启服务器我请求没有任何进展，最后竟然是什么问题你们知道么。。前一天其实我已经传对了XML，只是后台改动的代码放错了地方，只放到了正式服没有放测试服，我也是，，，醉了，，不过也好，要是那么顺畅我就不会去过多了解这方面了。<br>好了，要传什么，注意点都讲了，现在到了客户端的问题，用官方SDK请求是不是感觉很麻烦？是的，对于用惯了AFN或者自己封装的网络请求工具类的人来说如果每次都要写这多么代码发一次请求太痛苦了，于是我想可不可以用AFN请求SOAP，一开始想用manager发请求，直接把XML当params发POST肯定是直接挂了，于是想要设置HTTPBody要不用AFHTTPRequestOperation？没错这样确实可以，代码如下：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSMutableURLRequest</span> *request=[<span class="built_in">NSMutableURLRequest</span> requestWithURL:url];</span><br><span class="line"> [request setHTTPMethod:<span class="string">@"POST"</span>];</span><br><span class="line"> [request setHTTPBody:[soapStr dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>]];</span><br><span class="line">  </span><br><span class="line"> AFHTTPRequestOperation *operation = [[AFHTTPRequestOperation alloc] initWithRequest:request];</span><br><span class="line">  </span><br><span class="line"> <span class="comment">// 设置返回数据格式</span></span><br><span class="line"> operation.responseSerializer = [AFHTTPResponseSerializer serializer];</span><br><span class="line">  </span><br><span class="line"> [operation setCompletionBlockWithSuccess:^(AFHTTPRequestOperation * _Nonnull operation, <span class="keyword">id</span>  _Nonnull responseObject) &#123;</span><br><span class="line"> <span class="built_in">NSString</span> *result = [[<span class="built_in">NSString</span> alloc] initWithData:responseObject  encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line"> WJLog(<span class="string">@"AFN--成功--结果：%@----返回数据%@"</span>, result, responseObject);</span><br><span class="line"> &#125; failure:^(AFHTTPRequestOperation * _Nonnull operation, <span class="built_in">NSError</span> * _Nonnull error) &#123;</span><br><span class="line"> WJLog(<span class="string">@"AFN--失败--%@"</span>, error.localizedDescription);</span><br><span class="line"> &#125;];</span><br><span class="line">  </span><br><span class="line"> [operation start];</span><br></pre></td></tr></table></figure>
<p>这一看感觉和NSURLSession没多大差别，还是想用manager，关键问题就在于设置request的HTTBbody为XML，但是AFHTTPSessionManager已经把request封装了，默认用的params，怎么改？于是想改动或者添加AFN内部方法，但是总感觉这样不好，万一更新库了又要搞一遍。于是想能否拦截这个request，或者通过manager.requestSerializer设置HTTPBody，敲set浏览一下没有HTTPBody字眼的，用KVC也不行，那样还是相当于把XML当params传了，伤心绝望之时看到这个方法:</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> [manager.requestSerializer setQueryStringSerializationWithBlock:^<span class="built_in">NSString</span> *(<span class="built_in">NSURLRequest</span> *request, <span class="built_in">NSDictionary</span> *parameters, <span class="built_in">NSError</span> *__autoreleasing *error) &#123;</span><br><span class="line">   <span class="comment">// </span></span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure>
<h2 id="简单封装-AFHTTPSessionManager-请求"><a href="#简单封装-AFHTTPSessionManager-请求" class="headerlink" title="简单封装 AFHTTPSessionManager 请求"></a>简单封装 AFHTTPSessionManager 请求</h2><p>一看里面有request 有 params 高兴了，说不定在这里能拦截，于是直接写</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[manager.requestSerializer setQueryStringSerializationWithBlock:^<span class="built_in">NSString</span> *(<span class="built_in">NSURLRequest</span> *request, <span class="built_in">NSDictionary</span> *parameters, <span class="built_in">NSError</span> *__autoreleasing *error) &#123;</span><br><span class="line">    <span class="keyword">return</span> soapStr;</span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure>
<p>请求成功，happy。<br>接下来另一个问题了，简单封装一下，我收到的是二进制，所以把AFN封装成了个工具类，供大家参考，欢迎提出改进</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*  请求SOAP，返回NSData</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*  @param url      请求地址</span></span><br><span class="line"><span class="comment">*  @param soapBody soap的XML中方法和参数段</span></span><br><span class="line"><span class="comment">*  @param success  成功block</span></span><br><span class="line"><span class="comment">*  @param failure  失败block</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">+ (<span class="keyword">void</span>)SOAPData:(<span class="built_in">NSString</span> *)url soapBody:(<span class="built_in">NSString</span> *)soapBody success:(<span class="keyword">void</span> (^)(<span class="keyword">id</span> responseObject))success failure:(<span class="keyword">void</span>(^)(<span class="built_in">NSError</span> *error))failure &#123;</span><br><span class="line">     </span><br><span class="line">    <span class="built_in">NSString</span> *soapStr = [<span class="built_in">NSString</span> stringWithFormat:</span><br><span class="line">                         <span class="string">@"&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\</span></span><br><span class="line"><span class="string">                         &lt;soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\</span></span><br><span class="line"><span class="string">                         xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"&gt;\</span></span><br><span class="line"><span class="string">                         &lt;soap:Header&gt;\</span></span><br><span class="line"><span class="string">                         &lt;/soap:Header&gt;\</span></span><br><span class="line"><span class="string">                         &lt;soap:Body&gt;%@&lt;/soap:Body&gt;\</span></span><br><span class="line"><span class="string">                         &lt;/soap:Envelope&gt;"</span>,soapBody];</span><br><span class="line">     </span><br><span class="line">    AFHTTPSessionManager *manager = [AFHTTPSessionManager manager];</span><br><span class="line">    manager.responseSerializer = [AFXMLParserResponseSerializer serializer];</span><br><span class="line">     </span><br><span class="line">    <span class="comment">// 设置请求超时时间</span></span><br><span class="line">    manager.requestSerializer.timeoutInterval = <span class="number">30</span>;</span><br><span class="line">     </span><br><span class="line">    <span class="comment">// 返回NSData</span></span><br><span class="line">    manager.responseSerializer = [AFHTTPResponseSerializer serializer];</span><br><span class="line">     </span><br><span class="line">    <span class="comment">// 设置请求头，也可以不设置</span></span><br><span class="line">    [manager.requestSerializer setValue:<span class="string">@"application/soap+xml; charset=utf-8"</span> forHTTPHeaderField:<span class="string">@"Content-Type"</span>];</span><br><span class="line">    [manager.requestSerializer setValue:[<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%zd"</span>, soapStr.length] forHTTPHeaderField:<span class="string">@"Content-Length"</span>];</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 设置HTTPBody</span></span><br><span class="line">    [manager.requestSerializer setQueryStringSerializationWithBlock:^<span class="built_in">NSString</span> *(<span class="built_in">NSURLRequest</span> *request, <span class="built_in">NSDictionary</span> *parameters, <span class="built_in">NSError</span> *__autoreleasing *error) &#123;</span><br><span class="line">        <span class="keyword">return</span> soapStr;</span><br><span class="line">    &#125;];</span><br><span class="line">     </span><br><span class="line">    [manager POST:url parameters:soapStr success:^(<span class="built_in">NSURLSessionDataTask</span> * _Nonnull task, <span class="keyword">id</span>  _Nonnull responseObject) &#123;</span><br><span class="line">        <span class="comment">// 把返回的二进制数据转为字符串</span></span><br><span class="line">         <span class="built_in">NSString</span> *result = [[<span class="built_in">NSString</span> alloc] initWithData:responseObject encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">         </span><br><span class="line">        <span class="comment">// 利用正则表达式取出&lt;return&gt;&lt;/return&gt;之间的字符串</span></span><br><span class="line">        <span class="built_in">NSRegularExpression</span> *regular = [[<span class="built_in">NSRegularExpression</span> alloc] initWithPattern:<span class="string">@"(?&lt;=return\\&gt;).*(?=&lt;/return)"</span> options:<span class="built_in">NSRegularExpressionCaseInsensitive</span> error:<span class="literal">nil</span>];</span><br><span class="line">         </span><br><span class="line">        <span class="built_in">NSDictionary</span> *dict = [<span class="built_in">NSDictionary</span> dictionary];</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">NSTextCheckingResult</span> *checkingResult <span class="keyword">in</span> [regular matchesInString:result options:<span class="number">0</span> range:<span class="built_in">NSMakeRange</span>(<span class="number">0</span>, result.length)]) &#123;</span><br><span class="line">             </span><br><span class="line">            <span class="comment">// 得到字典</span></span><br><span class="line">            dict = [<span class="built_in">NSJSONSerialization</span> JSONObjectWithData:[[result substringWithRange:checkingResult.range] dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>] options:<span class="built_in">NSJSONReadingMutableLeaves</span> error:<span class="literal">nil</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 请求成功并且结果有值把结果传出去</span></span><br><span class="line">        <span class="keyword">if</span> (success &amp;&amp; dict) &#123;</span><br><span class="line">            success(dict);</span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">    &#125; failure:^(<span class="built_in">NSURLSessionDataTask</span> * _Nullable task, <span class="built_in">NSError</span> * _Nonnull error) &#123;</span><br><span class="line">        <span class="keyword">if</span> (failure) &#123;</span><br><span class="line">            failure(error);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>原文地址：<a href="http://www.cocoachina.com/bbs/read.php?tid-456019.html" target="_blank" rel="noopener">OC用AFN做Soap请求webService</a></p>
<h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>差不多了，如果有什么问题指正欢迎大家留言。排版真的很丑，大家见谅，洗洗睡了。</p>
<blockquote>
<p>Author: CoderJay <br>如需转载，请注明出处</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;好吧，标题有点拗口。我平时一般不发帖子，因为感觉太花时间了，还是喜欢宅着研究技术。但这个帖子网上资料还是没有很详细的，周末了明天休息，所以现在写下来总结一下，也希望能帮助有这方面需求的开发者朋友，如果错误之处还请谅解，欢迎指出。排版大家就不要在意了，我也不清楚这个支不支持markdown，就直接手动简单排一下。&lt;/p&gt;
    
    </summary>
    
      <category term="Objective-C" scheme="https://wangwanjie.github.io/categories/Objective-C/"/>
    
    
      <category term="AFN" scheme="https://wangwanjie.github.io/tags/AFN/"/>
    
      <category term="Soap" scheme="https://wangwanjie.github.io/tags/Soap/"/>
    
      <category term="WebService" scheme="https://wangwanjie.github.io/tags/WebService/"/>
    
  </entry>
  
  <entry>
    <title>ASI 和 AFN 区别</title>
    <link href="https://wangwanjie.github.io/2015/10/06/ASI-%E5%92%8C-AFN-%E5%8C%BA%E5%88%AB/"/>
    <id>https://wangwanjie.github.io/2015/10/06/ASI-和-AFN-区别/</id>
    <published>2015-10-06T03:51:36.000Z</published>
    <updated>2017-03-20T08:51:24.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一-底层实现"><a href="#一-底层实现" class="headerlink" title="一 底层实现"></a>一 底层实现</h3><ul>
<li>AFN的底层基于OC的NSURLConnection和NSURLSession</li>
<li>ASI的底层基于纯C语言的CFNetwork框架</li>
<li>ASI的运行性能 高于 AFN</li>
</ul>
<a id="more"></a>
<h3 id="二-对服务器返回的数据处理"><a href="#二-对服务器返回的数据处理" class="headerlink" title="二 对服务器返回的数据处理"></a>二 对服务器返回的数据处理</h3><ul>
<li>ASI没有直接提供对服务器数据处理的方式，直接返回data\string</li>
<li>AFN提供了多种对服务器数据处理的方式<ul>
<li>JSON处理</li>
<li>XML处理</li>
<li>其他处理</li>
</ul>
</li>
</ul>
<h3 id="三-监听请求的过程"><a href="#三-监听请求的过程" class="headerlink" title="三 监听请求的过程"></a>三 监听请求的过程</h3><ul>
<li><p>AFN提供了success和failure两个block来监听请求的过程（只能监听成功和失败）</p>
<ul>
<li>success : 请求成功后调用</li>
<li>failure : 请求失败后调用</li>
</ul>
</li>
<li><p>ASI提供了3套方案，每一套方案都能监听请求的完整过程<br>（监听请求开始、接收到响应头信息、接受到具体数据、接受完毕、请求失败）</p>
<ul>
<li>成为代理，遵守协议，实现协议中的代理方法</li>
<li>成为代理，不遵守协议，自定义代理方法</li>
<li>设置block</li>
</ul>
</li>
</ul>
<h3 id="四-在文件下载和文件上传的使用难易度"><a href="#四-在文件下载和文件上传的使用难易度" class="headerlink" title="四 在文件下载和文件上传的使用难易度"></a>四 在文件下载和文件上传的使用难易度</h3><ul>
<li><p>AFN</p>
<ul>
<li>不容易监听下载进度和上传进度</li>
<li>不容易实现断点续传</li>
<li>一般只用来下载不大的文件</li>
</ul>
</li>
<li><p>ASI</p>
<ul>
<li>非常容易实现下载和上传</li>
<li>非常容易监听下载进度和上传进度</li>
<li>非常容易实现断点续传</li>
<li>下载或大或小的文件都行</li>
</ul>
</li>
</ul>
<h3 id="五-ASI提供了更多的实用功能"><a href="#五-ASI提供了更多的实用功能" class="headerlink" title="五 ASI提供了更多的实用功能"></a>五 ASI提供了更多的实用功能</h3><ul>
<li>控制圈圈要不要在请求过程中转</li>
<li>可以轻松地设置请求之间的依赖：每一个请求都是一个 <strong>NSOperation</strong> 对象</li>
<li>可以统一管理所有请求（还专门提供了一个叫做 <strong>ASINetworkQueue</strong> 来管理所有的请求对象）</li>
<li>暂停\恢复\取消所有的请求</li>
<li>监听整个队列中所有请求的下载进度和上传进度</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一-底层实现&quot;&gt;&lt;a href=&quot;#一-底层实现&quot; class=&quot;headerlink&quot; title=&quot;一 底层实现&quot;&gt;&lt;/a&gt;一 底层实现&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;AFN的底层基于OC的NSURLConnection和NSURLSession&lt;/li&gt;
&lt;li&gt;ASI的底层基于纯C语言的CFNetwork框架&lt;/li&gt;
&lt;li&gt;ASI的运行性能 高于 AFN&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Objective-C" scheme="https://wangwanjie.github.io/categories/Objective-C/"/>
    
    
      <category term="网络" scheme="https://wangwanjie.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
      <category term="网络协议" scheme="https://wangwanjie.github.io/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
</feed>
